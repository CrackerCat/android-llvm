// Generated with ./gen_art_module_cc.sh


#pragma GCC diagnostic ignored "-Wframe-larger-than="
#pragma GCC diagnostic ignored "-Wunused-variable"
// TODO: Remove this pragma after llc can generate makeLLVMModuleContents()
// with smaller frame size.

#include <llvm/IR/Argument.h>
#include <llvm/IR/DerivedTypes.h>
#include <llvm/IR/Function.h>
#include <llvm/IR/Module.h>
#include <llvm/IR/Type.h>
#include <llvm/IR/Constants.h>
#include <llvm/IR/Instructions.h>

#include <vector>

using namespace ::llvm;

namespace art {
namespace LLVM {


// Generated by llvm2cpp - DO NOT MODIFY!


Module* makeLLVMModuleContents(Module *mod) {

mod->setModuleIdentifier("art_module.ll");

// Type Definitions
std::vector<Type*>FuncTy_0_args;
StructType *StructTy_union_art__JValue = mod->getTypeByName("union.art::JValue");
if (!StructTy_union_art__JValue) {
StructTy_union_art__JValue = StructType::create(mod->getContext(), "union.art::JValue");
}
std::vector<Type*>StructTy_union_art__JValue_fields;
StructTy_union_art__JValue_fields.push_back(IntegerType::get(mod->getContext(), 64));
if (StructTy_union_art__JValue->isOpaque()) {
StructTy_union_art__JValue->setBody(StructTy_union_art__JValue_fields, /*isPacked=*/false);
}

PointerType* PointerTy_1 = PointerType::get(StructTy_union_art__JValue, 0);

FuncTy_0_args.push_back(PointerTy_1);
FunctionType* FuncTy_0 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_0_args,
 /*isVarArg=*/false);

PointerType* PointerTy_2 = PointerType::get(PointerTy_1, 0);

PointerType* PointerTy_3 = PointerType::get(IntegerType::get(mod->getContext(), 64), 0);

std::vector<Type*>FuncTy_4_args;
FuncTy_4_args.push_back(PointerTy_1);
FunctionType* FuncTy_4 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_4_args,
 /*isVarArg=*/false);

PointerType* PointerTy_5 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);

std::vector<Type*>FuncTy_6_args;
FuncTy_6_args.push_back(PointerTy_1);
FunctionType* FuncTy_6 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_6_args,
 /*isVarArg=*/false);

PointerType* PointerTy_7 = PointerType::get(IntegerType::get(mod->getContext(), 16), 0);

std::vector<Type*>FuncTy_8_args;
FuncTy_8_args.push_back(PointerTy_1);
FunctionType* FuncTy_8 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_8_args,
 /*isVarArg=*/false);

PointerType* PointerTy_9 = PointerType::get(Type::getDoubleTy(mod->getContext()), 0);

std::vector<Type*>FuncTy_10_args;
FuncTy_10_args.push_back(PointerTy_1);
FunctionType* FuncTy_10 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_10_args,
 /*isVarArg=*/false);

PointerType* PointerTy_11 = PointerType::get(Type::getFloatTy(mod->getContext()), 0);

std::vector<Type*>FuncTy_12_args;
FuncTy_12_args.push_back(PointerTy_1);
FunctionType* FuncTy_12 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_12_args,
 /*isVarArg=*/false);

PointerType* PointerTy_13 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);

std::vector<Type*>FuncTy_14_args;
FuncTy_14_args.push_back(PointerTy_1);
FunctionType* FuncTy_14 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_14_args,
 /*isVarArg=*/false);

StructType *StructTy_class_art__mirror__Object = mod->getTypeByName("class.art::mirror::Object");
if (!StructTy_class_art__mirror__Object) {
StructTy_class_art__mirror__Object = StructType::create(mod->getContext(), "class.art::mirror::Object");
}
std::vector<Type*>StructTy_class_art__mirror__Object_fields;
StructType *StructTy_class_art__mirror__HeapReference = mod->getTypeByName("class.art::mirror::HeapReference");
if (!StructTy_class_art__mirror__HeapReference) {
StructTy_class_art__mirror__HeapReference = StructType::create(mod->getContext(), "class.art::mirror::HeapReference");
}
std::vector<Type*>StructTy_class_art__mirror__HeapReference_fields;
StructType *StructTy_class_art__Atomic = mod->getTypeByName("class.art::Atomic");
if (!StructTy_class_art__Atomic) {
StructTy_class_art__Atomic = StructType::create(mod->getContext(), "class.art::Atomic");
}
std::vector<Type*>StructTy_class_art__Atomic_fields;
StructType *StructTy_struct_std____1__atomic = mod->getTypeByName("struct.std::__1::atomic");
if (!StructTy_struct_std____1__atomic) {
StructTy_struct_std____1__atomic = StructType::create(mod->getContext(), "struct.std::__1::atomic");
}
std::vector<Type*>StructTy_struct_std____1__atomic_fields;
StructType *StructTy_struct_std____1____atomic_base = mod->getTypeByName("struct.std::__1::__atomic_base");
if (!StructTy_struct_std____1____atomic_base) {
StructTy_struct_std____1____atomic_base = StructType::create(mod->getContext(), "struct.std::__1::__atomic_base");
}
std::vector<Type*>StructTy_struct_std____1____atomic_base_fields;
StructType *StructTy_struct_std____1____atomic_base_0 = mod->getTypeByName("struct.std::__1::__atomic_base.0");
if (!StructTy_struct_std____1____atomic_base_0) {
StructTy_struct_std____1____atomic_base_0 = StructType::create(mod->getContext(), "struct.std::__1::__atomic_base.0");
}
std::vector<Type*>StructTy_struct_std____1____atomic_base_0_fields;
StructTy_struct_std____1____atomic_base_0_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_struct_std____1____atomic_base_0->isOpaque()) {
StructTy_struct_std____1____atomic_base_0->setBody(StructTy_struct_std____1____atomic_base_0_fields, /*isPacked=*/false);
}

StructTy_struct_std____1____atomic_base_fields.push_back(StructTy_struct_std____1____atomic_base_0);
if (StructTy_struct_std____1____atomic_base->isOpaque()) {
StructTy_struct_std____1____atomic_base->setBody(StructTy_struct_std____1____atomic_base_fields, /*isPacked=*/false);
}

StructTy_struct_std____1__atomic_fields.push_back(StructTy_struct_std____1____atomic_base);
if (StructTy_struct_std____1__atomic->isOpaque()) {
StructTy_struct_std____1__atomic->setBody(StructTy_struct_std____1__atomic_fields, /*isPacked=*/false);
}

StructTy_class_art__Atomic_fields.push_back(StructTy_struct_std____1__atomic);
if (StructTy_class_art__Atomic->isOpaque()) {
StructTy_class_art__Atomic->setBody(StructTy_class_art__Atomic_fields, /*isPacked=*/false);
}

StructTy_class_art__mirror__HeapReference_fields.push_back(StructTy_class_art__Atomic);
if (StructTy_class_art__mirror__HeapReference->isOpaque()) {
StructTy_class_art__mirror__HeapReference->setBody(StructTy_class_art__mirror__HeapReference_fields, /*isPacked=*/false);
}

StructTy_class_art__mirror__Object_fields.push_back(StructTy_class_art__mirror__HeapReference);
StructTy_class_art__mirror__Object_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_class_art__mirror__Object->isOpaque()) {
StructTy_class_art__mirror__Object->setBody(StructTy_class_art__mirror__Object_fields, /*isPacked=*/false);
}

PointerType* PointerTy_15 = PointerType::get(StructTy_class_art__mirror__Object, 0);

std::vector<Type*>FuncTy_16_args;
FuncTy_16_args.push_back(PointerTy_1);
FunctionType* FuncTy_16 = FunctionType::get(
 /*Result=*/PointerTy_15,
 /*Params=*/FuncTy_16_args,
 /*isVarArg=*/false);

PointerType* PointerTy_17 = PointerType::get(PointerTy_15, 0);

std::vector<Type*>FuncTy_18_args;
FuncTy_18_args.push_back(PointerTy_1);
FunctionType* FuncTy_18 = FunctionType::get(
 /*Result=*/PointerTy_17,
 /*Params=*/FuncTy_18_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_19_args;
FuncTy_19_args.push_back(PointerTy_1);
FuncTy_19_args.push_back(IntegerType::get(mod->getContext(), 8));
FunctionType* FuncTy_19 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_19_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_20_args;
FuncTy_20_args.push_back(PointerTy_1);
FuncTy_20_args.push_back(IntegerType::get(mod->getContext(), 16));
FunctionType* FuncTy_20 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_20_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_21_args;
FuncTy_21_args.push_back(PointerTy_1);
FuncTy_21_args.push_back(Type::getDoubleTy(mod->getContext()));
FunctionType* FuncTy_21 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_21_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_22_args;
FuncTy_22_args.push_back(PointerTy_1);
FuncTy_22_args.push_back(Type::getFloatTy(mod->getContext()));
FunctionType* FuncTy_22 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_22_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_23_args;
FuncTy_23_args.push_back(PointerTy_1);
FuncTy_23_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_23 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_23_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_24_args;
FuncTy_24_args.push_back(PointerTy_1);
FuncTy_24_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_24 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_24_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_25_args;
StructType *StructTy_class_art__mirror__ObjectReference = mod->getTypeByName("class.art::mirror::ObjectReference");
if (!StructTy_class_art__mirror__ObjectReference) {
StructTy_class_art__mirror__ObjectReference = StructType::create(mod->getContext(), "class.art::mirror::ObjectReference");
}
std::vector<Type*>StructTy_class_art__mirror__ObjectReference_fields;
StructTy_class_art__mirror__ObjectReference_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_class_art__mirror__ObjectReference->isOpaque()) {
StructTy_class_art__mirror__ObjectReference->setBody(StructTy_class_art__mirror__ObjectReference_fields, /*isPacked=*/false);
}

PointerType* PointerTy_26 = PointerType::get(StructTy_class_art__mirror__ObjectReference, 0);

FuncTy_25_args.push_back(PointerTy_26);
FunctionType* FuncTy_25 = FunctionType::get(
 /*Result=*/PointerTy_15,
 /*Params=*/FuncTy_25_args,
 /*isVarArg=*/false);

PointerType* PointerTy_27 = PointerType::get(PointerTy_26, 0);

std::vector<Type*>FuncTy_29_args;
FuncTy_29_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_29 = FunctionType::get(
 /*Result=*/PointerTy_15,
 /*Params=*/FuncTy_29_args,
 /*isVarArg=*/false);

PointerType* PointerTy_28 = PointerType::get(FuncTy_29, 0);

std::vector<Type*>FuncTy_30_args;
FuncTy_30_args.push_back(PointerTy_15);
FunctionType* FuncTy_30 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_30_args,
 /*isVarArg=*/false);

StructType *StructTy_class_art__mirror__CompressedReference = mod->getTypeByName("class.art::mirror::CompressedReference");
if (!StructTy_class_art__mirror__CompressedReference) {
StructTy_class_art__mirror__CompressedReference = StructType::create(mod->getContext(), "class.art::mirror::CompressedReference");
}
std::vector<Type*>StructTy_class_art__mirror__CompressedReference_fields;
StructTy_class_art__mirror__CompressedReference_fields.push_back(StructTy_class_art__mirror__ObjectReference);
if (StructTy_class_art__mirror__CompressedReference->isOpaque()) {
StructTy_class_art__mirror__CompressedReference->setBody(StructTy_class_art__mirror__CompressedReference_fields, /*isPacked=*/false);
}

PointerType* PointerTy_31 = PointerType::get(StructTy_class_art__mirror__CompressedReference, 0);

std::vector<Type*>FuncTy_33_args;
FuncTy_33_args.push_back(PointerTy_31);
FuncTy_33_args.push_back(PointerTy_15);
FunctionType* FuncTy_33 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_33_args,
 /*isVarArg=*/false);

PointerType* PointerTy_32 = PointerType::get(FuncTy_33, 0);

std::vector<Type*>FuncTy_34_args;
FuncTy_34_args.push_back(PointerTy_5);
FuncTy_34_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_34_args.push_back(PointerTy_5);
FunctionType* FuncTy_34 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_34_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_35_args;
FuncTy_35_args.push_back(PointerTy_5);
FuncTy_35_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_35 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_35_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_36_args;
FuncTy_36_args.push_back(PointerTy_5);
FuncTy_36_args.push_back(PointerTy_5);
FuncTy_36_args.push_back(PointerTy_1);
FunctionType* FuncTy_36 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_36_args,
 /*isVarArg=*/true);

std::vector<Type*>FuncTy_37_args;
FuncTy_37_args.push_back(PointerTy_5);
FuncTy_37_args.push_back(PointerTy_5);
FunctionType* FuncTy_37 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_37_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_38_args;
FuncTy_38_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_38_args.push_back(PointerTy_5);
FunctionType* FuncTy_38 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_38_args,
 /*isVarArg=*/true);

std::vector<Type*>FuncTy_39_args;
FuncTy_39_args.push_back(PointerTy_5);
FuncTy_39_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_39_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_39 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_39_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_40_args;
FuncTy_40_args.push_back(PointerTy_5);
FuncTy_40_args.push_back(PointerTy_5);
FunctionType* FuncTy_40 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 1),
 /*Params=*/FuncTy_40_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_41_args;
FuncTy_41_args.push_back(PointerTy_5);
FuncTy_41_args.push_back(PointerTy_5);
FuncTy_41_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_41_args.push_back(PointerTy_5);
FunctionType* FuncTy_41 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_41_args,
 /*isVarArg=*/false);

StructType *StructTy_class__jobject = mod->getTypeByName("class._jobject");
if (!StructTy_class__jobject) {
StructTy_class__jobject = StructType::create(mod->getContext(), "class._jobject");
}
std::vector<Type*>StructTy_class__jobject_fields;
StructTy_class__jobject_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jobject->isOpaque()) {
StructTy_class__jobject->setBody(StructTy_class__jobject_fields, /*isPacked=*/false);
}

PointerType* PointerTy_42 = PointerType::get(StructTy_class__jobject, 0);

std::vector<Type*>FuncTy_43_args;
StructType *StructTy_class_art__JNIEnvExt = mod->getTypeByName("class.art::JNIEnvExt");
if (!StructTy_class_art__JNIEnvExt) {
StructTy_class_art__JNIEnvExt = StructType::create(mod->getContext(), "class.art::JNIEnvExt");
}
std::vector<Type*>StructTy_class_art__JNIEnvExt_fields;
StructType *StructTy_struct__JNIEnv = mod->getTypeByName("struct._JNIEnv");
if (!StructTy_struct__JNIEnv) {
StructTy_struct__JNIEnv = StructType::create(mod->getContext(), "struct._JNIEnv");
}
std::vector<Type*>StructTy_struct__JNIEnv_fields;
StructType *StructTy_struct_JNINativeInterface = mod->getTypeByName("struct.JNINativeInterface");
if (!StructTy_struct_JNINativeInterface) {
StructTy_struct_JNINativeInterface = StructType::create(mod->getContext(), "struct.JNINativeInterface");
}
std::vector<Type*>StructTy_struct_JNINativeInterface_fields;
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_5);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_5);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_5);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_5);
std::vector<Type*>FuncTy_47_args;
PointerType* PointerTy_48 = PointerType::get(StructTy_struct__JNIEnv, 0);

FuncTy_47_args.push_back(PointerTy_48);
FunctionType* FuncTy_47 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_47_args,
 /*isVarArg=*/false);

PointerType* PointerTy_46 = PointerType::get(FuncTy_47, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_46);
std::vector<Type*>FuncTy_50_args;
FuncTy_50_args.push_back(PointerTy_48);
FuncTy_50_args.push_back(PointerTy_5);
FuncTy_50_args.push_back(PointerTy_42);
FuncTy_50_args.push_back(PointerTy_5);
FuncTy_50_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jclass = mod->getTypeByName("class._jclass");
if (!StructTy_class__jclass) {
StructTy_class__jclass = StructType::create(mod->getContext(), "class._jclass");
}
std::vector<Type*>StructTy_class__jclass_fields;
StructTy_class__jclass_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jclass->isOpaque()) {
StructTy_class__jclass->setBody(StructTy_class__jclass_fields, /*isPacked=*/false);
}

PointerType* PointerTy_51 = PointerType::get(StructTy_class__jclass, 0);

FunctionType* FuncTy_50 = FunctionType::get(
 /*Result=*/PointerTy_51,
 /*Params=*/FuncTy_50_args,
 /*isVarArg=*/false);

PointerType* PointerTy_49 = PointerType::get(FuncTy_50, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_49);
std::vector<Type*>FuncTy_53_args;
FuncTy_53_args.push_back(PointerTy_48);
FuncTy_53_args.push_back(PointerTy_5);
FunctionType* FuncTy_53 = FunctionType::get(
 /*Result=*/PointerTy_51,
 /*Params=*/FuncTy_53_args,
 /*isVarArg=*/false);

PointerType* PointerTy_52 = PointerType::get(FuncTy_53, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_52);
std::vector<Type*>FuncTy_55_args;
FuncTy_55_args.push_back(PointerTy_48);
FuncTy_55_args.push_back(PointerTy_42);
StructType *StructTy_struct__jmethodID = mod->getTypeByName("struct._jmethodID");
if (!StructTy_struct__jmethodID) {
StructTy_struct__jmethodID = StructType::create(mod->getContext(), "struct._jmethodID");
}
std::vector<Type*>StructTy_struct__jmethodID_fields;
if (StructTy_struct__jmethodID->isOpaque()) {
StructTy_struct__jmethodID->setBody(StructTy_struct__jmethodID_fields, /*isPacked=*/false);
}

PointerType* PointerTy_56 = PointerType::get(StructTy_struct__jmethodID, 0);

FunctionType* FuncTy_55 = FunctionType::get(
 /*Result=*/PointerTy_56,
 /*Params=*/FuncTy_55_args,
 /*isVarArg=*/false);

PointerType* PointerTy_54 = PointerType::get(FuncTy_55, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_54);
std::vector<Type*>FuncTy_58_args;
FuncTy_58_args.push_back(PointerTy_48);
FuncTy_58_args.push_back(PointerTy_42);
StructType *StructTy_struct__jfieldID = mod->getTypeByName("struct._jfieldID");
if (!StructTy_struct__jfieldID) {
StructTy_struct__jfieldID = StructType::create(mod->getContext(), "struct._jfieldID");
}
std::vector<Type*>StructTy_struct__jfieldID_fields;
if (StructTy_struct__jfieldID->isOpaque()) {
StructTy_struct__jfieldID->setBody(StructTy_struct__jfieldID_fields, /*isPacked=*/false);
}

PointerType* PointerTy_59 = PointerType::get(StructTy_struct__jfieldID, 0);

FunctionType* FuncTy_58 = FunctionType::get(
 /*Result=*/PointerTy_59,
 /*Params=*/FuncTy_58_args,
 /*isVarArg=*/false);

PointerType* PointerTy_57 = PointerType::get(FuncTy_58, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_57);
std::vector<Type*>FuncTy_61_args;
FuncTy_61_args.push_back(PointerTy_48);
FuncTy_61_args.push_back(PointerTy_51);
FuncTy_61_args.push_back(PointerTy_56);
FuncTy_61_args.push_back(IntegerType::get(mod->getContext(), 8));
FunctionType* FuncTy_61 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_61_args,
 /*isVarArg=*/false);

PointerType* PointerTy_60 = PointerType::get(FuncTy_61, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_60);
std::vector<Type*>FuncTy_63_args;
FuncTy_63_args.push_back(PointerTy_48);
FuncTy_63_args.push_back(PointerTy_51);
FunctionType* FuncTy_63 = FunctionType::get(
 /*Result=*/PointerTy_51,
 /*Params=*/FuncTy_63_args,
 /*isVarArg=*/false);

PointerType* PointerTy_62 = PointerType::get(FuncTy_63, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_62);
std::vector<Type*>FuncTy_65_args;
FuncTy_65_args.push_back(PointerTy_48);
FuncTy_65_args.push_back(PointerTy_51);
FuncTy_65_args.push_back(PointerTy_51);
FunctionType* FuncTy_65 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_65_args,
 /*isVarArg=*/false);

PointerType* PointerTy_64 = PointerType::get(FuncTy_65, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_64);
std::vector<Type*>FuncTy_67_args;
FuncTy_67_args.push_back(PointerTy_48);
FuncTy_67_args.push_back(PointerTy_51);
FuncTy_67_args.push_back(PointerTy_59);
FuncTy_67_args.push_back(IntegerType::get(mod->getContext(), 8));
FunctionType* FuncTy_67 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_67_args,
 /*isVarArg=*/false);

PointerType* PointerTy_66 = PointerType::get(FuncTy_67, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_66);
std::vector<Type*>FuncTy_69_args;
FuncTy_69_args.push_back(PointerTy_48);
StructType *StructTy_class__jthrowable = mod->getTypeByName("class._jthrowable");
if (!StructTy_class__jthrowable) {
StructTy_class__jthrowable = StructType::create(mod->getContext(), "class._jthrowable");
}
std::vector<Type*>StructTy_class__jthrowable_fields;
StructTy_class__jthrowable_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jthrowable->isOpaque()) {
StructTy_class__jthrowable->setBody(StructTy_class__jthrowable_fields, /*isPacked=*/false);
}

PointerType* PointerTy_70 = PointerType::get(StructTy_class__jthrowable, 0);

FuncTy_69_args.push_back(PointerTy_70);
FunctionType* FuncTy_69 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_69_args,
 /*isVarArg=*/false);

PointerType* PointerTy_68 = PointerType::get(FuncTy_69, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_68);
std::vector<Type*>FuncTy_72_args;
FuncTy_72_args.push_back(PointerTy_48);
FuncTy_72_args.push_back(PointerTy_51);
FuncTy_72_args.push_back(PointerTy_5);
FunctionType* FuncTy_72 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_72_args,
 /*isVarArg=*/false);

PointerType* PointerTy_71 = PointerType::get(FuncTy_72, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_71);
std::vector<Type*>FuncTy_74_args;
FuncTy_74_args.push_back(PointerTy_48);
FunctionType* FuncTy_74 = FunctionType::get(
 /*Result=*/PointerTy_70,
 /*Params=*/FuncTy_74_args,
 /*isVarArg=*/false);

PointerType* PointerTy_73 = PointerType::get(FuncTy_74, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_73);
std::vector<Type*>FuncTy_76_args;
FuncTy_76_args.push_back(PointerTy_48);
FunctionType* FuncTy_76 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_76_args,
 /*isVarArg=*/false);

PointerType* PointerTy_75 = PointerType::get(FuncTy_76, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_75);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_75);
std::vector<Type*>FuncTy_78_args;
FuncTy_78_args.push_back(PointerTy_48);
FuncTy_78_args.push_back(PointerTy_5);
FunctionType* FuncTy_78 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_78_args,
 /*isVarArg=*/false);

PointerType* PointerTy_77 = PointerType::get(FuncTy_78, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_77);
std::vector<Type*>FuncTy_80_args;
FuncTy_80_args.push_back(PointerTy_48);
FuncTy_80_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_80 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_80_args,
 /*isVarArg=*/false);

PointerType* PointerTy_79 = PointerType::get(FuncTy_80, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_79);
std::vector<Type*>FuncTy_82_args;
FuncTy_82_args.push_back(PointerTy_48);
FuncTy_82_args.push_back(PointerTy_42);
FunctionType* FuncTy_82 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_82_args,
 /*isVarArg=*/false);

PointerType* PointerTy_81 = PointerType::get(FuncTy_82, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_81);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_81);
std::vector<Type*>FuncTy_84_args;
FuncTy_84_args.push_back(PointerTy_48);
FuncTy_84_args.push_back(PointerTy_42);
FunctionType* FuncTy_84 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_84_args,
 /*isVarArg=*/false);

PointerType* PointerTy_83 = PointerType::get(FuncTy_84, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_83);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_83);
std::vector<Type*>FuncTy_86_args;
FuncTy_86_args.push_back(PointerTy_48);
FuncTy_86_args.push_back(PointerTy_42);
FuncTy_86_args.push_back(PointerTy_42);
FunctionType* FuncTy_86 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_86_args,
 /*isVarArg=*/false);

PointerType* PointerTy_85 = PointerType::get(FuncTy_86, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_85);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_81);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_79);
std::vector<Type*>FuncTy_88_args;
FuncTy_88_args.push_back(PointerTy_48);
FuncTy_88_args.push_back(PointerTy_51);
FunctionType* FuncTy_88 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_88_args,
 /*isVarArg=*/false);

PointerType* PointerTy_87 = PointerType::get(FuncTy_88, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_87);
std::vector<Type*>FuncTy_90_args;
FuncTy_90_args.push_back(PointerTy_48);
FuncTy_90_args.push_back(PointerTy_51);
FuncTy_90_args.push_back(PointerTy_56);
FunctionType* FuncTy_90 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_90_args,
 /*isVarArg=*/true);

PointerType* PointerTy_89 = PointerType::get(FuncTy_90, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_89);
std::vector<Type*>FuncTy_92_args;
FuncTy_92_args.push_back(PointerTy_48);
FuncTy_92_args.push_back(PointerTy_51);
FuncTy_92_args.push_back(PointerTy_56);
StructType *StructTy_struct_std____va_list = mod->getTypeByName("struct.std::__va_list");
if (!StructTy_struct_std____va_list) {
StructTy_struct_std____va_list = StructType::create(mod->getContext(), "struct.std::__va_list");
}
std::vector<Type*>StructTy_struct_std____va_list_fields;
StructTy_struct_std____va_list_fields.push_back(PointerTy_5);
StructTy_struct_std____va_list_fields.push_back(PointerTy_5);
StructTy_struct_std____va_list_fields.push_back(PointerTy_5);
StructTy_struct_std____va_list_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_std____va_list_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_struct_std____va_list->isOpaque()) {
StructTy_struct_std____va_list->setBody(StructTy_struct_std____va_list_fields, /*isPacked=*/false);
}

PointerType* PointerTy_93 = PointerType::get(StructTy_struct_std____va_list, 0);

FuncTy_92_args.push_back(PointerTy_93);
FunctionType* FuncTy_92 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_92_args,
 /*isVarArg=*/false);

PointerType* PointerTy_91 = PointerType::get(FuncTy_92, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_91);
std::vector<Type*>FuncTy_95_args;
FuncTy_95_args.push_back(PointerTy_48);
FuncTy_95_args.push_back(PointerTy_51);
FuncTy_95_args.push_back(PointerTy_56);
StructType *StructTy_union_jvalue = mod->getTypeByName("union.jvalue");
if (!StructTy_union_jvalue) {
StructTy_union_jvalue = StructType::create(mod->getContext(), "union.jvalue");
}
std::vector<Type*>StructTy_union_jvalue_fields;
StructTy_union_jvalue_fields.push_back(IntegerType::get(mod->getContext(), 64));
if (StructTy_union_jvalue->isOpaque()) {
StructTy_union_jvalue->setBody(StructTy_union_jvalue_fields, /*isPacked=*/false);
}

PointerType* PointerTy_96 = PointerType::get(StructTy_union_jvalue, 0);

FuncTy_95_args.push_back(PointerTy_96);
FunctionType* FuncTy_95 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_95_args,
 /*isVarArg=*/false);

PointerType* PointerTy_94 = PointerType::get(FuncTy_95, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_94);
std::vector<Type*>FuncTy_98_args;
FuncTy_98_args.push_back(PointerTy_48);
FuncTy_98_args.push_back(PointerTy_42);
FunctionType* FuncTy_98 = FunctionType::get(
 /*Result=*/PointerTy_51,
 /*Params=*/FuncTy_98_args,
 /*isVarArg=*/false);

PointerType* PointerTy_97 = PointerType::get(FuncTy_98, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_97);
std::vector<Type*>FuncTy_100_args;
FuncTy_100_args.push_back(PointerTy_48);
FuncTy_100_args.push_back(PointerTy_42);
FuncTy_100_args.push_back(PointerTy_51);
FunctionType* FuncTy_100 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_100_args,
 /*isVarArg=*/false);

PointerType* PointerTy_99 = PointerType::get(FuncTy_100, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_99);
std::vector<Type*>FuncTy_102_args;
FuncTy_102_args.push_back(PointerTy_48);
FuncTy_102_args.push_back(PointerTy_51);
FuncTy_102_args.push_back(PointerTy_5);
FuncTy_102_args.push_back(PointerTy_5);
FunctionType* FuncTy_102 = FunctionType::get(
 /*Result=*/PointerTy_56,
 /*Params=*/FuncTy_102_args,
 /*isVarArg=*/false);

PointerType* PointerTy_101 = PointerType::get(FuncTy_102, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_101);
std::vector<Type*>FuncTy_104_args;
FuncTy_104_args.push_back(PointerTy_48);
FuncTy_104_args.push_back(PointerTy_42);
FuncTy_104_args.push_back(PointerTy_56);
FunctionType* FuncTy_104 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_104_args,
 /*isVarArg=*/true);

PointerType* PointerTy_103 = PointerType::get(FuncTy_104, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_103);
std::vector<Type*>FuncTy_106_args;
FuncTy_106_args.push_back(PointerTy_48);
FuncTy_106_args.push_back(PointerTy_42);
FuncTy_106_args.push_back(PointerTy_56);
FuncTy_106_args.push_back(PointerTy_93);
FunctionType* FuncTy_106 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_106_args,
 /*isVarArg=*/false);

PointerType* PointerTy_105 = PointerType::get(FuncTy_106, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_105);
std::vector<Type*>FuncTy_108_args;
FuncTy_108_args.push_back(PointerTy_48);
FuncTy_108_args.push_back(PointerTy_42);
FuncTy_108_args.push_back(PointerTy_56);
FuncTy_108_args.push_back(PointerTy_96);
FunctionType* FuncTy_108 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_108_args,
 /*isVarArg=*/false);

PointerType* PointerTy_107 = PointerType::get(FuncTy_108, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_107);
std::vector<Type*>FuncTy_110_args;
FuncTy_110_args.push_back(PointerTy_48);
FuncTy_110_args.push_back(PointerTy_42);
FuncTy_110_args.push_back(PointerTy_56);
FunctionType* FuncTy_110 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_110_args,
 /*isVarArg=*/true);

PointerType* PointerTy_109 = PointerType::get(FuncTy_110, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_109);
std::vector<Type*>FuncTy_112_args;
FuncTy_112_args.push_back(PointerTy_48);
FuncTy_112_args.push_back(PointerTy_42);
FuncTy_112_args.push_back(PointerTy_56);
FuncTy_112_args.push_back(PointerTy_93);
FunctionType* FuncTy_112 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_112_args,
 /*isVarArg=*/false);

PointerType* PointerTy_111 = PointerType::get(FuncTy_112, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_111);
std::vector<Type*>FuncTy_114_args;
FuncTy_114_args.push_back(PointerTy_48);
FuncTy_114_args.push_back(PointerTy_42);
FuncTy_114_args.push_back(PointerTy_56);
FuncTy_114_args.push_back(PointerTy_96);
FunctionType* FuncTy_114 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_114_args,
 /*isVarArg=*/false);

PointerType* PointerTy_113 = PointerType::get(FuncTy_114, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_113);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_109);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_111);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_113);
std::vector<Type*>FuncTy_116_args;
FuncTy_116_args.push_back(PointerTy_48);
FuncTy_116_args.push_back(PointerTy_42);
FuncTy_116_args.push_back(PointerTy_56);
FunctionType* FuncTy_116 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_116_args,
 /*isVarArg=*/true);

PointerType* PointerTy_115 = PointerType::get(FuncTy_116, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_115);
std::vector<Type*>FuncTy_118_args;
FuncTy_118_args.push_back(PointerTy_48);
FuncTy_118_args.push_back(PointerTy_42);
FuncTy_118_args.push_back(PointerTy_56);
FuncTy_118_args.push_back(PointerTy_93);
FunctionType* FuncTy_118 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_118_args,
 /*isVarArg=*/false);

PointerType* PointerTy_117 = PointerType::get(FuncTy_118, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_117);
std::vector<Type*>FuncTy_120_args;
FuncTy_120_args.push_back(PointerTy_48);
FuncTy_120_args.push_back(PointerTy_42);
FuncTy_120_args.push_back(PointerTy_56);
FuncTy_120_args.push_back(PointerTy_96);
FunctionType* FuncTy_120 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_120_args,
 /*isVarArg=*/false);

PointerType* PointerTy_119 = PointerType::get(FuncTy_120, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_119);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_115);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_117);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_119);
std::vector<Type*>FuncTy_122_args;
FuncTy_122_args.push_back(PointerTy_48);
FuncTy_122_args.push_back(PointerTy_42);
FuncTy_122_args.push_back(PointerTy_56);
FunctionType* FuncTy_122 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_122_args,
 /*isVarArg=*/true);

PointerType* PointerTy_121 = PointerType::get(FuncTy_122, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_121);
std::vector<Type*>FuncTy_124_args;
FuncTy_124_args.push_back(PointerTy_48);
FuncTy_124_args.push_back(PointerTy_42);
FuncTy_124_args.push_back(PointerTy_56);
FuncTy_124_args.push_back(PointerTy_93);
FunctionType* FuncTy_124 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_124_args,
 /*isVarArg=*/false);

PointerType* PointerTy_123 = PointerType::get(FuncTy_124, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_123);
std::vector<Type*>FuncTy_126_args;
FuncTy_126_args.push_back(PointerTy_48);
FuncTy_126_args.push_back(PointerTy_42);
FuncTy_126_args.push_back(PointerTy_56);
FuncTy_126_args.push_back(PointerTy_96);
FunctionType* FuncTy_126 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_126_args,
 /*isVarArg=*/false);

PointerType* PointerTy_125 = PointerType::get(FuncTy_126, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_125);
std::vector<Type*>FuncTy_128_args;
FuncTy_128_args.push_back(PointerTy_48);
FuncTy_128_args.push_back(PointerTy_42);
FuncTy_128_args.push_back(PointerTy_56);
FunctionType* FuncTy_128 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_128_args,
 /*isVarArg=*/true);

PointerType* PointerTy_127 = PointerType::get(FuncTy_128, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_127);
std::vector<Type*>FuncTy_130_args;
FuncTy_130_args.push_back(PointerTy_48);
FuncTy_130_args.push_back(PointerTy_42);
FuncTy_130_args.push_back(PointerTy_56);
FuncTy_130_args.push_back(PointerTy_93);
FunctionType* FuncTy_130 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_130_args,
 /*isVarArg=*/false);

PointerType* PointerTy_129 = PointerType::get(FuncTy_130, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_129);
std::vector<Type*>FuncTy_132_args;
FuncTy_132_args.push_back(PointerTy_48);
FuncTy_132_args.push_back(PointerTy_42);
FuncTy_132_args.push_back(PointerTy_56);
FuncTy_132_args.push_back(PointerTy_96);
FunctionType* FuncTy_132 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_132_args,
 /*isVarArg=*/false);

PointerType* PointerTy_131 = PointerType::get(FuncTy_132, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_131);
std::vector<Type*>FuncTy_134_args;
FuncTy_134_args.push_back(PointerTy_48);
FuncTy_134_args.push_back(PointerTy_42);
FuncTy_134_args.push_back(PointerTy_56);
FunctionType* FuncTy_134 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_134_args,
 /*isVarArg=*/true);

PointerType* PointerTy_133 = PointerType::get(FuncTy_134, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_133);
std::vector<Type*>FuncTy_136_args;
FuncTy_136_args.push_back(PointerTy_48);
FuncTy_136_args.push_back(PointerTy_42);
FuncTy_136_args.push_back(PointerTy_56);
FuncTy_136_args.push_back(PointerTy_93);
FunctionType* FuncTy_136 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_136_args,
 /*isVarArg=*/false);

PointerType* PointerTy_135 = PointerType::get(FuncTy_136, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_135);
std::vector<Type*>FuncTy_138_args;
FuncTy_138_args.push_back(PointerTy_48);
FuncTy_138_args.push_back(PointerTy_42);
FuncTy_138_args.push_back(PointerTy_56);
FuncTy_138_args.push_back(PointerTy_96);
FunctionType* FuncTy_138 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_138_args,
 /*isVarArg=*/false);

PointerType* PointerTy_137 = PointerType::get(FuncTy_138, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_137);
std::vector<Type*>FuncTy_140_args;
FuncTy_140_args.push_back(PointerTy_48);
FuncTy_140_args.push_back(PointerTy_42);
FuncTy_140_args.push_back(PointerTy_56);
FunctionType* FuncTy_140 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_140_args,
 /*isVarArg=*/true);

PointerType* PointerTy_139 = PointerType::get(FuncTy_140, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_139);
std::vector<Type*>FuncTy_142_args;
FuncTy_142_args.push_back(PointerTy_48);
FuncTy_142_args.push_back(PointerTy_42);
FuncTy_142_args.push_back(PointerTy_56);
FuncTy_142_args.push_back(PointerTy_93);
FunctionType* FuncTy_142 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_142_args,
 /*isVarArg=*/false);

PointerType* PointerTy_141 = PointerType::get(FuncTy_142, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_141);
std::vector<Type*>FuncTy_144_args;
FuncTy_144_args.push_back(PointerTy_48);
FuncTy_144_args.push_back(PointerTy_42);
FuncTy_144_args.push_back(PointerTy_56);
FuncTy_144_args.push_back(PointerTy_96);
FunctionType* FuncTy_144 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_144_args,
 /*isVarArg=*/false);

PointerType* PointerTy_143 = PointerType::get(FuncTy_144, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_143);
std::vector<Type*>FuncTy_146_args;
FuncTy_146_args.push_back(PointerTy_48);
FuncTy_146_args.push_back(PointerTy_42);
FuncTy_146_args.push_back(PointerTy_56);
FunctionType* FuncTy_146 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_146_args,
 /*isVarArg=*/true);

PointerType* PointerTy_145 = PointerType::get(FuncTy_146, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_145);
std::vector<Type*>FuncTy_148_args;
FuncTy_148_args.push_back(PointerTy_48);
FuncTy_148_args.push_back(PointerTy_42);
FuncTy_148_args.push_back(PointerTy_56);
FuncTy_148_args.push_back(PointerTy_93);
FunctionType* FuncTy_148 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_148_args,
 /*isVarArg=*/false);

PointerType* PointerTy_147 = PointerType::get(FuncTy_148, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_147);
std::vector<Type*>FuncTy_150_args;
FuncTy_150_args.push_back(PointerTy_48);
FuncTy_150_args.push_back(PointerTy_42);
FuncTy_150_args.push_back(PointerTy_56);
FuncTy_150_args.push_back(PointerTy_96);
FunctionType* FuncTy_150 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_150_args,
 /*isVarArg=*/false);

PointerType* PointerTy_149 = PointerType::get(FuncTy_150, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_149);
std::vector<Type*>FuncTy_152_args;
FuncTy_152_args.push_back(PointerTy_48);
FuncTy_152_args.push_back(PointerTy_42);
FuncTy_152_args.push_back(PointerTy_51);
FuncTy_152_args.push_back(PointerTy_56);
FunctionType* FuncTy_152 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_152_args,
 /*isVarArg=*/true);

PointerType* PointerTy_151 = PointerType::get(FuncTy_152, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_151);
std::vector<Type*>FuncTy_154_args;
FuncTy_154_args.push_back(PointerTy_48);
FuncTy_154_args.push_back(PointerTy_42);
FuncTy_154_args.push_back(PointerTy_51);
FuncTy_154_args.push_back(PointerTy_56);
FuncTy_154_args.push_back(PointerTy_93);
FunctionType* FuncTy_154 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_154_args,
 /*isVarArg=*/false);

PointerType* PointerTy_153 = PointerType::get(FuncTy_154, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_153);
std::vector<Type*>FuncTy_156_args;
FuncTy_156_args.push_back(PointerTy_48);
FuncTy_156_args.push_back(PointerTy_42);
FuncTy_156_args.push_back(PointerTy_51);
FuncTy_156_args.push_back(PointerTy_56);
FuncTy_156_args.push_back(PointerTy_96);
FunctionType* FuncTy_156 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_156_args,
 /*isVarArg=*/false);

PointerType* PointerTy_155 = PointerType::get(FuncTy_156, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_155);
std::vector<Type*>FuncTy_158_args;
FuncTy_158_args.push_back(PointerTy_48);
FuncTy_158_args.push_back(PointerTy_42);
FuncTy_158_args.push_back(PointerTy_51);
FuncTy_158_args.push_back(PointerTy_56);
FunctionType* FuncTy_158 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_158_args,
 /*isVarArg=*/true);

PointerType* PointerTy_157 = PointerType::get(FuncTy_158, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_157);
std::vector<Type*>FuncTy_160_args;
FuncTy_160_args.push_back(PointerTy_48);
FuncTy_160_args.push_back(PointerTy_42);
FuncTy_160_args.push_back(PointerTy_51);
FuncTy_160_args.push_back(PointerTy_56);
FuncTy_160_args.push_back(PointerTy_93);
FunctionType* FuncTy_160 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_160_args,
 /*isVarArg=*/false);

PointerType* PointerTy_159 = PointerType::get(FuncTy_160, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_159);
std::vector<Type*>FuncTy_162_args;
FuncTy_162_args.push_back(PointerTy_48);
FuncTy_162_args.push_back(PointerTy_42);
FuncTy_162_args.push_back(PointerTy_51);
FuncTy_162_args.push_back(PointerTy_56);
FuncTy_162_args.push_back(PointerTy_96);
FunctionType* FuncTy_162 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_162_args,
 /*isVarArg=*/false);

PointerType* PointerTy_161 = PointerType::get(FuncTy_162, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_161);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_157);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_159);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_161);
std::vector<Type*>FuncTy_164_args;
FuncTy_164_args.push_back(PointerTy_48);
FuncTy_164_args.push_back(PointerTy_42);
FuncTy_164_args.push_back(PointerTy_51);
FuncTy_164_args.push_back(PointerTy_56);
FunctionType* FuncTy_164 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_164_args,
 /*isVarArg=*/true);

PointerType* PointerTy_163 = PointerType::get(FuncTy_164, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_163);
std::vector<Type*>FuncTy_166_args;
FuncTy_166_args.push_back(PointerTy_48);
FuncTy_166_args.push_back(PointerTy_42);
FuncTy_166_args.push_back(PointerTy_51);
FuncTy_166_args.push_back(PointerTy_56);
FuncTy_166_args.push_back(PointerTy_93);
FunctionType* FuncTy_166 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_166_args,
 /*isVarArg=*/false);

PointerType* PointerTy_165 = PointerType::get(FuncTy_166, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_165);
std::vector<Type*>FuncTy_168_args;
FuncTy_168_args.push_back(PointerTy_48);
FuncTy_168_args.push_back(PointerTy_42);
FuncTy_168_args.push_back(PointerTy_51);
FuncTy_168_args.push_back(PointerTy_56);
FuncTy_168_args.push_back(PointerTy_96);
FunctionType* FuncTy_168 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_168_args,
 /*isVarArg=*/false);

PointerType* PointerTy_167 = PointerType::get(FuncTy_168, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_167);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_163);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_165);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_167);
std::vector<Type*>FuncTy_170_args;
FuncTy_170_args.push_back(PointerTy_48);
FuncTy_170_args.push_back(PointerTy_42);
FuncTy_170_args.push_back(PointerTy_51);
FuncTy_170_args.push_back(PointerTy_56);
FunctionType* FuncTy_170 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_170_args,
 /*isVarArg=*/true);

PointerType* PointerTy_169 = PointerType::get(FuncTy_170, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_169);
std::vector<Type*>FuncTy_172_args;
FuncTy_172_args.push_back(PointerTy_48);
FuncTy_172_args.push_back(PointerTy_42);
FuncTy_172_args.push_back(PointerTy_51);
FuncTy_172_args.push_back(PointerTy_56);
FuncTy_172_args.push_back(PointerTy_93);
FunctionType* FuncTy_172 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_172_args,
 /*isVarArg=*/false);

PointerType* PointerTy_171 = PointerType::get(FuncTy_172, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_171);
std::vector<Type*>FuncTy_174_args;
FuncTy_174_args.push_back(PointerTy_48);
FuncTy_174_args.push_back(PointerTy_42);
FuncTy_174_args.push_back(PointerTy_51);
FuncTy_174_args.push_back(PointerTy_56);
FuncTy_174_args.push_back(PointerTy_96);
FunctionType* FuncTy_174 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_174_args,
 /*isVarArg=*/false);

PointerType* PointerTy_173 = PointerType::get(FuncTy_174, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_173);
std::vector<Type*>FuncTy_176_args;
FuncTy_176_args.push_back(PointerTy_48);
FuncTy_176_args.push_back(PointerTy_42);
FuncTy_176_args.push_back(PointerTy_51);
FuncTy_176_args.push_back(PointerTy_56);
FunctionType* FuncTy_176 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_176_args,
 /*isVarArg=*/true);

PointerType* PointerTy_175 = PointerType::get(FuncTy_176, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_175);
std::vector<Type*>FuncTy_178_args;
FuncTy_178_args.push_back(PointerTy_48);
FuncTy_178_args.push_back(PointerTy_42);
FuncTy_178_args.push_back(PointerTy_51);
FuncTy_178_args.push_back(PointerTy_56);
FuncTy_178_args.push_back(PointerTy_93);
FunctionType* FuncTy_178 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_178_args,
 /*isVarArg=*/false);

PointerType* PointerTy_177 = PointerType::get(FuncTy_178, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_177);
std::vector<Type*>FuncTy_180_args;
FuncTy_180_args.push_back(PointerTy_48);
FuncTy_180_args.push_back(PointerTy_42);
FuncTy_180_args.push_back(PointerTy_51);
FuncTy_180_args.push_back(PointerTy_56);
FuncTy_180_args.push_back(PointerTy_96);
FunctionType* FuncTy_180 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_180_args,
 /*isVarArg=*/false);

PointerType* PointerTy_179 = PointerType::get(FuncTy_180, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_179);
std::vector<Type*>FuncTy_182_args;
FuncTy_182_args.push_back(PointerTy_48);
FuncTy_182_args.push_back(PointerTy_42);
FuncTy_182_args.push_back(PointerTy_51);
FuncTy_182_args.push_back(PointerTy_56);
FunctionType* FuncTy_182 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_182_args,
 /*isVarArg=*/true);

PointerType* PointerTy_181 = PointerType::get(FuncTy_182, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_181);
std::vector<Type*>FuncTy_184_args;
FuncTy_184_args.push_back(PointerTy_48);
FuncTy_184_args.push_back(PointerTy_42);
FuncTy_184_args.push_back(PointerTy_51);
FuncTy_184_args.push_back(PointerTy_56);
FuncTy_184_args.push_back(PointerTy_93);
FunctionType* FuncTy_184 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_184_args,
 /*isVarArg=*/false);

PointerType* PointerTy_183 = PointerType::get(FuncTy_184, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_183);
std::vector<Type*>FuncTy_186_args;
FuncTy_186_args.push_back(PointerTy_48);
FuncTy_186_args.push_back(PointerTy_42);
FuncTy_186_args.push_back(PointerTy_51);
FuncTy_186_args.push_back(PointerTy_56);
FuncTy_186_args.push_back(PointerTy_96);
FunctionType* FuncTy_186 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_186_args,
 /*isVarArg=*/false);

PointerType* PointerTy_185 = PointerType::get(FuncTy_186, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_185);
std::vector<Type*>FuncTy_188_args;
FuncTy_188_args.push_back(PointerTy_48);
FuncTy_188_args.push_back(PointerTy_42);
FuncTy_188_args.push_back(PointerTy_51);
FuncTy_188_args.push_back(PointerTy_56);
FunctionType* FuncTy_188 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_188_args,
 /*isVarArg=*/true);

PointerType* PointerTy_187 = PointerType::get(FuncTy_188, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_187);
std::vector<Type*>FuncTy_190_args;
FuncTy_190_args.push_back(PointerTy_48);
FuncTy_190_args.push_back(PointerTy_42);
FuncTy_190_args.push_back(PointerTy_51);
FuncTy_190_args.push_back(PointerTy_56);
FuncTy_190_args.push_back(PointerTy_93);
FunctionType* FuncTy_190 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_190_args,
 /*isVarArg=*/false);

PointerType* PointerTy_189 = PointerType::get(FuncTy_190, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_189);
std::vector<Type*>FuncTy_192_args;
FuncTy_192_args.push_back(PointerTy_48);
FuncTy_192_args.push_back(PointerTy_42);
FuncTy_192_args.push_back(PointerTy_51);
FuncTy_192_args.push_back(PointerTy_56);
FuncTy_192_args.push_back(PointerTy_96);
FunctionType* FuncTy_192 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_192_args,
 /*isVarArg=*/false);

PointerType* PointerTy_191 = PointerType::get(FuncTy_192, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_191);
std::vector<Type*>FuncTy_194_args;
FuncTy_194_args.push_back(PointerTy_48);
FuncTy_194_args.push_back(PointerTy_42);
FuncTy_194_args.push_back(PointerTy_51);
FuncTy_194_args.push_back(PointerTy_56);
FunctionType* FuncTy_194 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_194_args,
 /*isVarArg=*/true);

PointerType* PointerTy_193 = PointerType::get(FuncTy_194, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_193);
std::vector<Type*>FuncTy_196_args;
FuncTy_196_args.push_back(PointerTy_48);
FuncTy_196_args.push_back(PointerTy_42);
FuncTy_196_args.push_back(PointerTy_51);
FuncTy_196_args.push_back(PointerTy_56);
FuncTy_196_args.push_back(PointerTy_93);
FunctionType* FuncTy_196 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_196_args,
 /*isVarArg=*/false);

PointerType* PointerTy_195 = PointerType::get(FuncTy_196, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_195);
std::vector<Type*>FuncTy_198_args;
FuncTy_198_args.push_back(PointerTy_48);
FuncTy_198_args.push_back(PointerTy_42);
FuncTy_198_args.push_back(PointerTy_51);
FuncTy_198_args.push_back(PointerTy_56);
FuncTy_198_args.push_back(PointerTy_96);
FunctionType* FuncTy_198 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_198_args,
 /*isVarArg=*/false);

PointerType* PointerTy_197 = PointerType::get(FuncTy_198, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_197);
std::vector<Type*>FuncTy_200_args;
FuncTy_200_args.push_back(PointerTy_48);
FuncTy_200_args.push_back(PointerTy_51);
FuncTy_200_args.push_back(PointerTy_5);
FuncTy_200_args.push_back(PointerTy_5);
FunctionType* FuncTy_200 = FunctionType::get(
 /*Result=*/PointerTy_59,
 /*Params=*/FuncTy_200_args,
 /*isVarArg=*/false);

PointerType* PointerTy_199 = PointerType::get(FuncTy_200, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_199);
std::vector<Type*>FuncTy_202_args;
FuncTy_202_args.push_back(PointerTy_48);
FuncTy_202_args.push_back(PointerTy_42);
FuncTy_202_args.push_back(PointerTy_59);
FunctionType* FuncTy_202 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_202_args,
 /*isVarArg=*/false);

PointerType* PointerTy_201 = PointerType::get(FuncTy_202, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_201);
std::vector<Type*>FuncTy_204_args;
FuncTy_204_args.push_back(PointerTy_48);
FuncTy_204_args.push_back(PointerTy_42);
FuncTy_204_args.push_back(PointerTy_59);
FunctionType* FuncTy_204 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_204_args,
 /*isVarArg=*/false);

PointerType* PointerTy_203 = PointerType::get(FuncTy_204, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_203);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_203);
std::vector<Type*>FuncTy_206_args;
FuncTy_206_args.push_back(PointerTy_48);
FuncTy_206_args.push_back(PointerTy_42);
FuncTy_206_args.push_back(PointerTy_59);
FunctionType* FuncTy_206 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_206_args,
 /*isVarArg=*/false);

PointerType* PointerTy_205 = PointerType::get(FuncTy_206, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_205);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_205);
std::vector<Type*>FuncTy_208_args;
FuncTy_208_args.push_back(PointerTy_48);
FuncTy_208_args.push_back(PointerTy_42);
FuncTy_208_args.push_back(PointerTy_59);
FunctionType* FuncTy_208 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_208_args,
 /*isVarArg=*/false);

PointerType* PointerTy_207 = PointerType::get(FuncTy_208, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_207);
std::vector<Type*>FuncTy_210_args;
FuncTy_210_args.push_back(PointerTy_48);
FuncTy_210_args.push_back(PointerTy_42);
FuncTy_210_args.push_back(PointerTy_59);
FunctionType* FuncTy_210 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_210_args,
 /*isVarArg=*/false);

PointerType* PointerTy_209 = PointerType::get(FuncTy_210, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_209);
std::vector<Type*>FuncTy_212_args;
FuncTy_212_args.push_back(PointerTy_48);
FuncTy_212_args.push_back(PointerTy_42);
FuncTy_212_args.push_back(PointerTy_59);
FunctionType* FuncTy_212 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_212_args,
 /*isVarArg=*/false);

PointerType* PointerTy_211 = PointerType::get(FuncTy_212, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_211);
std::vector<Type*>FuncTy_214_args;
FuncTy_214_args.push_back(PointerTy_48);
FuncTy_214_args.push_back(PointerTy_42);
FuncTy_214_args.push_back(PointerTy_59);
FunctionType* FuncTy_214 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_214_args,
 /*isVarArg=*/false);

PointerType* PointerTy_213 = PointerType::get(FuncTy_214, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_213);
std::vector<Type*>FuncTy_216_args;
FuncTy_216_args.push_back(PointerTy_48);
FuncTy_216_args.push_back(PointerTy_42);
FuncTy_216_args.push_back(PointerTy_59);
FuncTy_216_args.push_back(PointerTy_42);
FunctionType* FuncTy_216 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_216_args,
 /*isVarArg=*/false);

PointerType* PointerTy_215 = PointerType::get(FuncTy_216, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_215);
std::vector<Type*>FuncTy_218_args;
FuncTy_218_args.push_back(PointerTy_48);
FuncTy_218_args.push_back(PointerTy_42);
FuncTy_218_args.push_back(PointerTy_59);
FuncTy_218_args.push_back(IntegerType::get(mod->getContext(), 8));
FunctionType* FuncTy_218 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_218_args,
 /*isVarArg=*/false);

PointerType* PointerTy_217 = PointerType::get(FuncTy_218, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_217);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_217);
std::vector<Type*>FuncTy_220_args;
FuncTy_220_args.push_back(PointerTy_48);
FuncTy_220_args.push_back(PointerTy_42);
FuncTy_220_args.push_back(PointerTy_59);
FuncTy_220_args.push_back(IntegerType::get(mod->getContext(), 16));
FunctionType* FuncTy_220 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_220_args,
 /*isVarArg=*/false);

PointerType* PointerTy_219 = PointerType::get(FuncTy_220, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_219);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_219);
std::vector<Type*>FuncTy_222_args;
FuncTy_222_args.push_back(PointerTy_48);
FuncTy_222_args.push_back(PointerTy_42);
FuncTy_222_args.push_back(PointerTy_59);
FuncTy_222_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_222 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_222_args,
 /*isVarArg=*/false);

PointerType* PointerTy_221 = PointerType::get(FuncTy_222, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_221);
std::vector<Type*>FuncTy_224_args;
FuncTy_224_args.push_back(PointerTy_48);
FuncTy_224_args.push_back(PointerTy_42);
FuncTy_224_args.push_back(PointerTy_59);
FuncTy_224_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_224 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_224_args,
 /*isVarArg=*/false);

PointerType* PointerTy_223 = PointerType::get(FuncTy_224, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_223);
std::vector<Type*>FuncTy_226_args;
FuncTy_226_args.push_back(PointerTy_48);
FuncTy_226_args.push_back(PointerTy_42);
FuncTy_226_args.push_back(PointerTy_59);
FuncTy_226_args.push_back(Type::getFloatTy(mod->getContext()));
FunctionType* FuncTy_226 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_226_args,
 /*isVarArg=*/false);

PointerType* PointerTy_225 = PointerType::get(FuncTy_226, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_225);
std::vector<Type*>FuncTy_228_args;
FuncTy_228_args.push_back(PointerTy_48);
FuncTy_228_args.push_back(PointerTy_42);
FuncTy_228_args.push_back(PointerTy_59);
FuncTy_228_args.push_back(Type::getDoubleTy(mod->getContext()));
FunctionType* FuncTy_228 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_228_args,
 /*isVarArg=*/false);

PointerType* PointerTy_227 = PointerType::get(FuncTy_228, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_227);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_101);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_89);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_91);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_94);
std::vector<Type*>FuncTy_230_args;
FuncTy_230_args.push_back(PointerTy_48);
FuncTy_230_args.push_back(PointerTy_51);
FuncTy_230_args.push_back(PointerTy_56);
FunctionType* FuncTy_230 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_230_args,
 /*isVarArg=*/true);

PointerType* PointerTy_229 = PointerType::get(FuncTy_230, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_229);
std::vector<Type*>FuncTy_232_args;
FuncTy_232_args.push_back(PointerTy_48);
FuncTy_232_args.push_back(PointerTy_51);
FuncTy_232_args.push_back(PointerTy_56);
FuncTy_232_args.push_back(PointerTy_93);
FunctionType* FuncTy_232 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_232_args,
 /*isVarArg=*/false);

PointerType* PointerTy_231 = PointerType::get(FuncTy_232, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_231);
std::vector<Type*>FuncTy_234_args;
FuncTy_234_args.push_back(PointerTy_48);
FuncTy_234_args.push_back(PointerTy_51);
FuncTy_234_args.push_back(PointerTy_56);
FuncTy_234_args.push_back(PointerTy_96);
FunctionType* FuncTy_234 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_234_args,
 /*isVarArg=*/false);

PointerType* PointerTy_233 = PointerType::get(FuncTy_234, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_233);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_229);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_231);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_233);
std::vector<Type*>FuncTy_236_args;
FuncTy_236_args.push_back(PointerTy_48);
FuncTy_236_args.push_back(PointerTy_51);
FuncTy_236_args.push_back(PointerTy_56);
FunctionType* FuncTy_236 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_236_args,
 /*isVarArg=*/true);

PointerType* PointerTy_235 = PointerType::get(FuncTy_236, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_235);
std::vector<Type*>FuncTy_238_args;
FuncTy_238_args.push_back(PointerTy_48);
FuncTy_238_args.push_back(PointerTy_51);
FuncTy_238_args.push_back(PointerTy_56);
FuncTy_238_args.push_back(PointerTy_93);
FunctionType* FuncTy_238 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_238_args,
 /*isVarArg=*/false);

PointerType* PointerTy_237 = PointerType::get(FuncTy_238, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_237);
std::vector<Type*>FuncTy_240_args;
FuncTy_240_args.push_back(PointerTy_48);
FuncTy_240_args.push_back(PointerTy_51);
FuncTy_240_args.push_back(PointerTy_56);
FuncTy_240_args.push_back(PointerTy_96);
FunctionType* FuncTy_240 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_240_args,
 /*isVarArg=*/false);

PointerType* PointerTy_239 = PointerType::get(FuncTy_240, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_239);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_235);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_237);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_239);
std::vector<Type*>FuncTy_242_args;
FuncTy_242_args.push_back(PointerTy_48);
FuncTy_242_args.push_back(PointerTy_51);
FuncTy_242_args.push_back(PointerTy_56);
FunctionType* FuncTy_242 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_242_args,
 /*isVarArg=*/true);

PointerType* PointerTy_241 = PointerType::get(FuncTy_242, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_241);
std::vector<Type*>FuncTy_244_args;
FuncTy_244_args.push_back(PointerTy_48);
FuncTy_244_args.push_back(PointerTy_51);
FuncTy_244_args.push_back(PointerTy_56);
FuncTy_244_args.push_back(PointerTy_93);
FunctionType* FuncTy_244 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_244_args,
 /*isVarArg=*/false);

PointerType* PointerTy_243 = PointerType::get(FuncTy_244, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_243);
std::vector<Type*>FuncTy_246_args;
FuncTy_246_args.push_back(PointerTy_48);
FuncTy_246_args.push_back(PointerTy_51);
FuncTy_246_args.push_back(PointerTy_56);
FuncTy_246_args.push_back(PointerTy_96);
FunctionType* FuncTy_246 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_246_args,
 /*isVarArg=*/false);

PointerType* PointerTy_245 = PointerType::get(FuncTy_246, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_245);
std::vector<Type*>FuncTy_248_args;
FuncTy_248_args.push_back(PointerTy_48);
FuncTy_248_args.push_back(PointerTy_51);
FuncTy_248_args.push_back(PointerTy_56);
FunctionType* FuncTy_248 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_248_args,
 /*isVarArg=*/true);

PointerType* PointerTy_247 = PointerType::get(FuncTy_248, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_247);
std::vector<Type*>FuncTy_250_args;
FuncTy_250_args.push_back(PointerTy_48);
FuncTy_250_args.push_back(PointerTy_51);
FuncTy_250_args.push_back(PointerTy_56);
FuncTy_250_args.push_back(PointerTy_93);
FunctionType* FuncTy_250 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_250_args,
 /*isVarArg=*/false);

PointerType* PointerTy_249 = PointerType::get(FuncTy_250, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_249);
std::vector<Type*>FuncTy_252_args;
FuncTy_252_args.push_back(PointerTy_48);
FuncTy_252_args.push_back(PointerTy_51);
FuncTy_252_args.push_back(PointerTy_56);
FuncTy_252_args.push_back(PointerTy_96);
FunctionType* FuncTy_252 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_252_args,
 /*isVarArg=*/false);

PointerType* PointerTy_251 = PointerType::get(FuncTy_252, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_251);
std::vector<Type*>FuncTy_254_args;
FuncTy_254_args.push_back(PointerTy_48);
FuncTy_254_args.push_back(PointerTy_51);
FuncTy_254_args.push_back(PointerTy_56);
FunctionType* FuncTy_254 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_254_args,
 /*isVarArg=*/true);

PointerType* PointerTy_253 = PointerType::get(FuncTy_254, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_253);
std::vector<Type*>FuncTy_256_args;
FuncTy_256_args.push_back(PointerTy_48);
FuncTy_256_args.push_back(PointerTy_51);
FuncTy_256_args.push_back(PointerTy_56);
FuncTy_256_args.push_back(PointerTy_93);
FunctionType* FuncTy_256 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_256_args,
 /*isVarArg=*/false);

PointerType* PointerTy_255 = PointerType::get(FuncTy_256, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_255);
std::vector<Type*>FuncTy_258_args;
FuncTy_258_args.push_back(PointerTy_48);
FuncTy_258_args.push_back(PointerTy_51);
FuncTy_258_args.push_back(PointerTy_56);
FuncTy_258_args.push_back(PointerTy_96);
FunctionType* FuncTy_258 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_258_args,
 /*isVarArg=*/false);

PointerType* PointerTy_257 = PointerType::get(FuncTy_258, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_257);
std::vector<Type*>FuncTy_260_args;
FuncTy_260_args.push_back(PointerTy_48);
FuncTy_260_args.push_back(PointerTy_51);
FuncTy_260_args.push_back(PointerTy_56);
FunctionType* FuncTy_260 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_260_args,
 /*isVarArg=*/true);

PointerType* PointerTy_259 = PointerType::get(FuncTy_260, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_259);
std::vector<Type*>FuncTy_262_args;
FuncTy_262_args.push_back(PointerTy_48);
FuncTy_262_args.push_back(PointerTy_51);
FuncTy_262_args.push_back(PointerTy_56);
FuncTy_262_args.push_back(PointerTy_93);
FunctionType* FuncTy_262 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_262_args,
 /*isVarArg=*/false);

PointerType* PointerTy_261 = PointerType::get(FuncTy_262, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_261);
std::vector<Type*>FuncTy_264_args;
FuncTy_264_args.push_back(PointerTy_48);
FuncTy_264_args.push_back(PointerTy_51);
FuncTy_264_args.push_back(PointerTy_56);
FuncTy_264_args.push_back(PointerTy_96);
FunctionType* FuncTy_264 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_264_args,
 /*isVarArg=*/false);

PointerType* PointerTy_263 = PointerType::get(FuncTy_264, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_263);
std::vector<Type*>FuncTy_266_args;
FuncTy_266_args.push_back(PointerTy_48);
FuncTy_266_args.push_back(PointerTy_51);
FuncTy_266_args.push_back(PointerTy_56);
FunctionType* FuncTy_266 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_266_args,
 /*isVarArg=*/true);

PointerType* PointerTy_265 = PointerType::get(FuncTy_266, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_265);
std::vector<Type*>FuncTy_268_args;
FuncTy_268_args.push_back(PointerTy_48);
FuncTy_268_args.push_back(PointerTy_51);
FuncTy_268_args.push_back(PointerTy_56);
FuncTy_268_args.push_back(PointerTy_93);
FunctionType* FuncTy_268 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_268_args,
 /*isVarArg=*/false);

PointerType* PointerTy_267 = PointerType::get(FuncTy_268, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_267);
std::vector<Type*>FuncTy_270_args;
FuncTy_270_args.push_back(PointerTy_48);
FuncTy_270_args.push_back(PointerTy_51);
FuncTy_270_args.push_back(PointerTy_56);
FuncTy_270_args.push_back(PointerTy_96);
FunctionType* FuncTy_270 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_270_args,
 /*isVarArg=*/false);

PointerType* PointerTy_269 = PointerType::get(FuncTy_270, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_269);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_199);
std::vector<Type*>FuncTy_272_args;
FuncTy_272_args.push_back(PointerTy_48);
FuncTy_272_args.push_back(PointerTy_51);
FuncTy_272_args.push_back(PointerTy_59);
FunctionType* FuncTy_272 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_272_args,
 /*isVarArg=*/false);

PointerType* PointerTy_271 = PointerType::get(FuncTy_272, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_271);
std::vector<Type*>FuncTy_274_args;
FuncTy_274_args.push_back(PointerTy_48);
FuncTy_274_args.push_back(PointerTy_51);
FuncTy_274_args.push_back(PointerTy_59);
FunctionType* FuncTy_274 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_274_args,
 /*isVarArg=*/false);

PointerType* PointerTy_273 = PointerType::get(FuncTy_274, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_273);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_273);
std::vector<Type*>FuncTy_276_args;
FuncTy_276_args.push_back(PointerTy_48);
FuncTy_276_args.push_back(PointerTy_51);
FuncTy_276_args.push_back(PointerTy_59);
FunctionType* FuncTy_276 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 16),
 /*Params=*/FuncTy_276_args,
 /*isVarArg=*/false);

PointerType* PointerTy_275 = PointerType::get(FuncTy_276, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_275);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_275);
std::vector<Type*>FuncTy_278_args;
FuncTy_278_args.push_back(PointerTy_48);
FuncTy_278_args.push_back(PointerTy_51);
FuncTy_278_args.push_back(PointerTy_59);
FunctionType* FuncTy_278 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_278_args,
 /*isVarArg=*/false);

PointerType* PointerTy_277 = PointerType::get(FuncTy_278, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_277);
std::vector<Type*>FuncTy_280_args;
FuncTy_280_args.push_back(PointerTy_48);
FuncTy_280_args.push_back(PointerTy_51);
FuncTy_280_args.push_back(PointerTy_59);
FunctionType* FuncTy_280 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_280_args,
 /*isVarArg=*/false);

PointerType* PointerTy_279 = PointerType::get(FuncTy_280, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_279);
std::vector<Type*>FuncTy_282_args;
FuncTy_282_args.push_back(PointerTy_48);
FuncTy_282_args.push_back(PointerTy_51);
FuncTy_282_args.push_back(PointerTy_59);
FunctionType* FuncTy_282 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_282_args,
 /*isVarArg=*/false);

PointerType* PointerTy_281 = PointerType::get(FuncTy_282, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_281);
std::vector<Type*>FuncTy_284_args;
FuncTy_284_args.push_back(PointerTy_48);
FuncTy_284_args.push_back(PointerTy_51);
FuncTy_284_args.push_back(PointerTy_59);
FunctionType* FuncTy_284 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_284_args,
 /*isVarArg=*/false);

PointerType* PointerTy_283 = PointerType::get(FuncTy_284, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_283);
std::vector<Type*>FuncTy_286_args;
FuncTy_286_args.push_back(PointerTy_48);
FuncTy_286_args.push_back(PointerTy_51);
FuncTy_286_args.push_back(PointerTy_59);
FuncTy_286_args.push_back(PointerTy_42);
FunctionType* FuncTy_286 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_286_args,
 /*isVarArg=*/false);

PointerType* PointerTy_285 = PointerType::get(FuncTy_286, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_285);
std::vector<Type*>FuncTy_288_args;
FuncTy_288_args.push_back(PointerTy_48);
FuncTy_288_args.push_back(PointerTy_51);
FuncTy_288_args.push_back(PointerTy_59);
FuncTy_288_args.push_back(IntegerType::get(mod->getContext(), 8));
FunctionType* FuncTy_288 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_288_args,
 /*isVarArg=*/false);

PointerType* PointerTy_287 = PointerType::get(FuncTy_288, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_287);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_287);
std::vector<Type*>FuncTy_290_args;
FuncTy_290_args.push_back(PointerTy_48);
FuncTy_290_args.push_back(PointerTy_51);
FuncTy_290_args.push_back(PointerTy_59);
FuncTy_290_args.push_back(IntegerType::get(mod->getContext(), 16));
FunctionType* FuncTy_290 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_290_args,
 /*isVarArg=*/false);

PointerType* PointerTy_289 = PointerType::get(FuncTy_290, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_289);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_289);
std::vector<Type*>FuncTy_292_args;
FuncTy_292_args.push_back(PointerTy_48);
FuncTy_292_args.push_back(PointerTy_51);
FuncTy_292_args.push_back(PointerTy_59);
FuncTy_292_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_292 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_292_args,
 /*isVarArg=*/false);

PointerType* PointerTy_291 = PointerType::get(FuncTy_292, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_291);
std::vector<Type*>FuncTy_294_args;
FuncTy_294_args.push_back(PointerTy_48);
FuncTy_294_args.push_back(PointerTy_51);
FuncTy_294_args.push_back(PointerTy_59);
FuncTy_294_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_294 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_294_args,
 /*isVarArg=*/false);

PointerType* PointerTy_293 = PointerType::get(FuncTy_294, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_293);
std::vector<Type*>FuncTy_296_args;
FuncTy_296_args.push_back(PointerTy_48);
FuncTy_296_args.push_back(PointerTy_51);
FuncTy_296_args.push_back(PointerTy_59);
FuncTy_296_args.push_back(Type::getFloatTy(mod->getContext()));
FunctionType* FuncTy_296 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_296_args,
 /*isVarArg=*/false);

PointerType* PointerTy_295 = PointerType::get(FuncTy_296, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_295);
std::vector<Type*>FuncTy_298_args;
FuncTy_298_args.push_back(PointerTy_48);
FuncTy_298_args.push_back(PointerTy_51);
FuncTy_298_args.push_back(PointerTy_59);
FuncTy_298_args.push_back(Type::getDoubleTy(mod->getContext()));
FunctionType* FuncTy_298 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_298_args,
 /*isVarArg=*/false);

PointerType* PointerTy_297 = PointerType::get(FuncTy_298, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_297);
std::vector<Type*>FuncTy_300_args;
FuncTy_300_args.push_back(PointerTy_48);
FuncTy_300_args.push_back(PointerTy_7);
FuncTy_300_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jstring = mod->getTypeByName("class._jstring");
if (!StructTy_class__jstring) {
StructTy_class__jstring = StructType::create(mod->getContext(), "class._jstring");
}
std::vector<Type*>StructTy_class__jstring_fields;
StructTy_class__jstring_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jstring->isOpaque()) {
StructTy_class__jstring->setBody(StructTy_class__jstring_fields, /*isPacked=*/false);
}

PointerType* PointerTy_301 = PointerType::get(StructTy_class__jstring, 0);

FunctionType* FuncTy_300 = FunctionType::get(
 /*Result=*/PointerTy_301,
 /*Params=*/FuncTy_300_args,
 /*isVarArg=*/false);

PointerType* PointerTy_299 = PointerType::get(FuncTy_300, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_299);
std::vector<Type*>FuncTy_303_args;
FuncTy_303_args.push_back(PointerTy_48);
FuncTy_303_args.push_back(PointerTy_301);
FunctionType* FuncTy_303 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_303_args,
 /*isVarArg=*/false);

PointerType* PointerTy_302 = PointerType::get(FuncTy_303, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_302);
std::vector<Type*>FuncTy_305_args;
FuncTy_305_args.push_back(PointerTy_48);
FuncTy_305_args.push_back(PointerTy_301);
FuncTy_305_args.push_back(PointerTy_5);
FunctionType* FuncTy_305 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_305_args,
 /*isVarArg=*/false);

PointerType* PointerTy_304 = PointerType::get(FuncTy_305, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_304);
std::vector<Type*>FuncTy_307_args;
FuncTy_307_args.push_back(PointerTy_48);
FuncTy_307_args.push_back(PointerTy_301);
FuncTy_307_args.push_back(PointerTy_7);
FunctionType* FuncTy_307 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_307_args,
 /*isVarArg=*/false);

PointerType* PointerTy_306 = PointerType::get(FuncTy_307, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_306);
std::vector<Type*>FuncTy_309_args;
FuncTy_309_args.push_back(PointerTy_48);
FuncTy_309_args.push_back(PointerTy_5);
FunctionType* FuncTy_309 = FunctionType::get(
 /*Result=*/PointerTy_301,
 /*Params=*/FuncTy_309_args,
 /*isVarArg=*/false);

PointerType* PointerTy_308 = PointerType::get(FuncTy_309, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_308);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_302);
std::vector<Type*>FuncTy_311_args;
FuncTy_311_args.push_back(PointerTy_48);
FuncTy_311_args.push_back(PointerTy_301);
FuncTy_311_args.push_back(PointerTy_5);
FunctionType* FuncTy_311 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_311_args,
 /*isVarArg=*/false);

PointerType* PointerTy_310 = PointerType::get(FuncTy_311, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_310);
std::vector<Type*>FuncTy_313_args;
FuncTy_313_args.push_back(PointerTy_48);
FuncTy_313_args.push_back(PointerTy_301);
FuncTy_313_args.push_back(PointerTy_5);
FunctionType* FuncTy_313 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_313_args,
 /*isVarArg=*/false);

PointerType* PointerTy_312 = PointerType::get(FuncTy_313, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_312);
std::vector<Type*>FuncTy_315_args;
FuncTy_315_args.push_back(PointerTy_48);
StructType *StructTy_class__jarray = mod->getTypeByName("class._jarray");
if (!StructTy_class__jarray) {
StructTy_class__jarray = StructType::create(mod->getContext(), "class._jarray");
}
std::vector<Type*>StructTy_class__jarray_fields;
StructTy_class__jarray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jarray->isOpaque()) {
StructTy_class__jarray->setBody(StructTy_class__jarray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_316 = PointerType::get(StructTy_class__jarray, 0);

FuncTy_315_args.push_back(PointerTy_316);
FunctionType* FuncTy_315 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_315_args,
 /*isVarArg=*/false);

PointerType* PointerTy_314 = PointerType::get(FuncTy_315, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_314);
std::vector<Type*>FuncTy_318_args;
FuncTy_318_args.push_back(PointerTy_48);
FuncTy_318_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_318_args.push_back(PointerTy_51);
FuncTy_318_args.push_back(PointerTy_42);
StructType *StructTy_class__jobjectArray = mod->getTypeByName("class._jobjectArray");
if (!StructTy_class__jobjectArray) {
StructTy_class__jobjectArray = StructType::create(mod->getContext(), "class._jobjectArray");
}
std::vector<Type*>StructTy_class__jobjectArray_fields;
StructTy_class__jobjectArray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jobjectArray->isOpaque()) {
StructTy_class__jobjectArray->setBody(StructTy_class__jobjectArray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_319 = PointerType::get(StructTy_class__jobjectArray, 0);

FunctionType* FuncTy_318 = FunctionType::get(
 /*Result=*/PointerTy_319,
 /*Params=*/FuncTy_318_args,
 /*isVarArg=*/false);

PointerType* PointerTy_317 = PointerType::get(FuncTy_318, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_317);
std::vector<Type*>FuncTy_321_args;
FuncTy_321_args.push_back(PointerTy_48);
FuncTy_321_args.push_back(PointerTy_319);
FuncTy_321_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_321 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_321_args,
 /*isVarArg=*/false);

PointerType* PointerTy_320 = PointerType::get(FuncTy_321, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_320);
std::vector<Type*>FuncTy_323_args;
FuncTy_323_args.push_back(PointerTy_48);
FuncTy_323_args.push_back(PointerTy_319);
FuncTy_323_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_323_args.push_back(PointerTy_42);
FunctionType* FuncTy_323 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_323_args,
 /*isVarArg=*/false);

PointerType* PointerTy_322 = PointerType::get(FuncTy_323, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_322);
std::vector<Type*>FuncTy_325_args;
FuncTy_325_args.push_back(PointerTy_48);
FuncTy_325_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jbooleanArray = mod->getTypeByName("class._jbooleanArray");
if (!StructTy_class__jbooleanArray) {
StructTy_class__jbooleanArray = StructType::create(mod->getContext(), "class._jbooleanArray");
}
std::vector<Type*>StructTy_class__jbooleanArray_fields;
StructTy_class__jbooleanArray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jbooleanArray->isOpaque()) {
StructTy_class__jbooleanArray->setBody(StructTy_class__jbooleanArray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_326 = PointerType::get(StructTy_class__jbooleanArray, 0);

FunctionType* FuncTy_325 = FunctionType::get(
 /*Result=*/PointerTy_326,
 /*Params=*/FuncTy_325_args,
 /*isVarArg=*/false);

PointerType* PointerTy_324 = PointerType::get(FuncTy_325, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_324);
std::vector<Type*>FuncTy_328_args;
FuncTy_328_args.push_back(PointerTy_48);
FuncTy_328_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jbyteArray = mod->getTypeByName("class._jbyteArray");
if (!StructTy_class__jbyteArray) {
StructTy_class__jbyteArray = StructType::create(mod->getContext(), "class._jbyteArray");
}
std::vector<Type*>StructTy_class__jbyteArray_fields;
StructTy_class__jbyteArray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jbyteArray->isOpaque()) {
StructTy_class__jbyteArray->setBody(StructTy_class__jbyteArray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_329 = PointerType::get(StructTy_class__jbyteArray, 0);

FunctionType* FuncTy_328 = FunctionType::get(
 /*Result=*/PointerTy_329,
 /*Params=*/FuncTy_328_args,
 /*isVarArg=*/false);

PointerType* PointerTy_327 = PointerType::get(FuncTy_328, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_327);
std::vector<Type*>FuncTy_331_args;
FuncTy_331_args.push_back(PointerTy_48);
FuncTy_331_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jcharArray = mod->getTypeByName("class._jcharArray");
if (!StructTy_class__jcharArray) {
StructTy_class__jcharArray = StructType::create(mod->getContext(), "class._jcharArray");
}
std::vector<Type*>StructTy_class__jcharArray_fields;
StructTy_class__jcharArray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jcharArray->isOpaque()) {
StructTy_class__jcharArray->setBody(StructTy_class__jcharArray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_332 = PointerType::get(StructTy_class__jcharArray, 0);

FunctionType* FuncTy_331 = FunctionType::get(
 /*Result=*/PointerTy_332,
 /*Params=*/FuncTy_331_args,
 /*isVarArg=*/false);

PointerType* PointerTy_330 = PointerType::get(FuncTy_331, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_330);
std::vector<Type*>FuncTy_334_args;
FuncTy_334_args.push_back(PointerTy_48);
FuncTy_334_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jshortArray = mod->getTypeByName("class._jshortArray");
if (!StructTy_class__jshortArray) {
StructTy_class__jshortArray = StructType::create(mod->getContext(), "class._jshortArray");
}
std::vector<Type*>StructTy_class__jshortArray_fields;
StructTy_class__jshortArray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jshortArray->isOpaque()) {
StructTy_class__jshortArray->setBody(StructTy_class__jshortArray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_335 = PointerType::get(StructTy_class__jshortArray, 0);

FunctionType* FuncTy_334 = FunctionType::get(
 /*Result=*/PointerTy_335,
 /*Params=*/FuncTy_334_args,
 /*isVarArg=*/false);

PointerType* PointerTy_333 = PointerType::get(FuncTy_334, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_333);
std::vector<Type*>FuncTy_337_args;
FuncTy_337_args.push_back(PointerTy_48);
FuncTy_337_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jintArray = mod->getTypeByName("class._jintArray");
if (!StructTy_class__jintArray) {
StructTy_class__jintArray = StructType::create(mod->getContext(), "class._jintArray");
}
std::vector<Type*>StructTy_class__jintArray_fields;
StructTy_class__jintArray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jintArray->isOpaque()) {
StructTy_class__jintArray->setBody(StructTy_class__jintArray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_338 = PointerType::get(StructTy_class__jintArray, 0);

FunctionType* FuncTy_337 = FunctionType::get(
 /*Result=*/PointerTy_338,
 /*Params=*/FuncTy_337_args,
 /*isVarArg=*/false);

PointerType* PointerTy_336 = PointerType::get(FuncTy_337, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_336);
std::vector<Type*>FuncTy_340_args;
FuncTy_340_args.push_back(PointerTy_48);
FuncTy_340_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jlongArray = mod->getTypeByName("class._jlongArray");
if (!StructTy_class__jlongArray) {
StructTy_class__jlongArray = StructType::create(mod->getContext(), "class._jlongArray");
}
std::vector<Type*>StructTy_class__jlongArray_fields;
StructTy_class__jlongArray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jlongArray->isOpaque()) {
StructTy_class__jlongArray->setBody(StructTy_class__jlongArray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_341 = PointerType::get(StructTy_class__jlongArray, 0);

FunctionType* FuncTy_340 = FunctionType::get(
 /*Result=*/PointerTy_341,
 /*Params=*/FuncTy_340_args,
 /*isVarArg=*/false);

PointerType* PointerTy_339 = PointerType::get(FuncTy_340, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_339);
std::vector<Type*>FuncTy_343_args;
FuncTy_343_args.push_back(PointerTy_48);
FuncTy_343_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jfloatArray = mod->getTypeByName("class._jfloatArray");
if (!StructTy_class__jfloatArray) {
StructTy_class__jfloatArray = StructType::create(mod->getContext(), "class._jfloatArray");
}
std::vector<Type*>StructTy_class__jfloatArray_fields;
StructTy_class__jfloatArray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jfloatArray->isOpaque()) {
StructTy_class__jfloatArray->setBody(StructTy_class__jfloatArray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_344 = PointerType::get(StructTy_class__jfloatArray, 0);

FunctionType* FuncTy_343 = FunctionType::get(
 /*Result=*/PointerTy_344,
 /*Params=*/FuncTy_343_args,
 /*isVarArg=*/false);

PointerType* PointerTy_342 = PointerType::get(FuncTy_343, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_342);
std::vector<Type*>FuncTy_346_args;
FuncTy_346_args.push_back(PointerTy_48);
FuncTy_346_args.push_back(IntegerType::get(mod->getContext(), 32));
StructType *StructTy_class__jdoubleArray = mod->getTypeByName("class._jdoubleArray");
if (!StructTy_class__jdoubleArray) {
StructTy_class__jdoubleArray = StructType::create(mod->getContext(), "class._jdoubleArray");
}
std::vector<Type*>StructTy_class__jdoubleArray_fields;
StructTy_class__jdoubleArray_fields.push_back(IntegerType::get(mod->getContext(), 8));
if (StructTy_class__jdoubleArray->isOpaque()) {
StructTy_class__jdoubleArray->setBody(StructTy_class__jdoubleArray_fields, /*isPacked=*/false);
}

PointerType* PointerTy_347 = PointerType::get(StructTy_class__jdoubleArray, 0);

FunctionType* FuncTy_346 = FunctionType::get(
 /*Result=*/PointerTy_347,
 /*Params=*/FuncTy_346_args,
 /*isVarArg=*/false);

PointerType* PointerTy_345 = PointerType::get(FuncTy_346, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_345);
std::vector<Type*>FuncTy_349_args;
FuncTy_349_args.push_back(PointerTy_48);
FuncTy_349_args.push_back(PointerTy_326);
FuncTy_349_args.push_back(PointerTy_5);
FunctionType* FuncTy_349 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_349_args,
 /*isVarArg=*/false);

PointerType* PointerTy_348 = PointerType::get(FuncTy_349, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_348);
std::vector<Type*>FuncTy_351_args;
FuncTy_351_args.push_back(PointerTy_48);
FuncTy_351_args.push_back(PointerTy_329);
FuncTy_351_args.push_back(PointerTy_5);
FunctionType* FuncTy_351 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_351_args,
 /*isVarArg=*/false);

PointerType* PointerTy_350 = PointerType::get(FuncTy_351, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_350);
std::vector<Type*>FuncTy_353_args;
FuncTy_353_args.push_back(PointerTy_48);
FuncTy_353_args.push_back(PointerTy_332);
FuncTy_353_args.push_back(PointerTy_5);
FunctionType* FuncTy_353 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_353_args,
 /*isVarArg=*/false);

PointerType* PointerTy_352 = PointerType::get(FuncTy_353, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_352);
std::vector<Type*>FuncTy_355_args;
FuncTy_355_args.push_back(PointerTy_48);
FuncTy_355_args.push_back(PointerTy_335);
FuncTy_355_args.push_back(PointerTy_5);
FunctionType* FuncTy_355 = FunctionType::get(
 /*Result=*/PointerTy_7,
 /*Params=*/FuncTy_355_args,
 /*isVarArg=*/false);

PointerType* PointerTy_354 = PointerType::get(FuncTy_355, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_354);
std::vector<Type*>FuncTy_357_args;
FuncTy_357_args.push_back(PointerTy_48);
FuncTy_357_args.push_back(PointerTy_338);
FuncTy_357_args.push_back(PointerTy_5);
FunctionType* FuncTy_357 = FunctionType::get(
 /*Result=*/PointerTy_13,
 /*Params=*/FuncTy_357_args,
 /*isVarArg=*/false);

PointerType* PointerTy_356 = PointerType::get(FuncTy_357, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_356);
std::vector<Type*>FuncTy_359_args;
FuncTy_359_args.push_back(PointerTy_48);
FuncTy_359_args.push_back(PointerTy_341);
FuncTy_359_args.push_back(PointerTy_5);
FunctionType* FuncTy_359 = FunctionType::get(
 /*Result=*/PointerTy_3,
 /*Params=*/FuncTy_359_args,
 /*isVarArg=*/false);

PointerType* PointerTy_358 = PointerType::get(FuncTy_359, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_358);
std::vector<Type*>FuncTy_361_args;
FuncTy_361_args.push_back(PointerTy_48);
FuncTy_361_args.push_back(PointerTy_344);
FuncTy_361_args.push_back(PointerTy_5);
FunctionType* FuncTy_361 = FunctionType::get(
 /*Result=*/PointerTy_11,
 /*Params=*/FuncTy_361_args,
 /*isVarArg=*/false);

PointerType* PointerTy_360 = PointerType::get(FuncTy_361, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_360);
std::vector<Type*>FuncTy_363_args;
FuncTy_363_args.push_back(PointerTy_48);
FuncTy_363_args.push_back(PointerTy_347);
FuncTy_363_args.push_back(PointerTy_5);
FunctionType* FuncTy_363 = FunctionType::get(
 /*Result=*/PointerTy_9,
 /*Params=*/FuncTy_363_args,
 /*isVarArg=*/false);

PointerType* PointerTy_362 = PointerType::get(FuncTy_363, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_362);
std::vector<Type*>FuncTy_365_args;
FuncTy_365_args.push_back(PointerTy_48);
FuncTy_365_args.push_back(PointerTy_326);
FuncTy_365_args.push_back(PointerTy_5);
FuncTy_365_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_365 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_365_args,
 /*isVarArg=*/false);

PointerType* PointerTy_364 = PointerType::get(FuncTy_365, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_364);
std::vector<Type*>FuncTy_367_args;
FuncTy_367_args.push_back(PointerTy_48);
FuncTy_367_args.push_back(PointerTy_329);
FuncTy_367_args.push_back(PointerTy_5);
FuncTy_367_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_367 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_367_args,
 /*isVarArg=*/false);

PointerType* PointerTy_366 = PointerType::get(FuncTy_367, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_366);
std::vector<Type*>FuncTy_369_args;
FuncTy_369_args.push_back(PointerTy_48);
FuncTy_369_args.push_back(PointerTy_332);
FuncTy_369_args.push_back(PointerTy_7);
FuncTy_369_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_369 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_369_args,
 /*isVarArg=*/false);

PointerType* PointerTy_368 = PointerType::get(FuncTy_369, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_368);
std::vector<Type*>FuncTy_371_args;
FuncTy_371_args.push_back(PointerTy_48);
FuncTy_371_args.push_back(PointerTy_335);
FuncTy_371_args.push_back(PointerTy_7);
FuncTy_371_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_371 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_371_args,
 /*isVarArg=*/false);

PointerType* PointerTy_370 = PointerType::get(FuncTy_371, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_370);
std::vector<Type*>FuncTy_373_args;
FuncTy_373_args.push_back(PointerTy_48);
FuncTy_373_args.push_back(PointerTy_338);
FuncTy_373_args.push_back(PointerTy_13);
FuncTy_373_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_373 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_373_args,
 /*isVarArg=*/false);

PointerType* PointerTy_372 = PointerType::get(FuncTy_373, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_372);
std::vector<Type*>FuncTy_375_args;
FuncTy_375_args.push_back(PointerTy_48);
FuncTy_375_args.push_back(PointerTy_341);
FuncTy_375_args.push_back(PointerTy_3);
FuncTy_375_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_375 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_375_args,
 /*isVarArg=*/false);

PointerType* PointerTy_374 = PointerType::get(FuncTy_375, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_374);
std::vector<Type*>FuncTy_377_args;
FuncTy_377_args.push_back(PointerTy_48);
FuncTy_377_args.push_back(PointerTy_344);
FuncTy_377_args.push_back(PointerTy_11);
FuncTy_377_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_377 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_377_args,
 /*isVarArg=*/false);

PointerType* PointerTy_376 = PointerType::get(FuncTy_377, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_376);
std::vector<Type*>FuncTy_379_args;
FuncTy_379_args.push_back(PointerTy_48);
FuncTy_379_args.push_back(PointerTy_347);
FuncTy_379_args.push_back(PointerTy_9);
FuncTy_379_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_379 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_379_args,
 /*isVarArg=*/false);

PointerType* PointerTy_378 = PointerType::get(FuncTy_379, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_378);
std::vector<Type*>FuncTy_381_args;
FuncTy_381_args.push_back(PointerTy_48);
FuncTy_381_args.push_back(PointerTy_326);
FuncTy_381_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_381_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_381_args.push_back(PointerTy_5);
FunctionType* FuncTy_381 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_381_args,
 /*isVarArg=*/false);

PointerType* PointerTy_380 = PointerType::get(FuncTy_381, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_380);
std::vector<Type*>FuncTy_383_args;
FuncTy_383_args.push_back(PointerTy_48);
FuncTy_383_args.push_back(PointerTy_329);
FuncTy_383_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_383_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_383_args.push_back(PointerTy_5);
FunctionType* FuncTy_383 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_383_args,
 /*isVarArg=*/false);

PointerType* PointerTy_382 = PointerType::get(FuncTy_383, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_382);
std::vector<Type*>FuncTy_385_args;
FuncTy_385_args.push_back(PointerTy_48);
FuncTy_385_args.push_back(PointerTy_332);
FuncTy_385_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_385_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_385_args.push_back(PointerTy_7);
FunctionType* FuncTy_385 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_385_args,
 /*isVarArg=*/false);

PointerType* PointerTy_384 = PointerType::get(FuncTy_385, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_384);
std::vector<Type*>FuncTy_387_args;
FuncTy_387_args.push_back(PointerTy_48);
FuncTy_387_args.push_back(PointerTy_335);
FuncTy_387_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_387_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_387_args.push_back(PointerTy_7);
FunctionType* FuncTy_387 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_387_args,
 /*isVarArg=*/false);

PointerType* PointerTy_386 = PointerType::get(FuncTy_387, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_386);
std::vector<Type*>FuncTy_389_args;
FuncTy_389_args.push_back(PointerTy_48);
FuncTy_389_args.push_back(PointerTy_338);
FuncTy_389_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_389_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_389_args.push_back(PointerTy_13);
FunctionType* FuncTy_389 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_389_args,
 /*isVarArg=*/false);

PointerType* PointerTy_388 = PointerType::get(FuncTy_389, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_388);
std::vector<Type*>FuncTy_391_args;
FuncTy_391_args.push_back(PointerTy_48);
FuncTy_391_args.push_back(PointerTy_341);
FuncTy_391_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_391_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_391_args.push_back(PointerTy_3);
FunctionType* FuncTy_391 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_391_args,
 /*isVarArg=*/false);

PointerType* PointerTy_390 = PointerType::get(FuncTy_391, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_390);
std::vector<Type*>FuncTy_393_args;
FuncTy_393_args.push_back(PointerTy_48);
FuncTy_393_args.push_back(PointerTy_344);
FuncTy_393_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_393_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_393_args.push_back(PointerTy_11);
FunctionType* FuncTy_393 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_393_args,
 /*isVarArg=*/false);

PointerType* PointerTy_392 = PointerType::get(FuncTy_393, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_392);
std::vector<Type*>FuncTy_395_args;
FuncTy_395_args.push_back(PointerTy_48);
FuncTy_395_args.push_back(PointerTy_347);
FuncTy_395_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_395_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_395_args.push_back(PointerTy_9);
FunctionType* FuncTy_395 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_395_args,
 /*isVarArg=*/false);

PointerType* PointerTy_394 = PointerType::get(FuncTy_395, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_394);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_380);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_382);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_384);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_386);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_388);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_390);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_392);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_394);
std::vector<Type*>FuncTy_397_args;
FuncTy_397_args.push_back(PointerTy_48);
FuncTy_397_args.push_back(PointerTy_51);
StructType *StructTy_struct_JNINativeMethod = mod->getTypeByName("struct.JNINativeMethod");
if (!StructTy_struct_JNINativeMethod) {
StructTy_struct_JNINativeMethod = StructType::create(mod->getContext(), "struct.JNINativeMethod");
}
std::vector<Type*>StructTy_struct_JNINativeMethod_fields;
StructTy_struct_JNINativeMethod_fields.push_back(PointerTy_5);
StructTy_struct_JNINativeMethod_fields.push_back(PointerTy_5);
StructTy_struct_JNINativeMethod_fields.push_back(PointerTy_5);
if (StructTy_struct_JNINativeMethod->isOpaque()) {
StructTy_struct_JNINativeMethod->setBody(StructTy_struct_JNINativeMethod_fields, /*isPacked=*/false);
}

PointerType* PointerTy_398 = PointerType::get(StructTy_struct_JNINativeMethod, 0);

FuncTy_397_args.push_back(PointerTy_398);
FuncTy_397_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_397 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_397_args,
 /*isVarArg=*/false);

PointerType* PointerTy_396 = PointerType::get(FuncTy_397, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_396);
std::vector<Type*>FuncTy_400_args;
FuncTy_400_args.push_back(PointerTy_48);
FuncTy_400_args.push_back(PointerTy_51);
FunctionType* FuncTy_400 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_400_args,
 /*isVarArg=*/false);

PointerType* PointerTy_399 = PointerType::get(FuncTy_400, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_399);
std::vector<Type*>FuncTy_402_args;
FuncTy_402_args.push_back(PointerTy_48);
FuncTy_402_args.push_back(PointerTy_42);
FunctionType* FuncTy_402 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_402_args,
 /*isVarArg=*/false);

PointerType* PointerTy_401 = PointerType::get(FuncTy_402, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_401);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_401);
std::vector<Type*>FuncTy_404_args;
FuncTy_404_args.push_back(PointerTy_48);
StructType *StructTy_struct__JavaVM = mod->getTypeByName("struct._JavaVM");
if (!StructTy_struct__JavaVM) {
StructTy_struct__JavaVM = StructType::create(mod->getContext(), "struct._JavaVM");
}
std::vector<Type*>StructTy_struct__JavaVM_fields;
StructType *StructTy_struct_JNIInvokeInterface = mod->getTypeByName("struct.JNIInvokeInterface");
if (!StructTy_struct_JNIInvokeInterface) {
StructTy_struct_JNIInvokeInterface = StructType::create(mod->getContext(), "struct.JNIInvokeInterface");
}
std::vector<Type*>StructTy_struct_JNIInvokeInterface_fields;
StructTy_struct_JNIInvokeInterface_fields.push_back(PointerTy_5);
StructTy_struct_JNIInvokeInterface_fields.push_back(PointerTy_5);
StructTy_struct_JNIInvokeInterface_fields.push_back(PointerTy_5);
std::vector<Type*>FuncTy_409_args;
PointerType* PointerTy_406 = PointerType::get(StructTy_struct__JavaVM, 0);

FuncTy_409_args.push_back(PointerTy_406);
FunctionType* FuncTy_409 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_409_args,
 /*isVarArg=*/false);

PointerType* PointerTy_408 = PointerType::get(FuncTy_409, 0);

StructTy_struct_JNIInvokeInterface_fields.push_back(PointerTy_408);
std::vector<Type*>FuncTy_411_args;
FuncTy_411_args.push_back(PointerTy_406);
PointerType* PointerTy_412 = PointerType::get(PointerTy_48, 0);

FuncTy_411_args.push_back(PointerTy_412);
FuncTy_411_args.push_back(PointerTy_5);
FunctionType* FuncTy_411 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_411_args,
 /*isVarArg=*/false);

PointerType* PointerTy_410 = PointerType::get(FuncTy_411, 0);

StructTy_struct_JNIInvokeInterface_fields.push_back(PointerTy_410);
StructTy_struct_JNIInvokeInterface_fields.push_back(PointerTy_408);
std::vector<Type*>FuncTy_414_args;
FuncTy_414_args.push_back(PointerTy_406);
PointerType* PointerTy_415 = PointerType::get(PointerTy_5, 0);

FuncTy_414_args.push_back(PointerTy_415);
FuncTy_414_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_414 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_414_args,
 /*isVarArg=*/false);

PointerType* PointerTy_413 = PointerType::get(FuncTy_414, 0);

StructTy_struct_JNIInvokeInterface_fields.push_back(PointerTy_413);
StructTy_struct_JNIInvokeInterface_fields.push_back(PointerTy_410);
if (StructTy_struct_JNIInvokeInterface->isOpaque()) {
StructTy_struct_JNIInvokeInterface->setBody(StructTy_struct_JNIInvokeInterface_fields, /*isPacked=*/false);
}

PointerType* PointerTy_407 = PointerType::get(StructTy_struct_JNIInvokeInterface, 0);

StructTy_struct__JavaVM_fields.push_back(PointerTy_407);
if (StructTy_struct__JavaVM->isOpaque()) {
StructTy_struct__JavaVM->setBody(StructTy_struct__JavaVM_fields, /*isPacked=*/false);
}


PointerType* PointerTy_405 = PointerType::get(PointerTy_406, 0);

FuncTy_404_args.push_back(PointerTy_405);
FunctionType* FuncTy_404 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_404_args,
 /*isVarArg=*/false);

PointerType* PointerTy_403 = PointerType::get(FuncTy_404, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_403);
std::vector<Type*>FuncTy_417_args;
FuncTy_417_args.push_back(PointerTy_48);
FuncTy_417_args.push_back(PointerTy_301);
FuncTy_417_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_417_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_417_args.push_back(PointerTy_7);
FunctionType* FuncTy_417 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_417_args,
 /*isVarArg=*/false);

PointerType* PointerTy_416 = PointerType::get(FuncTy_417, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_416);
std::vector<Type*>FuncTy_419_args;
FuncTy_419_args.push_back(PointerTy_48);
FuncTy_419_args.push_back(PointerTy_301);
FuncTy_419_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_419_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_419_args.push_back(PointerTy_5);
FunctionType* FuncTy_419 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_419_args,
 /*isVarArg=*/false);

PointerType* PointerTy_418 = PointerType::get(FuncTy_419, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_418);
std::vector<Type*>FuncTy_421_args;
FuncTy_421_args.push_back(PointerTy_48);
FuncTy_421_args.push_back(PointerTy_316);
FuncTy_421_args.push_back(PointerTy_5);
FunctionType* FuncTy_421 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_421_args,
 /*isVarArg=*/false);

PointerType* PointerTy_420 = PointerType::get(FuncTy_421, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_420);
std::vector<Type*>FuncTy_423_args;
FuncTy_423_args.push_back(PointerTy_48);
FuncTy_423_args.push_back(PointerTy_316);
FuncTy_423_args.push_back(PointerTy_5);
FuncTy_423_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_423 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_423_args,
 /*isVarArg=*/false);

PointerType* PointerTy_422 = PointerType::get(FuncTy_423, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_422);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_304);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_306);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_81);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_83);
std::vector<Type*>FuncTy_425_args;
FuncTy_425_args.push_back(PointerTy_48);
FunctionType* FuncTy_425 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 8),
 /*Params=*/FuncTy_425_args,
 /*isVarArg=*/false);

PointerType* PointerTy_424 = PointerType::get(FuncTy_425, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_424);
std::vector<Type*>FuncTy_427_args;
FuncTy_427_args.push_back(PointerTy_48);
FuncTy_427_args.push_back(PointerTy_5);
FuncTy_427_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_427 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_427_args,
 /*isVarArg=*/false);

PointerType* PointerTy_426 = PointerType::get(FuncTy_427, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_426);
std::vector<Type*>FuncTy_429_args;
FuncTy_429_args.push_back(PointerTy_48);
FuncTy_429_args.push_back(PointerTy_42);
FunctionType* FuncTy_429 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_429_args,
 /*isVarArg=*/false);

PointerType* PointerTy_428 = PointerType::get(FuncTy_429, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_428);
std::vector<Type*>FuncTy_431_args;
FuncTy_431_args.push_back(PointerTy_48);
FuncTy_431_args.push_back(PointerTy_42);
FunctionType* FuncTy_431 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_431_args,
 /*isVarArg=*/false);

PointerType* PointerTy_430 = PointerType::get(FuncTy_431, 0);

StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_430);
StructTy_struct_JNINativeInterface_fields.push_back(PointerTy_401);
if (StructTy_struct_JNINativeInterface->isOpaque()) {
StructTy_struct_JNINativeInterface->setBody(StructTy_struct_JNINativeInterface_fields, /*isPacked=*/false);
}

PointerType* PointerTy_45 = PointerType::get(StructTy_struct_JNINativeInterface, 0);

StructTy_struct__JNIEnv_fields.push_back(PointerTy_45);
if (StructTy_struct__JNIEnv->isOpaque()) {
StructTy_struct__JNIEnv->setBody(StructTy_struct__JNIEnv_fields, /*isPacked=*/false);
}

StructTy_class_art__JNIEnvExt_fields.push_back(StructTy_struct__JNIEnv);
StructType *StructTy_class_art__Thread = mod->getTypeByName("class.art::Thread");
if (!StructTy_class_art__Thread) {
StructTy_class_art__Thread = StructType::create(mod->getContext(), "class.art::Thread");
}
std::vector<Type*>StructTy_class_art__Thread_fields;
StructType *StructTy_struct_art__Thread__tls_32bit_sized_values = mod->getTypeByName("struct.art::Thread::tls_32bit_sized_values");
if (!StructTy_struct_art__Thread__tls_32bit_sized_values) {
StructTy_struct_art__Thread__tls_32bit_sized_values = StructType::create(mod->getContext(), "struct.art::Thread::tls_32bit_sized_values");
}
std::vector<Type*>StructTy_struct_art__Thread__tls_32bit_sized_values_fields;
StructType *StructTy_union_art__Thread__StateAndFlags = mod->getTypeByName("union.art::Thread::StateAndFlags");
if (!StructTy_union_art__Thread__StateAndFlags) {
StructTy_union_art__Thread__StateAndFlags = StructType::create(mod->getContext(), "union.art::Thread::StateAndFlags");
}
std::vector<Type*>StructTy_union_art__Thread__StateAndFlags_fields;
StructType *StructTy_class_art__Atomic_1 = mod->getTypeByName("class.art::Atomic.1");
if (!StructTy_class_art__Atomic_1) {
StructTy_class_art__Atomic_1 = StructType::create(mod->getContext(), "class.art::Atomic.1");
}
std::vector<Type*>StructTy_class_art__Atomic_1_fields;
StructType *StructTy_struct_std____1__atomic_2 = mod->getTypeByName("struct.std::__1::atomic.2");
if (!StructTy_struct_std____1__atomic_2) {
StructTy_struct_std____1__atomic_2 = StructType::create(mod->getContext(), "struct.std::__1::atomic.2");
}
std::vector<Type*>StructTy_struct_std____1__atomic_2_fields;
StructType *StructTy_struct_std____1____atomic_base_3 = mod->getTypeByName("struct.std::__1::__atomic_base.3");
if (!StructTy_struct_std____1____atomic_base_3) {
StructTy_struct_std____1____atomic_base_3 = StructType::create(mod->getContext(), "struct.std::__1::__atomic_base.3");
}
std::vector<Type*>StructTy_struct_std____1____atomic_base_3_fields;
StructType *StructTy_struct_std____1____atomic_base_4 = mod->getTypeByName("struct.std::__1::__atomic_base.4");
if (!StructTy_struct_std____1____atomic_base_4) {
StructTy_struct_std____1____atomic_base_4 = StructType::create(mod->getContext(), "struct.std::__1::__atomic_base.4");
}
std::vector<Type*>StructTy_struct_std____1____atomic_base_4_fields;
StructTy_struct_std____1____atomic_base_4_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_struct_std____1____atomic_base_4->isOpaque()) {
StructTy_struct_std____1____atomic_base_4->setBody(StructTy_struct_std____1____atomic_base_4_fields, /*isPacked=*/false);
}

StructTy_struct_std____1____atomic_base_3_fields.push_back(StructTy_struct_std____1____atomic_base_4);
if (StructTy_struct_std____1____atomic_base_3->isOpaque()) {
StructTy_struct_std____1____atomic_base_3->setBody(StructTy_struct_std____1____atomic_base_3_fields, /*isPacked=*/false);
}

StructTy_struct_std____1__atomic_2_fields.push_back(StructTy_struct_std____1____atomic_base_3);
if (StructTy_struct_std____1__atomic_2->isOpaque()) {
StructTy_struct_std____1__atomic_2->setBody(StructTy_struct_std____1__atomic_2_fields, /*isPacked=*/false);
}

StructTy_class_art__Atomic_1_fields.push_back(StructTy_struct_std____1__atomic_2);
if (StructTy_class_art__Atomic_1->isOpaque()) {
StructTy_class_art__Atomic_1->setBody(StructTy_class_art__Atomic_1_fields, /*isPacked=*/false);
}

StructTy_union_art__Thread__StateAndFlags_fields.push_back(StructTy_class_art__Atomic_1);
if (StructTy_union_art__Thread__StateAndFlags->isOpaque()) {
StructTy_union_art__Thread__StateAndFlags->setBody(StructTy_union_art__Thread__StateAndFlags_fields, /*isPacked=*/false);
}

StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(StructTy_union_art__Thread__StateAndFlags);
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(StructTy_class_art__Atomic);
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(StructTy_class_art__Atomic_1);
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_art__Thread__tls_32bit_sized_values_fields.push_back(StructTy_struct_std____1__atomic);
if (StructTy_struct_art__Thread__tls_32bit_sized_values->isOpaque()) {
StructTy_struct_art__Thread__tls_32bit_sized_values->setBody(StructTy_struct_art__Thread__tls_32bit_sized_values_fields, /*isPacked=*/false);
}

StructTy_class_art__Thread_fields.push_back(StructTy_struct_art__Thread__tls_32bit_sized_values);
ArrayType* ArrayTy_433 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 4);

StructTy_class_art__Thread_fields.push_back(ArrayTy_433);
StructType *StructTy_struct_art__Thread__tls_64bit_sized_values = mod->getTypeByName("struct.art::Thread::tls_64bit_sized_values");
if (!StructTy_struct_art__Thread__tls_64bit_sized_values) {
StructTy_struct_art__Thread__tls_64bit_sized_values = StructType::create(mod->getContext(), "struct.art::Thread::tls_64bit_sized_values");
}
std::vector<Type*>StructTy_struct_art__Thread__tls_64bit_sized_values_fields;
StructTy_struct_art__Thread__tls_64bit_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructType *StructTy_struct_art__RuntimeStats = mod->getTypeByName("struct.art::RuntimeStats");
if (!StructTy_struct_art__RuntimeStats) {
StructTy_struct_art__RuntimeStats = StructType::create(mod->getContext(), "struct.art::RuntimeStats");
}
std::vector<Type*>StructTy_struct_art__RuntimeStats_fields;
StructTy_struct_art__RuntimeStats_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct_art__RuntimeStats_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct_art__RuntimeStats_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct_art__RuntimeStats_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct_art__RuntimeStats_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct_art__RuntimeStats_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct_art__RuntimeStats_fields.push_back(IntegerType::get(mod->getContext(), 64));
if (StructTy_struct_art__RuntimeStats->isOpaque()) {
StructTy_struct_art__RuntimeStats->setBody(StructTy_struct_art__RuntimeStats_fields, /*isPacked=*/false);
}

StructTy_struct_art__Thread__tls_64bit_sized_values_fields.push_back(StructTy_struct_art__RuntimeStats);
if (StructTy_struct_art__Thread__tls_64bit_sized_values->isOpaque()) {
StructTy_struct_art__Thread__tls_64bit_sized_values->setBody(StructTy_struct_art__Thread__tls_64bit_sized_values_fields, /*isPacked=*/false);
}

StructTy_class_art__Thread_fields.push_back(StructTy_struct_art__Thread__tls_64bit_sized_values);
StructType *StructTy_struct_art__Thread__tls_ptr_sized_values = mod->getTypeByName("struct.art::Thread::tls_ptr_sized_values");
if (!StructTy_struct_art__Thread__tls_ptr_sized_values) {
StructTy_struct_art__Thread__tls_ptr_sized_values = StructType::create(mod->getContext(), "struct.art::Thread::tls_ptr_sized_values");
}
std::vector<Type*>StructTy_struct_art__Thread__tls_ptr_sized_values_fields;
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_5);
StructType *StructTy_class_art__mirror__Throwable = mod->getTypeByName("class.art::mirror::Throwable");
if (!StructTy_class_art__mirror__Throwable) {
StructTy_class_art__mirror__Throwable = StructType::create(mod->getContext(), "class.art::mirror::Throwable");
}
std::vector<Type*>StructTy_class_art__mirror__Throwable_fields;
if (StructTy_class_art__mirror__Throwable->isOpaque()) {
StructTy_class_art__mirror__Throwable->setBody(StructTy_class_art__mirror__Throwable_fields, /*isPacked=*/false);
}

PointerType* PointerTy_434 = PointerType::get(StructTy_class_art__mirror__Throwable, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_434);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_5);
StructType *StructTy_class_art__ManagedStack = mod->getTypeByName("class.art::ManagedStack");
if (!StructTy_class_art__ManagedStack) {
StructTy_class_art__ManagedStack = StructType::create(mod->getContext(), "class.art::ManagedStack");
}
std::vector<Type*>StructTy_class_art__ManagedStack_fields;
StructType *StructTy_class_art__ManagedStack__TaggedTopQuickFrame = mod->getTypeByName("class.art::ManagedStack::TaggedTopQuickFrame");
if (!StructTy_class_art__ManagedStack__TaggedTopQuickFrame) {
StructTy_class_art__ManagedStack__TaggedTopQuickFrame = StructType::create(mod->getContext(), "class.art::ManagedStack::TaggedTopQuickFrame");
}
std::vector<Type*>StructTy_class_art__ManagedStack__TaggedTopQuickFrame_fields;
StructTy_class_art__ManagedStack__TaggedTopQuickFrame_fields.push_back(IntegerType::get(mod->getContext(), 64));
if (StructTy_class_art__ManagedStack__TaggedTopQuickFrame->isOpaque()) {
StructTy_class_art__ManagedStack__TaggedTopQuickFrame->setBody(StructTy_class_art__ManagedStack__TaggedTopQuickFrame_fields, /*isPacked=*/false);
}

StructTy_class_art__ManagedStack_fields.push_back(StructTy_class_art__ManagedStack__TaggedTopQuickFrame);
PointerType* PointerTy_435 = PointerType::get(StructTy_class_art__ManagedStack, 0);

StructTy_class_art__ManagedStack_fields.push_back(PointerTy_435);
StructType *StructTy_class_art__ShadowFrame = mod->getTypeByName("class.art::ShadowFrame");
if (!StructTy_class_art__ShadowFrame) {
StructTy_class_art__ShadowFrame = StructType::create(mod->getContext(), "class.art::ShadowFrame");
}
std::vector<Type*>StructTy_class_art__ShadowFrame_fields;
if (StructTy_class_art__ShadowFrame->isOpaque()) {
StructTy_class_art__ShadowFrame->setBody(StructTy_class_art__ShadowFrame_fields, /*isPacked=*/false);
}

PointerType* PointerTy_436 = PointerType::get(StructTy_class_art__ShadowFrame, 0);

StructTy_class_art__ManagedStack_fields.push_back(PointerTy_436);
if (StructTy_class_art__ManagedStack->isOpaque()) {
StructTy_class_art__ManagedStack->setBody(StructTy_class_art__ManagedStack_fields, /*isPacked=*/false);
}

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(StructTy_class_art__ManagedStack);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_3);
PointerType* PointerTy_44 = PointerType::get(StructTy_class_art__JNIEnvExt, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_44);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_44);
PointerType* PointerTy_432 = PointerType::get(StructTy_class_art__Thread, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_432);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_15);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_42);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_5);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructType *StructTy_union_art__Thread__tls_ptr_sized_values__DepsOrStackTraceSample = mod->getTypeByName("union.art::Thread::tls_ptr_sized_values::DepsOrStackTraceSample");
if (!StructTy_union_art__Thread__tls_ptr_sized_values__DepsOrStackTraceSample) {
StructTy_union_art__Thread__tls_ptr_sized_values__DepsOrStackTraceSample = StructType::create(mod->getContext(), "union.art::Thread::tls_ptr_sized_values::DepsOrStackTraceSample");
}
std::vector<Type*>StructTy_union_art__Thread__tls_ptr_sized_values__DepsOrStackTraceSample_fields;
StructType *StructTy_class_std____1__vector = mod->getTypeByName("class.std::__1::vector");
if (!StructTy_class_std____1__vector) {
StructTy_class_std____1__vector = StructType::create(mod->getContext(), "class.std::__1::vector");
}
std::vector<Type*>StructTy_class_std____1__vector_fields;
if (StructTy_class_std____1__vector->isOpaque()) {
StructTy_class_std____1__vector->setBody(StructTy_class_std____1__vector_fields, /*isPacked=*/false);
}

PointerType* PointerTy_437 = PointerType::get(StructTy_class_std____1__vector, 0);

StructTy_union_art__Thread__tls_ptr_sized_values__DepsOrStackTraceSample_fields.push_back(PointerTy_437);
if (StructTy_union_art__Thread__tls_ptr_sized_values__DepsOrStackTraceSample->isOpaque()) {
StructTy_union_art__Thread__tls_ptr_sized_values__DepsOrStackTraceSample->setBody(StructTy_union_art__Thread__tls_ptr_sized_values__DepsOrStackTraceSample_fields, /*isPacked=*/false);
}

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(StructTy_union_art__Thread__tls_ptr_sized_values__DepsOrStackTraceSample);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_432);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_15);
StructType *StructTy_class_art__BaseHandleScope = mod->getTypeByName("class.art::BaseHandleScope");
if (!StructTy_class_art__BaseHandleScope) {
StructTy_class_art__BaseHandleScope = StructType::create(mod->getContext(), "class.art::BaseHandleScope");
}
std::vector<Type*>StructTy_class_art__BaseHandleScope_fields;
PointerType* PointerTy_438 = PointerType::get(StructTy_class_art__BaseHandleScope, 0);

StructTy_class_art__BaseHandleScope_fields.push_back(PointerTy_438);
StructTy_class_art__BaseHandleScope_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_class_art__BaseHandleScope->isOpaque()) {
StructTy_class_art__BaseHandleScope->setBody(StructTy_class_art__BaseHandleScope_fields, /*isPacked=*/true);
}


StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_438);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_42);
StructType *StructTy_class_art__Context = mod->getTypeByName("class.art::Context");
if (!StructTy_class_art__Context) {
StructTy_class_art__Context = StructType::create(mod->getContext(), "class.art::Context");
}
std::vector<Type*>StructTy_class_art__Context_fields;
if (StructTy_class_art__Context->isOpaque()) {
StructTy_class_art__Context->setBody(StructTy_class_art__Context_fields, /*isPacked=*/false);
}

PointerType* PointerTy_439 = PointerType::get(StructTy_class_art__Context, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_439);
StructType *StructTy_class_std____1__deque = mod->getTypeByName("class.std::__1::deque");
if (!StructTy_class_std____1__deque) {
StructTy_class_std____1__deque = StructType::create(mod->getContext(), "class.std::__1::deque");
}
std::vector<Type*>StructTy_class_std____1__deque_fields;
if (StructTy_class_std____1__deque->isOpaque()) {
StructTy_class_std____1__deque->setBody(StructTy_class_std____1__deque_fields, /*isPacked=*/false);
}

PointerType* PointerTy_440 = PointerType::get(StructTy_class_std____1__deque, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_440);
StructType *StructTy_struct_art__DebugInvokeReq = mod->getTypeByName("struct.art::DebugInvokeReq");
if (!StructTy_struct_art__DebugInvokeReq) {
StructTy_struct_art__DebugInvokeReq = StructType::create(mod->getContext(), "struct.art::DebugInvokeReq");
}
std::vector<Type*>StructTy_struct_art__DebugInvokeReq_fields;
if (StructTy_struct_art__DebugInvokeReq->isOpaque()) {
StructTy_struct_art__DebugInvokeReq->setBody(StructTy_struct_art__DebugInvokeReq_fields, /*isPacked=*/false);
}

PointerType* PointerTy_441 = PointerType::get(StructTy_struct_art__DebugInvokeReq, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_441);
StructType *StructTy_class_art__SingleStepControl = mod->getTypeByName("class.art::SingleStepControl");
if (!StructTy_class_art__SingleStepControl) {
StructTy_class_art__SingleStepControl = StructType::create(mod->getContext(), "class.art::SingleStepControl");
}
std::vector<Type*>StructTy_class_art__SingleStepControl_fields;
if (StructTy_class_art__SingleStepControl->isOpaque()) {
StructTy_class_art__SingleStepControl->setBody(StructTy_class_art__SingleStepControl_fields, /*isPacked=*/false);
}

PointerType* PointerTy_442 = PointerType::get(StructTy_class_art__SingleStepControl, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_442);
StructType *StructTy_class_art__StackedShadowFrameRecord = mod->getTypeByName("class.art::StackedShadowFrameRecord");
if (!StructTy_class_art__StackedShadowFrameRecord) {
StructTy_class_art__StackedShadowFrameRecord = StructType::create(mod->getContext(), "class.art::StackedShadowFrameRecord");
}
std::vector<Type*>StructTy_class_art__StackedShadowFrameRecord_fields;
if (StructTy_class_art__StackedShadowFrameRecord->isOpaque()) {
StructTy_class_art__StackedShadowFrameRecord->setBody(StructTy_class_art__StackedShadowFrameRecord_fields, /*isPacked=*/false);
}

PointerType* PointerTy_443 = PointerType::get(StructTy_class_art__StackedShadowFrameRecord, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_443);
StructType *StructTy_class_art__DeoptimizationContextRecord = mod->getTypeByName("class.art::DeoptimizationContextRecord");
if (!StructTy_class_art__DeoptimizationContextRecord) {
StructTy_class_art__DeoptimizationContextRecord = StructType::create(mod->getContext(), "class.art::DeoptimizationContextRecord");
}
std::vector<Type*>StructTy_class_art__DeoptimizationContextRecord_fields;
if (StructTy_class_art__DeoptimizationContextRecord->isOpaque()) {
StructTy_class_art__DeoptimizationContextRecord->setBody(StructTy_class_art__DeoptimizationContextRecord_fields, /*isPacked=*/false);
}

PointerType* PointerTy_444 = PointerType::get(StructTy_class_art__DeoptimizationContextRecord, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_444);
StructType *StructTy_class_art__FrameIdToShadowFrame = mod->getTypeByName("class.art::FrameIdToShadowFrame");
if (!StructTy_class_art__FrameIdToShadowFrame) {
StructTy_class_art__FrameIdToShadowFrame = StructType::create(mod->getContext(), "class.art::FrameIdToShadowFrame");
}
std::vector<Type*>StructTy_class_art__FrameIdToShadowFrame_fields;
if (StructTy_class_art__FrameIdToShadowFrame->isOpaque()) {
StructTy_class_art__FrameIdToShadowFrame->setBody(StructTy_class_art__FrameIdToShadowFrame_fields, /*isPacked=*/false);
}

PointerType* PointerTy_445 = PointerType::get(StructTy_class_art__FrameIdToShadowFrame, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_445);
StructType *StructTy_class_std____1__basic_string = mod->getTypeByName("class.std::__1::basic_string");
if (!StructTy_class_std____1__basic_string) {
StructTy_class_std____1__basic_string = StructType::create(mod->getContext(), "class.std::__1::basic_string");
}
std::vector<Type*>StructTy_class_std____1__basic_string_fields;
StructType *StructTy_class_std____1____compressed_pair = mod->getTypeByName("class.std::__1::__compressed_pair");
if (!StructTy_class_std____1____compressed_pair) {
StructTy_class_std____1____compressed_pair = StructType::create(mod->getContext(), "class.std::__1::__compressed_pair");
}
std::vector<Type*>StructTy_class_std____1____compressed_pair_fields;
StructType *StructTy_struct_std____1____compressed_pair_elem = mod->getTypeByName("struct.std::__1::__compressed_pair_elem");
if (!StructTy_struct_std____1____compressed_pair_elem) {
StructTy_struct_std____1____compressed_pair_elem = StructType::create(mod->getContext(), "struct.std::__1::__compressed_pair_elem");
}
std::vector<Type*>StructTy_struct_std____1____compressed_pair_elem_fields;
StructType *StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______rep = mod->getTypeByName("struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep");
if (!StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______rep) {
StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______rep = StructType::create(mod->getContext(), "struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep");
}
std::vector<Type*>StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______rep_fields;
StructType *StructTy_union_anon = mod->getTypeByName("union.anon");
if (!StructTy_union_anon) {
StructTy_union_anon = StructType::create(mod->getContext(), "union.anon");
}
std::vector<Type*>StructTy_union_anon_fields;
StructType *StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long = mod->getTypeByName("struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long");
if (!StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long) {
StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long = StructType::create(mod->getContext(), "struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long");
}
std::vector<Type*>StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long_fields;
StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long_fields.push_back(PointerTy_5);
if (StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long->isOpaque()) {
StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long->setBody(StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long_fields, /*isPacked=*/false);
}

StructTy_union_anon_fields.push_back(StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______long);
if (StructTy_union_anon->isOpaque()) {
StructTy_union_anon->setBody(StructTy_union_anon_fields, /*isPacked=*/false);
}

StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______rep_fields.push_back(StructTy_union_anon);
if (StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______rep->isOpaque()) {
StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______rep->setBody(StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______rep_fields, /*isPacked=*/false);
}

StructTy_struct_std____1____compressed_pair_elem_fields.push_back(StructTy_struct_std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char_______rep);
if (StructTy_struct_std____1____compressed_pair_elem->isOpaque()) {
StructTy_struct_std____1____compressed_pair_elem->setBody(StructTy_struct_std____1____compressed_pair_elem_fields, /*isPacked=*/false);
}

StructTy_class_std____1____compressed_pair_fields.push_back(StructTy_struct_std____1____compressed_pair_elem);
if (StructTy_class_std____1____compressed_pair->isOpaque()) {
StructTy_class_std____1____compressed_pair->setBody(StructTy_class_std____1____compressed_pair_fields, /*isPacked=*/false);
}

StructTy_class_std____1__basic_string_fields.push_back(StructTy_class_std____1____compressed_pair);
if (StructTy_class_std____1__basic_string->isOpaque()) {
StructTy_class_std____1__basic_string->setBody(StructTy_class_std____1__basic_string_fields, /*isPacked=*/false);
}

PointerType* PointerTy_446 = PointerType::get(StructTy_class_std____1__basic_string, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_446);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_5);
StructType *StructTy_class_art__Closure = mod->getTypeByName("class.art::Closure");
if (!StructTy_class_art__Closure) {
StructTy_class_art__Closure = StructType::create(mod->getContext(), "class.art::Closure");
}
std::vector<Type*>StructTy_class_art__Closure_fields;
if (StructTy_class_art__Closure->isOpaque()) {
StructTy_class_art__Closure->setBody(StructTy_class_art__Closure_fields, /*isPacked=*/false);
}

PointerType* PointerTy_447 = PointerType::get(StructTy_class_art__Closure, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_447);
PointerType* PointerTy_449 = PointerType::get(StructTy_class_art__Atomic_1, 0);

ArrayType* ArrayTy_448 = ArrayType::get(PointerTy_449, 3);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(ArrayTy_448);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_5);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_5);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_5);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_5);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructType *StructTy_struct_art__JniEntryPoints = mod->getTypeByName("struct.art::JniEntryPoints");
if (!StructTy_struct_art__JniEntryPoints) {
StructTy_struct_art__JniEntryPoints = StructType::create(mod->getContext(), "struct.art::JniEntryPoints");
}
std::vector<Type*>StructTy_struct_art__JniEntryPoints_fields;
StructTy_struct_art__JniEntryPoints_fields.push_back(PointerTy_428);
if (StructTy_struct_art__JniEntryPoints->isOpaque()) {
StructTy_struct_art__JniEntryPoints->setBody(StructTy_struct_art__JniEntryPoints_fields, /*isPacked=*/false);
}

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(StructTy_struct_art__JniEntryPoints);
StructType *StructTy_struct_art__QuickEntryPoints = mod->getTypeByName("struct.art::QuickEntryPoints");
if (!StructTy_struct_art__QuickEntryPoints) {
StructTy_struct_art__QuickEntryPoints = StructType::create(mod->getContext(), "struct.art::QuickEntryPoints");
}
std::vector<Type*>StructTy_struct_art__QuickEntryPoints_fields;
std::vector<Type*>FuncTy_451_args;
StructType *StructTy_class_art__mirror__Class = mod->getTypeByName("class.art::mirror::Class");
if (!StructTy_class_art__mirror__Class) {
StructTy_class_art__mirror__Class = StructType::create(mod->getContext(), "class.art::mirror::Class");
}
std::vector<Type*>StructTy_class_art__mirror__Class_fields;
StructTy_class_art__mirror__Class_fields.push_back(StructTy_class_art__mirror__Object);
StructType *StructTy_class_art__mirror__HeapReference_7 = mod->getTypeByName("class.art::mirror::HeapReference.7");
if (!StructTy_class_art__mirror__HeapReference_7) {
StructTy_class_art__mirror__HeapReference_7 = StructType::create(mod->getContext(), "class.art::mirror::HeapReference.7");
}
std::vector<Type*>StructTy_class_art__mirror__HeapReference_7_fields;
StructTy_class_art__mirror__HeapReference_7_fields.push_back(StructTy_class_art__Atomic);
if (StructTy_class_art__mirror__HeapReference_7->isOpaque()) {
StructTy_class_art__mirror__HeapReference_7->setBody(StructTy_class_art__mirror__HeapReference_7_fields, /*isPacked=*/false);
}

StructTy_class_art__mirror__Class_fields.push_back(StructTy_class_art__mirror__HeapReference_7);
StructTy_class_art__mirror__Class_fields.push_back(StructTy_class_art__mirror__HeapReference);
StructType *StructTy_class_art__mirror__HeapReference_8 = mod->getTypeByName("class.art::mirror::HeapReference.8");
if (!StructTy_class_art__mirror__HeapReference_8) {
StructTy_class_art__mirror__HeapReference_8 = StructType::create(mod->getContext(), "class.art::mirror::HeapReference.8");
}
std::vector<Type*>StructTy_class_art__mirror__HeapReference_8_fields;
StructTy_class_art__mirror__HeapReference_8_fields.push_back(StructTy_class_art__Atomic);
if (StructTy_class_art__mirror__HeapReference_8->isOpaque()) {
StructTy_class_art__mirror__HeapReference_8->setBody(StructTy_class_art__mirror__HeapReference_8_fields, /*isPacked=*/false);
}

StructTy_class_art__mirror__Class_fields.push_back(StructTy_class_art__mirror__HeapReference_8);
StructType *StructTy_class_art__mirror__HeapReference_9 = mod->getTypeByName("class.art::mirror::HeapReference.9");
if (!StructTy_class_art__mirror__HeapReference_9) {
StructTy_class_art__mirror__HeapReference_9 = StructType::create(mod->getContext(), "class.art::mirror::HeapReference.9");
}
std::vector<Type*>StructTy_class_art__mirror__HeapReference_9_fields;
StructTy_class_art__mirror__HeapReference_9_fields.push_back(StructTy_class_art__Atomic);
if (StructTy_class_art__mirror__HeapReference_9->isOpaque()) {
StructTy_class_art__mirror__HeapReference_9->setBody(StructTy_class_art__mirror__HeapReference_9_fields, /*isPacked=*/false);
}

StructTy_class_art__mirror__Class_fields.push_back(StructTy_class_art__mirror__HeapReference_9);
StructType *StructTy_class_art__mirror__HeapReference_10 = mod->getTypeByName("class.art::mirror::HeapReference.10");
if (!StructTy_class_art__mirror__HeapReference_10) {
StructTy_class_art__mirror__HeapReference_10 = StructType::create(mod->getContext(), "class.art::mirror::HeapReference.10");
}
std::vector<Type*>StructTy_class_art__mirror__HeapReference_10_fields;
StructTy_class_art__mirror__HeapReference_10_fields.push_back(StructTy_class_art__Atomic);
if (StructTy_class_art__mirror__HeapReference_10->isOpaque()) {
StructTy_class_art__mirror__HeapReference_10->setBody(StructTy_class_art__mirror__HeapReference_10_fields, /*isPacked=*/false);
}

StructTy_class_art__mirror__Class_fields.push_back(StructTy_class_art__mirror__HeapReference_10);
StructType *StructTy_class_art__mirror__HeapReference_11 = mod->getTypeByName("class.art::mirror::HeapReference.11");
if (!StructTy_class_art__mirror__HeapReference_11) {
StructTy_class_art__mirror__HeapReference_11 = StructType::create(mod->getContext(), "class.art::mirror::HeapReference.11");
}
std::vector<Type*>StructTy_class_art__mirror__HeapReference_11_fields;
StructTy_class_art__mirror__HeapReference_11_fields.push_back(StructTy_class_art__Atomic);
if (StructTy_class_art__mirror__HeapReference_11->isOpaque()) {
StructTy_class_art__mirror__HeapReference_11->setBody(StructTy_class_art__mirror__HeapReference_11_fields, /*isPacked=*/false);
}

StructTy_class_art__mirror__Class_fields.push_back(StructTy_class_art__mirror__HeapReference_11);
StructTy_class_art__mirror__Class_fields.push_back(StructTy_class_art__mirror__HeapReference);
StructType *StructTy_class_art__mirror__HeapReference_12 = mod->getTypeByName("class.art::mirror::HeapReference.12");
if (!StructTy_class_art__mirror__HeapReference_12) {
StructTy_class_art__mirror__HeapReference_12 = StructType::create(mod->getContext(), "class.art::mirror::HeapReference.12");
}
std::vector<Type*>StructTy_class_art__mirror__HeapReference_12_fields;
StructTy_class_art__mirror__HeapReference_12_fields.push_back(StructTy_class_art__Atomic);
if (StructTy_class_art__mirror__HeapReference_12->isOpaque()) {
StructTy_class_art__mirror__HeapReference_12->setBody(StructTy_class_art__mirror__HeapReference_12_fields, /*isPacked=*/false);
}

StructTy_class_art__mirror__Class_fields.push_back(StructTy_class_art__mirror__HeapReference_12);
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 16));
StructTy_class_art__mirror__Class_fields.push_back(IntegerType::get(mod->getContext(), 16));
if (StructTy_class_art__mirror__Class->isOpaque()) {
StructTy_class_art__mirror__Class->setBody(StructTy_class_art__mirror__Class_fields, /*isPacked=*/false);
}

PointerType* PointerTy_452 = PointerType::get(StructTy_class_art__mirror__Class, 0);

FuncTy_451_args.push_back(PointerTy_452);
FuncTy_451_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_451 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_451_args,
 /*isVarArg=*/false);

PointerType* PointerTy_450 = PointerType::get(FuncTy_451, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_450);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_450);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_450);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_450);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_450);
std::vector<Type*>FuncTy_454_args;
FuncTy_454_args.push_back(PointerTy_452);
FunctionType* FuncTy_454 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_454_args,
 /*isVarArg=*/false);

PointerType* PointerTy_453 = PointerType::get(FuncTy_454, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_453);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_453);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_453);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_453);
std::vector<Type*>FuncTy_456_args;
FuncTy_456_args.push_back(PointerTy_5);
FuncTy_456_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_456_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_456_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_456 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_456_args,
 /*isVarArg=*/false);

PointerType* PointerTy_455 = PointerType::get(FuncTy_456, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_455);
std::vector<Type*>FuncTy_458_args;
FuncTy_458_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_458_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_458_args.push_back(PointerTy_5);
FunctionType* FuncTy_458 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_458_args,
 /*isVarArg=*/false);

PointerType* PointerTy_457 = PointerType::get(FuncTy_458, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_457);
std::vector<Type*>FuncTy_460_args;
FuncTy_460_args.push_back(PointerTy_5);
FunctionType* FuncTy_460 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_460_args,
 /*isVarArg=*/false);

PointerType* PointerTy_459 = PointerType::get(FuncTy_460, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_459);
std::vector<Type*>FuncTy_462_args;
FuncTy_462_args.push_back(PointerTy_15);
FuncTy_462_args.push_back(PointerTy_452);
FunctionType* FuncTy_462 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_462_args,
 /*isVarArg=*/false);

PointerType* PointerTy_461 = PointerType::get(FuncTy_462, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_461);
std::vector<Type*>FuncTy_464_args;
FuncTy_464_args.push_back(PointerTy_15);
FuncTy_464_args.push_back(PointerTy_452);
FunctionType* FuncTy_464 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_464_args,
 /*isVarArg=*/false);

PointerType* PointerTy_463 = PointerType::get(FuncTy_464, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_463);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_453);
std::vector<Type*>FuncTy_466_args;
FuncTy_466_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_466 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_466_args,
 /*isVarArg=*/false);

PointerType* PointerTy_465 = PointerType::get(FuncTy_466, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_465);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_465);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_465);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_465);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_465);
std::vector<Type*>FuncTy_468_args;
FuncTy_468_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_468_args.push_back(PointerTy_5);
FuncTy_468_args.push_back(IntegerType::get(mod->getContext(), 8));
FunctionType* FuncTy_468 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_468_args,
 /*isVarArg=*/false);

PointerType* PointerTy_467 = PointerType::get(FuncTy_468, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_467);
std::vector<Type*>FuncTy_470_args;
FuncTy_470_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_470_args.push_back(IntegerType::get(mod->getContext(), 8));
FunctionType* FuncTy_470 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_470_args,
 /*isVarArg=*/false);

PointerType* PointerTy_469 = PointerType::get(FuncTy_470, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_469);
std::vector<Type*>FuncTy_472_args;
FuncTy_472_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_472_args.push_back(PointerTy_5);
FuncTy_472_args.push_back(IntegerType::get(mod->getContext(), 16));
FunctionType* FuncTy_472 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_472_args,
 /*isVarArg=*/false);

PointerType* PointerTy_471 = PointerType::get(FuncTy_472, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_471);
std::vector<Type*>FuncTy_474_args;
FuncTy_474_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_474_args.push_back(IntegerType::get(mod->getContext(), 16));
FunctionType* FuncTy_474 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_474_args,
 /*isVarArg=*/false);

PointerType* PointerTy_473 = PointerType::get(FuncTy_474, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_473);
std::vector<Type*>FuncTy_476_args;
FuncTy_476_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_476_args.push_back(PointerTy_5);
FuncTy_476_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_476 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_476_args,
 /*isVarArg=*/false);

PointerType* PointerTy_475 = PointerType::get(FuncTy_476, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_475);
std::vector<Type*>FuncTy_478_args;
FuncTy_478_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_478_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_478 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_478_args,
 /*isVarArg=*/false);

PointerType* PointerTy_477 = PointerType::get(FuncTy_478, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_477);
std::vector<Type*>FuncTy_480_args;
FuncTy_480_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_480_args.push_back(PointerTy_5);
FuncTy_480_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_480 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_480_args,
 /*isVarArg=*/false);

PointerType* PointerTy_479 = PointerType::get(FuncTy_480, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_479);
std::vector<Type*>FuncTy_482_args;
FuncTy_482_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_482_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_482 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_482_args,
 /*isVarArg=*/false);

PointerType* PointerTy_481 = PointerType::get(FuncTy_482, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_481);
std::vector<Type*>FuncTy_484_args;
FuncTy_484_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_484_args.push_back(PointerTy_5);
FuncTy_484_args.push_back(PointerTy_5);
FunctionType* FuncTy_484 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_484_args,
 /*isVarArg=*/false);

PointerType* PointerTy_483 = PointerType::get(FuncTy_484, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_483);
std::vector<Type*>FuncTy_486_args;
FuncTy_486_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_486_args.push_back(PointerTy_5);
FunctionType* FuncTy_486 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_486_args,
 /*isVarArg=*/false);

PointerType* PointerTy_485 = PointerType::get(FuncTy_486, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_485);
std::vector<Type*>FuncTy_488_args;
FuncTy_488_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_488_args.push_back(PointerTy_5);
FunctionType* FuncTy_488 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_488_args,
 /*isVarArg=*/false);

PointerType* PointerTy_487 = PointerType::get(FuncTy_488, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_487);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_487);
std::vector<Type*>FuncTy_490_args;
FuncTy_490_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_490 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_490_args,
 /*isVarArg=*/false);

PointerType* PointerTy_489 = PointerType::get(FuncTy_490, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_489);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_489);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_487);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_487);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_489);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_489);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_487);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_489);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_487);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_489);
std::vector<Type*>FuncTy_492_args;
FuncTy_492_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_492_args.push_back(PointerTy_5);
FunctionType* FuncTy_492 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_492_args,
 /*isVarArg=*/false);

PointerType* PointerTy_491 = PointerType::get(FuncTy_492, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_491);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_465);
std::vector<Type*>FuncTy_494_args;
StructType *StructTy_class_art__mirror__Array = mod->getTypeByName("class.art::mirror::Array");
if (!StructTy_class_art__mirror__Array) {
StructTy_class_art__mirror__Array = StructType::create(mod->getContext(), "class.art::mirror::Array");
}
std::vector<Type*>StructTy_class_art__mirror__Array_fields;
StructTy_class_art__mirror__Array_fields.push_back(StructTy_class_art__mirror__Object);
StructTy_class_art__mirror__Array_fields.push_back(IntegerType::get(mod->getContext(), 32));
ArrayType* ArrayTy_496 = ArrayType::get(IntegerType::get(mod->getContext(), 32), 0);

StructTy_class_art__mirror__Array_fields.push_back(ArrayTy_496);
if (StructTy_class_art__mirror__Array->isOpaque()) {
StructTy_class_art__mirror__Array->setBody(StructTy_class_art__mirror__Array_fields, /*isPacked=*/false);
}

PointerType* PointerTy_495 = PointerType::get(StructTy_class_art__mirror__Array, 0);

FuncTy_494_args.push_back(PointerTy_495);
FuncTy_494_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_494_args.push_back(PointerTy_15);
FunctionType* FuncTy_494 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_494_args,
 /*isVarArg=*/false);

PointerType* PointerTy_493 = PointerType::get(FuncTy_494, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_493);
std::vector<Type*>FuncTy_498_args;
FuncTy_498_args.push_back(PointerTy_432);
FunctionType* FuncTy_498 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_498_args,
 /*isVarArg=*/false);

PointerType* PointerTy_497 = PointerType::get(FuncTy_498, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_497);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_497);
std::vector<Type*>FuncTy_500_args;
FuncTy_500_args.push_back(PointerTy_42);
FuncTy_500_args.push_back(PointerTy_432);
FunctionType* FuncTy_500 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_500_args,
 /*isVarArg=*/false);

PointerType* PointerTy_499 = PointerType::get(FuncTy_500, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_499);
std::vector<Type*>FuncTy_502_args;
FuncTy_502_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_502_args.push_back(PointerTy_432);
FunctionType* FuncTy_502 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_502_args,
 /*isVarArg=*/false);

PointerType* PointerTy_501 = PointerType::get(FuncTy_502, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_501);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_501);
std::vector<Type*>FuncTy_504_args;
FuncTy_504_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_504_args.push_back(PointerTy_42);
FuncTy_504_args.push_back(PointerTy_432);
FunctionType* FuncTy_504 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_504_args,
 /*isVarArg=*/false);

PointerType* PointerTy_503 = PointerType::get(FuncTy_504, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_503);
std::vector<Type*>FuncTy_506_args;
FuncTy_506_args.push_back(PointerTy_42);
FuncTy_506_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_506_args.push_back(PointerTy_432);
FunctionType* FuncTy_506 = FunctionType::get(
 /*Result=*/PointerTy_15,
 /*Params=*/FuncTy_506_args,
 /*isVarArg=*/false);

PointerType* PointerTy_505 = PointerType::get(FuncTy_506, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_505);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_505);
std::vector<Type*>FuncTy_508_args;
FuncTy_508_args.push_back(PointerTy_42);
FuncTy_508_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_508_args.push_back(PointerTy_42);
FuncTy_508_args.push_back(PointerTy_432);
FunctionType* FuncTy_508 = FunctionType::get(
 /*Result=*/PointerTy_15,
 /*Params=*/FuncTy_508_args,
 /*isVarArg=*/false);

PointerType* PointerTy_507 = PointerType::get(FuncTy_508, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_507);
std::vector<Type*>FuncTy_510_args;
StructType *StructTy_class_art__ArtMethod = mod->getTypeByName("class.art::ArtMethod");
if (!StructTy_class_art__ArtMethod) {
StructTy_class_art__ArtMethod = StructType::create(mod->getContext(), "class.art::ArtMethod");
}
std::vector<Type*>StructTy_class_art__ArtMethod_fields;
if (StructTy_class_art__ArtMethod->isOpaque()) {
StructTy_class_art__ArtMethod->setBody(StructTy_class_art__ArtMethod_fields, /*isPacked=*/false);
}

PointerType* PointerTy_511 = PointerType::get(StructTy_class_art__ArtMethod, 0);

FuncTy_510_args.push_back(PointerTy_511);
FunctionType* FuncTy_510 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_510_args,
 /*isVarArg=*/false);

PointerType* PointerTy_509 = PointerType::get(FuncTy_510, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_509);
std::vector<Type*>FuncTy_513_args;
FuncTy_513_args.push_back(PointerTy_15);
FunctionType* FuncTy_513 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_513_args,
 /*isVarArg=*/false);

PointerType* PointerTy_512 = PointerType::get(FuncTy_513, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_512);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_512);
std::vector<Type*>FuncTy_515_args;
FuncTy_515_args.push_back(Type::getDoubleTy(mod->getContext()));
FuncTy_515_args.push_back(Type::getDoubleTy(mod->getContext()));
FunctionType* FuncTy_515 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_515_args,
 /*isVarArg=*/false);

PointerType* PointerTy_514 = PointerType::get(FuncTy_515, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_514);
std::vector<Type*>FuncTy_517_args;
FuncTy_517_args.push_back(Type::getFloatTy(mod->getContext()));
FuncTy_517_args.push_back(Type::getFloatTy(mod->getContext()));
FunctionType* FuncTy_517 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_517_args,
 /*isVarArg=*/false);

PointerType* PointerTy_516 = PointerType::get(FuncTy_517, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_516);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_514);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_516);
std::vector<Type*>FuncTy_519_args;
FuncTy_519_args.push_back(Type::getDoubleTy(mod->getContext()));
FunctionType* FuncTy_519 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_519_args,
 /*isVarArg=*/false);

PointerType* PointerTy_518 = PointerType::get(FuncTy_519, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
std::vector<Type*>FuncTy_521_args;
FuncTy_521_args.push_back(Type::getDoubleTy(mod->getContext()));
FuncTy_521_args.push_back(Type::getDoubleTy(mod->getContext()));
FunctionType* FuncTy_521 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_521_args,
 /*isVarArg=*/false);

PointerType* PointerTy_520 = PointerType::get(FuncTy_521, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_520);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_520);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_520);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_520);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_518);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_520);
std::vector<Type*>FuncTy_523_args;
FuncTy_523_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_523 = FunctionType::get(
 /*Result=*/Type::getDoubleTy(mod->getContext()),
 /*Params=*/FuncTy_523_args,
 /*isVarArg=*/false);

PointerType* PointerTy_522 = PointerType::get(FuncTy_523, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_522);
std::vector<Type*>FuncTy_525_args;
FuncTy_525_args.push_back(Type::getFloatTy(mod->getContext()));
FuncTy_525_args.push_back(Type::getFloatTy(mod->getContext()));
FunctionType* FuncTy_525 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_525_args,
 /*isVarArg=*/false);

PointerType* PointerTy_524 = PointerType::get(FuncTy_525, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_524);
std::vector<Type*>FuncTy_527_args;
FuncTy_527_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_527 = FunctionType::get(
 /*Result=*/Type::getFloatTy(mod->getContext()),
 /*Params=*/FuncTy_527_args,
 /*isVarArg=*/false);

PointerType* PointerTy_526 = PointerType::get(FuncTy_527, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_526);
std::vector<Type*>FuncTy_529_args;
FuncTy_529_args.push_back(Type::getDoubleTy(mod->getContext()));
FunctionType* FuncTy_529 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_529_args,
 /*isVarArg=*/false);

PointerType* PointerTy_528 = PointerType::get(FuncTy_529, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_528);
std::vector<Type*>FuncTy_531_args;
FuncTy_531_args.push_back(Type::getFloatTy(mod->getContext()));
FunctionType* FuncTy_531 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_531_args,
 /*isVarArg=*/false);

PointerType* PointerTy_530 = PointerType::get(FuncTy_531, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_530);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_477);
std::vector<Type*>FuncTy_533_args;
FuncTy_533_args.push_back(Type::getDoubleTy(mod->getContext()));
FunctionType* FuncTy_533 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_533_args,
 /*isVarArg=*/false);

PointerType* PointerTy_532 = PointerType::get(FuncTy_533, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_532);
std::vector<Type*>FuncTy_535_args;
FuncTy_535_args.push_back(Type::getFloatTy(mod->getContext()));
FunctionType* FuncTy_535 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_535_args,
 /*isVarArg=*/false);

PointerType* PointerTy_534 = PointerType::get(FuncTy_535, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_534);
std::vector<Type*>FuncTy_537_args;
FuncTy_537_args.push_back(IntegerType::get(mod->getContext(), 64));
FuncTy_537_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_537 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_537_args,
 /*isVarArg=*/false);

PointerType* PointerTy_536 = PointerType::get(FuncTy_537, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_536);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_536);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_536);
std::vector<Type*>FuncTy_539_args;
FuncTy_539_args.push_back(IntegerType::get(mod->getContext(), 64));
FuncTy_539_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_539 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_539_args,
 /*isVarArg=*/false);

PointerType* PointerTy_538 = PointerType::get(FuncTy_539, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_538);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_538);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_538);
std::vector<Type*>FuncTy_541_args;
FuncTy_541_args.push_back(PointerTy_5);
FuncTy_541_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_541_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_541 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_541_args,
 /*isVarArg=*/false);

PointerType* PointerTy_540 = PointerType::get(FuncTy_541, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_540);
std::vector<Type*>FuncTy_543_args;
FuncTy_543_args.push_back(PointerTy_5);
FuncTy_543_args.push_back(PointerTy_5);
FunctionType* FuncTy_543 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_543_args,
 /*isVarArg=*/false);

PointerType* PointerTy_542 = PointerType::get(FuncTy_543, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_542);
std::vector<Type*>FuncTy_545_args;
FuncTy_545_args.push_back(PointerTy_5);
FuncTy_545_args.push_back(PointerTy_5);
FuncTy_545_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_545 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_545_args,
 /*isVarArg=*/false);

PointerType* PointerTy_544 = PointerType::get(FuncTy_545, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_544);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_509);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_509);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_509);
std::vector<Type*>FuncTy_547_args;
FuncTy_547_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_547_args.push_back(PointerTy_5);
FunctionType* FuncTy_547 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_547_args,
 /*isVarArg=*/false);

PointerType* PointerTy_546 = PointerType::get(FuncTy_547, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_546);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_546);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_546);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_546);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_546);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_546);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_546);
std::vector<Type*>FuncTy_549_args;
FunctionType* FuncTy_549 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_549_args,
 /*isVarArg=*/false);

PointerType* PointerTy_548 = PointerType::get(FuncTy_549, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_512);
std::vector<Type*>FuncTy_551_args;
FuncTy_551_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_551_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_551 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_551_args,
 /*isVarArg=*/false);

PointerType* PointerTy_550 = PointerType::get(FuncTy_551, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_550);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
std::vector<Type*>FuncTy_553_args;
FuncTy_553_args.push_back(PointerTy_5);
FunctionType* FuncTy_553 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_553_args,
 /*isVarArg=*/false);

PointerType* PointerTy_552 = PointerType::get(FuncTy_553, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_552);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_550);
std::vector<Type*>FuncTy_555_args;
FuncTy_555_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_555 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_555_args,
 /*isVarArg=*/false);

PointerType* PointerTy_554 = PointerType::get(FuncTy_555, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_554);
std::vector<Type*>FuncTy_557_args;
FuncTy_557_args.push_back(PointerTy_3);
FunctionType* FuncTy_557 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 64),
 /*Params=*/FuncTy_557_args,
 /*isVarArg=*/false);

PointerType* PointerTy_556 = PointerType::get(FuncTy_557, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_556);
std::vector<Type*>FuncTy_559_args;
FuncTy_559_args.push_back(PointerTy_3);
FuncTy_559_args.push_back(IntegerType::get(mod->getContext(), 64));
FunctionType* FuncTy_559 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_559_args,
 /*isVarArg=*/false);

PointerType* PointerTy_558 = PointerType::get(FuncTy_559, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_558);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
std::vector<Type*>FuncTy_561_args;
FuncTy_561_args.push_back(PointerTy_31);
FuncTy_561_args.push_back(PointerTy_432);
FunctionType* FuncTy_561 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_561_args,
 /*isVarArg=*/false);

PointerType* PointerTy_560 = PointerType::get(FuncTy_561, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_560);
std::vector<Type*>FuncTy_563_args;
FuncTy_563_args.push_back(PointerTy_15);
FunctionType* FuncTy_563 = FunctionType::get(
 /*Result=*/PointerTy_15,
 /*Params=*/FuncTy_563_args,
 /*isVarArg=*/false);

PointerType* PointerTy_562 = PointerType::get(FuncTy_563, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_562);
std::vector<Type*>FuncTy_565_args;
FuncTy_565_args.push_back(PointerTy_15);
FuncTy_565_args.push_back(PointerTy_15);
FuncTy_565_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_565 = FunctionType::get(
 /*Result=*/PointerTy_15,
 /*Params=*/FuncTy_565_args,
 /*isVarArg=*/false);

PointerType* PointerTy_564 = PointerType::get(FuncTy_565, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_564);
std::vector<Type*>FuncTy_567_args;
StructType *StructTy_class_art__GcRoot = mod->getTypeByName("class.art::GcRoot");
if (!StructTy_class_art__GcRoot) {
StructTy_class_art__GcRoot = StructType::create(mod->getContext(), "class.art::GcRoot");
}
std::vector<Type*>StructTy_class_art__GcRoot_fields;
StructTy_class_art__GcRoot_fields.push_back(StructTy_class_art__mirror__CompressedReference);
if (StructTy_class_art__GcRoot->isOpaque()) {
StructTy_class_art__GcRoot->setBody(StructTy_class_art__GcRoot_fields, /*isPacked=*/false);
}

PointerType* PointerTy_568 = PointerType::get(StructTy_class_art__GcRoot, 0);

FuncTy_567_args.push_back(PointerTy_568);
FunctionType* FuncTy_567 = FunctionType::get(
 /*Result=*/PointerTy_15,
 /*Params=*/FuncTy_567_args,
 /*isVarArg=*/false);

PointerType* PointerTy_566 = PointerType::get(FuncTy_567, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_566);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_564);
std::vector<Type*>FuncTy_570_args;
FuncTy_570_args.push_back(PointerTy_511);
FuncTy_570_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_570_args.push_back(PointerTy_415);
FunctionType* FuncTy_570 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_570_args,
 /*isVarArg=*/false);

PointerType* PointerTy_569 = PointerType::get(FuncTy_570, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_569);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_569);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_569);
std::vector<Type*>FuncTy_572_args;
FuncTy_572_args.push_back(PointerTy_511);
FuncTy_572_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_572_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_572 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_572_args,
 /*isVarArg=*/false);

PointerType* PointerTy_571 = PointerType::get(FuncTy_572, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_571);
std::vector<Type*>FuncTy_574_args;
FuncTy_574_args.push_back(PointerTy_511);
FuncTy_574_args.push_back(PointerTy_5);
FuncTy_574_args.push_back(PointerTy_5);
FuncTy_574_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_574_args.push_back(IntegerType::get(mod->getContext(), 32));
FunctionType* FuncTy_574 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_574_args,
 /*isVarArg=*/false);

PointerType* PointerTy_573 = PointerType::get(FuncTy_574, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_573);
std::vector<Type*>FuncTy_576_args;
FuncTy_576_args.push_back(PointerTy_15);
FuncTy_576_args.push_back(PointerTy_511);
FunctionType* FuncTy_576 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_576_args,
 /*isVarArg=*/false);

PointerType* PointerTy_575 = PointerType::get(FuncTy_576, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_575);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_575);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_569);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
std::vector<Type*>FuncTy_578_args;
FuncTy_578_args.push_back(PointerTy_1);
FuncTy_578_args.push_back(PointerTy_15);
FunctionType* FuncTy_578 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_578_args,
 /*isVarArg=*/false);

PointerType* PointerTy_577 = PointerType::get(FuncTy_578, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_577);
std::vector<Type*>FuncTy_580_args;
FuncTy_580_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_580_args.push_back(PointerTy_511);
FunctionType* FuncTy_580 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_580_args,
 /*isVarArg=*/false);

PointerType* PointerTy_579 = PointerType::get(FuncTy_580, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_579);
std::vector<Type*>FuncTy_582_args;
FuncTy_582_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_582_args.push_back(PointerTy_5);
FuncTy_582_args.push_back(PointerTy_511);
FunctionType* FuncTy_582 = FunctionType::get(
 /*Result=*/PointerTy_5,
 /*Params=*/FuncTy_582_args,
 /*isVarArg=*/false);

PointerType* PointerTy_581 = PointerType::get(FuncTy_582, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_581);
std::vector<Type*>FuncTy_584_args;
FuncTy_584_args.push_back(PointerTy_511);
FuncTy_584_args.push_back(PointerTy_13);
FuncTy_584_args.push_back(IntegerType::get(mod->getContext(), 32));
FuncTy_584_args.push_back(PointerTy_432);
FuncTy_584_args.push_back(PointerTy_1);
FuncTy_584_args.push_back(PointerTy_5);
FunctionType* FuncTy_584 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_584_args,
 /*isVarArg=*/false);

PointerType* PointerTy_583 = PointerType::get(FuncTy_584, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_583);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_583);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_583);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_583);
std::vector<Type*>FuncTy_586_args;
FuncTy_586_args.push_back(PointerTy_435);
FunctionType* FuncTy_586 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_586_args,
 /*isVarArg=*/false);

PointerType* PointerTy_585 = PointerType::get(FuncTy_586, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_585);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_585);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_509);
std::vector<Type*>FuncTy_588_args;
FuncTy_588_args.push_back(PointerTy_452);
FunctionType* FuncTy_588 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_588_args,
 /*isVarArg=*/false);

PointerType* PointerTy_587 = PointerType::get(FuncTy_588, 0);

StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_587);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_512);
StructTy_struct_art__QuickEntryPoints_fields.push_back(PointerTy_548);
if (StructTy_struct_art__QuickEntryPoints->isOpaque()) {
StructTy_struct_art__QuickEntryPoints->setBody(StructTy_struct_art__QuickEntryPoints_fields, /*isPacked=*/false);
}

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(StructTy_struct_art__QuickEntryPoints);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_5);
ArrayType* ArrayTy_589 = ArrayType::get(PointerTy_5, 16);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(ArrayTy_589);
StructType *StructTy_class_art__StackReference = mod->getTypeByName("class.art::StackReference");
if (!StructTy_class_art__StackReference) {
StructTy_class_art__StackReference = StructType::create(mod->getContext(), "class.art::StackReference");
}
std::vector<Type*>StructTy_class_art__StackReference_fields;
StructTy_class_art__StackReference_fields.push_back(StructTy_class_art__mirror__CompressedReference);
if (StructTy_class_art__StackReference->isOpaque()) {
StructTy_class_art__StackReference->setBody(StructTy_class_art__StackReference_fields, /*isPacked=*/false);
}

PointerType* PointerTy_590 = PointerType::get(StructTy_class_art__StackReference, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_590);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_590);
StructType *StructTy_class_art__BaseMutex = mod->getTypeByName("class.art::BaseMutex");
if (!StructTy_class_art__BaseMutex) {
StructTy_class_art__BaseMutex = StructType::create(mod->getContext(), "class.art::BaseMutex");
}
std::vector<Type*>StructTy_class_art__BaseMutex_fields;
if (StructTy_class_art__BaseMutex->isOpaque()) {
StructTy_class_art__BaseMutex->setBody(StructTy_class_art__BaseMutex_fields, /*isPacked=*/false);
}

PointerType* PointerTy_592 = PointerType::get(StructTy_class_art__BaseMutex, 0);

ArrayType* ArrayTy_591 = ArrayType::get(PointerTy_592, 75);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(ArrayTy_591);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_447);
StructType *StructTy_class_art__verifier__MethodVerifier = mod->getTypeByName("class.art::verifier::MethodVerifier");
if (!StructTy_class_art__verifier__MethodVerifier) {
StructTy_class_art__verifier__MethodVerifier = StructType::create(mod->getContext(), "class.art::verifier::MethodVerifier");
}
std::vector<Type*>StructTy_class_art__verifier__MethodVerifier_fields;
if (StructTy_class_art__verifier__MethodVerifier->isOpaque()) {
StructTy_class_art__verifier__MethodVerifier->setBody(StructTy_class_art__verifier__MethodVerifier_fields, /*isPacked=*/false);
}

PointerType* PointerTy_593 = PointerType::get(StructTy_class_art__verifier__MethodVerifier, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_593);
StructType *StructTy_class_art__gc__accounting__AtomicStack = mod->getTypeByName("class.art::gc::accounting::AtomicStack");
if (!StructTy_class_art__gc__accounting__AtomicStack) {
StructTy_class_art__gc__accounting__AtomicStack = StructType::create(mod->getContext(), "class.art::gc::accounting::AtomicStack");
}
std::vector<Type*>StructTy_class_art__gc__accounting__AtomicStack_fields;
if (StructTy_class_art__gc__accounting__AtomicStack->isOpaque()) {
StructTy_class_art__gc__accounting__AtomicStack->setBody(StructTy_class_art__gc__accounting__AtomicStack_fields, /*isPacked=*/false);
}

PointerType* PointerTy_594 = PointerType::get(StructTy_class_art__gc__accounting__AtomicStack, 0);

StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_594);
StructTy_struct_art__Thread__tls_ptr_sized_values_fields.push_back(PointerTy_434);
if (StructTy_struct_art__Thread__tls_ptr_sized_values->isOpaque()) {
StructTy_struct_art__Thread__tls_ptr_sized_values->setBody(StructTy_struct_art__Thread__tls_ptr_sized_values_fields, /*isPacked=*/false);
}

StructTy_class_art__Thread_fields.push_back(StructTy_struct_art__Thread__tls_ptr_sized_values);
StructType *StructTy_class_art__InterpreterCache = mod->getTypeByName("class.art::InterpreterCache");
if (!StructTy_class_art__InterpreterCache) {
StructTy_class_art__InterpreterCache = StructType::create(mod->getContext(), "class.art::InterpreterCache");
}
std::vector<Type*>StructTy_class_art__InterpreterCache_fields;
StructType *StructTy_struct_std____1__array = mod->getTypeByName("struct.std::__1::array");
if (!StructTy_struct_std____1__array) {
StructTy_struct_std____1__array = StructType::create(mod->getContext(), "struct.std::__1::array");
}
std::vector<Type*>StructTy_struct_std____1__array_fields;
StructType *StructTy_struct_std____1__pair = mod->getTypeByName("struct.std::__1::pair");
if (!StructTy_struct_std____1__pair) {
StructTy_struct_std____1__pair = StructType::create(mod->getContext(), "struct.std::__1::pair");
}
std::vector<Type*>StructTy_struct_std____1__pair_fields;
StructTy_struct_std____1__pair_fields.push_back(PointerTy_5);
StructTy_struct_std____1__pair_fields.push_back(IntegerType::get(mod->getContext(), 64));
if (StructTy_struct_std____1__pair->isOpaque()) {
StructTy_struct_std____1__pair->setBody(StructTy_struct_std____1__pair_fields, /*isPacked=*/false);
}

ArrayType* ArrayTy_595 = ArrayType::get(StructTy_struct_std____1__pair, 256);

StructTy_struct_std____1__array_fields.push_back(ArrayTy_595);
if (StructTy_struct_std____1__array->isOpaque()) {
StructTy_struct_std____1__array->setBody(StructTy_struct_std____1__array_fields, /*isPacked=*/false);
}

StructTy_class_art__InterpreterCache_fields.push_back(StructTy_struct_std____1__array);
if (StructTy_class_art__InterpreterCache->isOpaque()) {
StructTy_class_art__InterpreterCache->setBody(StructTy_class_art__InterpreterCache_fields, /*isPacked=*/false);
}

StructTy_class_art__Thread_fields.push_back(StructTy_class_art__InterpreterCache);
StructType *StructTy_class_art__Mutex = mod->getTypeByName("class.art::Mutex");
if (!StructTy_class_art__Mutex) {
StructTy_class_art__Mutex = StructType::create(mod->getContext(), "class.art::Mutex");
}
std::vector<Type*>StructTy_class_art__Mutex_fields;
if (StructTy_class_art__Mutex->isOpaque()) {
StructTy_class_art__Mutex->setBody(StructTy_class_art__Mutex_fields, /*isPacked=*/false);
}

PointerType* PointerTy_596 = PointerType::get(StructTy_class_art__Mutex, 0);

StructTy_class_art__Thread_fields.push_back(PointerTy_596);
StructType *StructTy_class_art__ConditionVariable = mod->getTypeByName("class.art::ConditionVariable");
if (!StructTy_class_art__ConditionVariable) {
StructTy_class_art__ConditionVariable = StructType::create(mod->getContext(), "class.art::ConditionVariable");
}
std::vector<Type*>StructTy_class_art__ConditionVariable_fields;
if (StructTy_class_art__ConditionVariable->isOpaque()) {
StructTy_class_art__ConditionVariable->setBody(StructTy_class_art__ConditionVariable_fields, /*isPacked=*/false);
}

PointerType* PointerTy_597 = PointerType::get(StructTy_class_art__ConditionVariable, 0);

StructTy_class_art__Thread_fields.push_back(PointerTy_597);
StructType *StructTy_class_art__Monitor = mod->getTypeByName("class.art::Monitor");
if (!StructTy_class_art__Monitor) {
StructTy_class_art__Monitor = StructType::create(mod->getContext(), "class.art::Monitor");
}
std::vector<Type*>StructTy_class_art__Monitor_fields;
if (StructTy_class_art__Monitor->isOpaque()) {
StructTy_class_art__Monitor->setBody(StructTy_class_art__Monitor_fields, /*isPacked=*/false);
}

PointerType* PointerTy_598 = PointerType::get(StructTy_class_art__Monitor, 0);

StructTy_class_art__Thread_fields.push_back(PointerTy_598);
StructTy_class_art__Thread_fields.push_back(IntegerType::get(mod->getContext(), 8));
ArrayType* ArrayTy_599 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 7);

StructTy_class_art__Thread_fields.push_back(ArrayTy_599);
StructTy_class_art__Thread_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructType *StructTy_class_std____1__list = mod->getTypeByName("class.std::__1::list");
if (!StructTy_class_std____1__list) {
StructTy_class_std____1__list = StructType::create(mod->getContext(), "class.std::__1::list");
}
std::vector<Type*>StructTy_class_std____1__list_fields;
StructType *StructTy_class_std____1____list_imp = mod->getTypeByName("class.std::__1::__list_imp");
if (!StructTy_class_std____1____list_imp) {
StructTy_class_std____1____list_imp = StructType::create(mod->getContext(), "class.std::__1::__list_imp");
}
std::vector<Type*>StructTy_class_std____1____list_imp_fields;
StructType *StructTy_struct_std____1____list_node_base = mod->getTypeByName("struct.std::__1::__list_node_base");
if (!StructTy_struct_std____1____list_node_base) {
StructTy_struct_std____1____list_node_base = StructType::create(mod->getContext(), "struct.std::__1::__list_node_base");
}
std::vector<Type*>StructTy_struct_std____1____list_node_base_fields;
PointerType* PointerTy_600 = PointerType::get(StructTy_struct_std____1____list_node_base, 0);

StructTy_struct_std____1____list_node_base_fields.push_back(PointerTy_600);
StructTy_struct_std____1____list_node_base_fields.push_back(PointerTy_600);
if (StructTy_struct_std____1____list_node_base->isOpaque()) {
StructTy_struct_std____1____list_node_base->setBody(StructTy_struct_std____1____list_node_base_fields, /*isPacked=*/false);
}

StructTy_class_std____1____list_imp_fields.push_back(StructTy_struct_std____1____list_node_base);
StructType *StructTy_class_std____1____compressed_pair_13 = mod->getTypeByName("class.std::__1::__compressed_pair.13");
if (!StructTy_class_std____1____compressed_pair_13) {
StructTy_class_std____1____compressed_pair_13 = StructType::create(mod->getContext(), "class.std::__1::__compressed_pair.13");
}
std::vector<Type*>StructTy_class_std____1____compressed_pair_13_fields;
StructType *StructTy_struct_std____1____compressed_pair_elem_14 = mod->getTypeByName("struct.std::__1::__compressed_pair_elem.14");
if (!StructTy_struct_std____1____compressed_pair_elem_14) {
StructTy_struct_std____1____compressed_pair_elem_14 = StructType::create(mod->getContext(), "struct.std::__1::__compressed_pair_elem.14");
}
std::vector<Type*>StructTy_struct_std____1____compressed_pair_elem_14_fields;
StructTy_struct_std____1____compressed_pair_elem_14_fields.push_back(IntegerType::get(mod->getContext(), 64));
if (StructTy_struct_std____1____compressed_pair_elem_14->isOpaque()) {
StructTy_struct_std____1____compressed_pair_elem_14->setBody(StructTy_struct_std____1____compressed_pair_elem_14_fields, /*isPacked=*/false);
}

StructTy_class_std____1____compressed_pair_13_fields.push_back(StructTy_struct_std____1____compressed_pair_elem_14);
if (StructTy_class_std____1____compressed_pair_13->isOpaque()) {
StructTy_class_std____1____compressed_pair_13->setBody(StructTy_class_std____1____compressed_pair_13_fields, /*isPacked=*/false);
}

StructTy_class_std____1____list_imp_fields.push_back(StructTy_class_std____1____compressed_pair_13);
if (StructTy_class_std____1____list_imp->isOpaque()) {
StructTy_class_std____1____list_imp->setBody(StructTy_class_std____1____list_imp_fields, /*isPacked=*/false);
}

StructTy_class_std____1__list_fields.push_back(StructTy_class_std____1____list_imp);
if (StructTy_class_std____1__list->isOpaque()) {
StructTy_class_std____1__list->setBody(StructTy_class_std____1__list_fields, /*isPacked=*/false);
}

StructTy_class_art__Thread_fields.push_back(StructTy_class_std____1__list);
StructType *StructTy_class_art__SafeMap = mod->getTypeByName("class.art::SafeMap");
if (!StructTy_class_art__SafeMap) {
StructTy_class_art__SafeMap = StructType::create(mod->getContext(), "class.art::SafeMap");
}
std::vector<Type*>StructTy_class_art__SafeMap_fields;
StructType *StructTy_class_std____1__map = mod->getTypeByName("class.std::__1::map");
if (!StructTy_class_std____1__map) {
StructTy_class_std____1__map = StructType::create(mod->getContext(), "class.std::__1::map");
}
std::vector<Type*>StructTy_class_std____1__map_fields;
StructType *StructTy_class_std____1____tree = mod->getTypeByName("class.std::__1::__tree");
if (!StructTy_class_std____1____tree) {
StructTy_class_std____1____tree = StructType::create(mod->getContext(), "class.std::__1::__tree");
}
std::vector<Type*>StructTy_class_std____1____tree_fields;
StructType *StructTy_class_std____1____tree_end_node = mod->getTypeByName("class.std::__1::__tree_end_node");
if (!StructTy_class_std____1____tree_end_node) {
StructTy_class_std____1____tree_end_node = StructType::create(mod->getContext(), "class.std::__1::__tree_end_node");
}
std::vector<Type*>StructTy_class_std____1____tree_end_node_fields;
StructType *StructTy_class_std____1____tree_node_base = mod->getTypeByName("class.std::__1::__tree_node_base");
if (!StructTy_class_std____1____tree_node_base) {
StructTy_class_std____1____tree_node_base = StructType::create(mod->getContext(), "class.std::__1::__tree_node_base");
}
std::vector<Type*>StructTy_class_std____1____tree_node_base_fields;
if (StructTy_class_std____1____tree_node_base->isOpaque()) {
StructTy_class_std____1____tree_node_base->setBody(StructTy_class_std____1____tree_node_base_fields, /*isPacked=*/false);
}

PointerType* PointerTy_602 = PointerType::get(StructTy_class_std____1____tree_node_base, 0);

StructTy_class_std____1____tree_end_node_fields.push_back(PointerTy_602);
if (StructTy_class_std____1____tree_end_node->isOpaque()) {
StructTy_class_std____1____tree_end_node->setBody(StructTy_class_std____1____tree_end_node_fields, /*isPacked=*/false);
}

PointerType* PointerTy_601 = PointerType::get(StructTy_class_std____1____tree_end_node, 0);

StructTy_class_std____1____tree_fields.push_back(PointerTy_601);
StructType *StructTy_class_std____1____compressed_pair_18 = mod->getTypeByName("class.std::__1::__compressed_pair.18");
if (!StructTy_class_std____1____compressed_pair_18) {
StructTy_class_std____1____compressed_pair_18 = StructType::create(mod->getContext(), "class.std::__1::__compressed_pair.18");
}
std::vector<Type*>StructTy_class_std____1____compressed_pair_18_fields;
StructType *StructTy_struct_std____1____compressed_pair_elem_19 = mod->getTypeByName("struct.std::__1::__compressed_pair_elem.19");
if (!StructTy_struct_std____1____compressed_pair_elem_19) {
StructTy_struct_std____1____compressed_pair_elem_19 = StructType::create(mod->getContext(), "struct.std::__1::__compressed_pair_elem.19");
}
std::vector<Type*>StructTy_struct_std____1____compressed_pair_elem_19_fields;
StructTy_struct_std____1____compressed_pair_elem_19_fields.push_back(StructTy_class_std____1____tree_end_node);
if (StructTy_struct_std____1____compressed_pair_elem_19->isOpaque()) {
StructTy_struct_std____1____compressed_pair_elem_19->setBody(StructTy_struct_std____1____compressed_pair_elem_19_fields, /*isPacked=*/false);
}

StructTy_class_std____1____compressed_pair_18_fields.push_back(StructTy_struct_std____1____compressed_pair_elem_19);
if (StructTy_class_std____1____compressed_pair_18->isOpaque()) {
StructTy_class_std____1____compressed_pair_18->setBody(StructTy_class_std____1____compressed_pair_18_fields, /*isPacked=*/false);
}

StructTy_class_std____1____tree_fields.push_back(StructTy_class_std____1____compressed_pair_18);
StructType *StructTy_class_std____1____compressed_pair_23 = mod->getTypeByName("class.std::__1::__compressed_pair.23");
if (!StructTy_class_std____1____compressed_pair_23) {
StructTy_class_std____1____compressed_pair_23 = StructType::create(mod->getContext(), "class.std::__1::__compressed_pair.23");
}
std::vector<Type*>StructTy_class_std____1____compressed_pair_23_fields;
StructTy_class_std____1____compressed_pair_23_fields.push_back(StructTy_struct_std____1____compressed_pair_elem_14);
if (StructTy_class_std____1____compressed_pair_23->isOpaque()) {
StructTy_class_std____1____compressed_pair_23->setBody(StructTy_class_std____1____compressed_pair_23_fields, /*isPacked=*/false);
}

StructTy_class_std____1____tree_fields.push_back(StructTy_class_std____1____compressed_pair_23);
if (StructTy_class_std____1____tree->isOpaque()) {
StructTy_class_std____1____tree->setBody(StructTy_class_std____1____tree_fields, /*isPacked=*/false);
}

StructTy_class_std____1__map_fields.push_back(StructTy_class_std____1____tree);
if (StructTy_class_std____1__map->isOpaque()) {
StructTy_class_std____1__map->setBody(StructTy_class_std____1__map_fields, /*isPacked=*/false);
}

StructTy_class_art__SafeMap_fields.push_back(StructTy_class_std____1__map);
if (StructTy_class_art__SafeMap->isOpaque()) {
StructTy_class_art__SafeMap->setBody(StructTy_class_art__SafeMap_fields, /*isPacked=*/false);
}

StructTy_class_art__Thread_fields.push_back(StructTy_class_art__SafeMap);
StructTy_class_art__Thread_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_class_art__Thread_fields.push_back(ArrayTy_599);
if (StructTy_class_art__Thread->isOpaque()) {
StructTy_class_art__Thread->setBody(StructTy_class_art__Thread_fields, /*isPacked=*/true);
}


StructTy_class_art__JNIEnvExt_fields.push_back(PointerTy_432);
StructType *StructTy_class_art__JavaVMExt = mod->getTypeByName("class.art::JavaVMExt");
if (!StructTy_class_art__JavaVMExt) {
StructTy_class_art__JavaVMExt = StructType::create(mod->getContext(), "class.art::JavaVMExt");
}
std::vector<Type*>StructTy_class_art__JavaVMExt_fields;
if (StructTy_class_art__JavaVMExt->isOpaque()) {
StructTy_class_art__JavaVMExt->setBody(StructTy_class_art__JavaVMExt_fields, /*isPacked=*/false);
}

PointerType* PointerTy_603 = PointerType::get(StructTy_class_art__JavaVMExt, 0);

StructTy_class_art__JNIEnvExt_fields.push_back(PointerTy_603);
StructType *StructTy_struct_art__IRTSegmentState = mod->getTypeByName("struct.art::IRTSegmentState");
if (!StructTy_struct_art__IRTSegmentState) {
StructTy_struct_art__IRTSegmentState = StructType::create(mod->getContext(), "struct.art::IRTSegmentState");
}
std::vector<Type*>StructTy_struct_art__IRTSegmentState_fields;
StructTy_struct_art__IRTSegmentState_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_struct_art__IRTSegmentState->isOpaque()) {
StructTy_struct_art__IRTSegmentState->setBody(StructTy_struct_art__IRTSegmentState_fields, /*isPacked=*/false);
}

StructTy_class_art__JNIEnvExt_fields.push_back(StructTy_struct_art__IRTSegmentState);
StructTy_class_art__JNIEnvExt_fields.push_back(ArrayTy_433);
StructType *StructTy_class_art__IndirectReferenceTable = mod->getTypeByName("class.art::IndirectReferenceTable");
if (!StructTy_class_art__IndirectReferenceTable) {
StructTy_class_art__IndirectReferenceTable = StructType::create(mod->getContext(), "class.art::IndirectReferenceTable");
}
std::vector<Type*>StructTy_class_art__IndirectReferenceTable_fields;
StructTy_class_art__IndirectReferenceTable_fields.push_back(StructTy_struct_art__IRTSegmentState);
StructType *StructTy_class_art__MemMap = mod->getTypeByName("class.art::MemMap");
if (!StructTy_class_art__MemMap) {
StructTy_class_art__MemMap = StructType::create(mod->getContext(), "class.art::MemMap");
}
std::vector<Type*>StructTy_class_art__MemMap_fields;
StructTy_class_art__MemMap_fields.push_back(StructTy_class_std____1__basic_string);
StructTy_class_art__MemMap_fields.push_back(PointerTy_5);
StructTy_class_art__MemMap_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_class_art__MemMap_fields.push_back(PointerTy_5);
StructTy_class_art__MemMap_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_class_art__MemMap_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__MemMap_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_class_art__MemMap_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_class_art__MemMap_fields.push_back(IntegerType::get(mod->getContext(), 64));
if (StructTy_class_art__MemMap->isOpaque()) {
StructTy_class_art__MemMap->setBody(StructTy_class_art__MemMap_fields, /*isPacked=*/false);
}

StructTy_class_art__IndirectReferenceTable_fields.push_back(StructTy_class_art__MemMap);
StructType *StructTy_class_art__IrtEntry = mod->getTypeByName("class.art::IrtEntry");
if (!StructTy_class_art__IrtEntry) {
StructTy_class_art__IrtEntry = StructType::create(mod->getContext(), "class.art::IrtEntry");
}
std::vector<Type*>StructTy_class_art__IrtEntry_fields;
StructTy_class_art__IrtEntry_fields.push_back(IntegerType::get(mod->getContext(), 32));
ArrayType* ArrayTy_605 = ArrayType::get(StructTy_class_art__GcRoot, 7);

StructTy_class_art__IrtEntry_fields.push_back(ArrayTy_605);
if (StructTy_class_art__IrtEntry->isOpaque()) {
StructTy_class_art__IrtEntry->setBody(StructTy_class_art__IrtEntry_fields, /*isPacked=*/false);
}

PointerType* PointerTy_604 = PointerType::get(StructTy_class_art__IrtEntry, 0);

StructTy_class_art__IndirectReferenceTable_fields.push_back(PointerTy_604);
StructTy_class_art__IndirectReferenceTable_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__IndirectReferenceTable_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_class_art__IndirectReferenceTable_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_class_art__IndirectReferenceTable_fields.push_back(StructTy_struct_art__IRTSegmentState);
StructTy_class_art__IndirectReferenceTable_fields.push_back(IntegerType::get(mod->getContext(), 32));
if (StructTy_class_art__IndirectReferenceTable->isOpaque()) {
StructTy_class_art__IndirectReferenceTable->setBody(StructTy_class_art__IndirectReferenceTable_fields, /*isPacked=*/false);
}

StructTy_class_art__JNIEnvExt_fields.push_back(StructTy_class_art__IndirectReferenceTable);
StructType *StructTy_class_std____1__vector_25 = mod->getTypeByName("class.std::__1::vector.25");
if (!StructTy_class_std____1__vector_25) {
StructTy_class_std____1__vector_25 = StructType::create(mod->getContext(), "class.std::__1::vector.25");
}
std::vector<Type*>StructTy_class_std____1__vector_25_fields;
StructType *StructTy_class_std____1____vector_base = mod->getTypeByName("class.std::__1::__vector_base");
if (!StructTy_class_std____1____vector_base) {
StructTy_class_std____1____vector_base = StructType::create(mod->getContext(), "class.std::__1::__vector_base");
}
std::vector<Type*>StructTy_class_std____1____vector_base_fields;
PointerType* PointerTy_606 = PointerType::get(StructTy_struct_art__IRTSegmentState, 0);

StructTy_class_std____1____vector_base_fields.push_back(PointerTy_606);
StructTy_class_std____1____vector_base_fields.push_back(PointerTy_606);
StructType *StructTy_class_std____1____compressed_pair_26 = mod->getTypeByName("class.std::__1::__compressed_pair.26");
if (!StructTy_class_std____1____compressed_pair_26) {
StructTy_class_std____1____compressed_pair_26 = StructType::create(mod->getContext(), "class.std::__1::__compressed_pair.26");
}
std::vector<Type*>StructTy_class_std____1____compressed_pair_26_fields;
StructType *StructTy_struct_std____1____compressed_pair_elem_27 = mod->getTypeByName("struct.std::__1::__compressed_pair_elem.27");
if (!StructTy_struct_std____1____compressed_pair_elem_27) {
StructTy_struct_std____1____compressed_pair_elem_27 = StructType::create(mod->getContext(), "struct.std::__1::__compressed_pair_elem.27");
}
std::vector<Type*>StructTy_struct_std____1____compressed_pair_elem_27_fields;
StructTy_struct_std____1____compressed_pair_elem_27_fields.push_back(PointerTy_606);
if (StructTy_struct_std____1____compressed_pair_elem_27->isOpaque()) {
StructTy_struct_std____1____compressed_pair_elem_27->setBody(StructTy_struct_std____1____compressed_pair_elem_27_fields, /*isPacked=*/false);
}

StructTy_class_std____1____compressed_pair_26_fields.push_back(StructTy_struct_std____1____compressed_pair_elem_27);
if (StructTy_class_std____1____compressed_pair_26->isOpaque()) {
StructTy_class_std____1____compressed_pair_26->setBody(StructTy_class_std____1____compressed_pair_26_fields, /*isPacked=*/false);
}

StructTy_class_std____1____vector_base_fields.push_back(StructTy_class_std____1____compressed_pair_26);
if (StructTy_class_std____1____vector_base->isOpaque()) {
StructTy_class_std____1____vector_base->setBody(StructTy_class_std____1____vector_base_fields, /*isPacked=*/false);
}

StructTy_class_std____1__vector_25_fields.push_back(StructTy_class_std____1____vector_base);
if (StructTy_class_std____1__vector_25->isOpaque()) {
StructTy_class_std____1__vector_25->setBody(StructTy_class_std____1__vector_25_fields, /*isPacked=*/false);
}

StructTy_class_art__JNIEnvExt_fields.push_back(StructTy_class_std____1__vector_25);
StructType *StructTy_class_art__ReferenceTable = mod->getTypeByName("class.art::ReferenceTable");
if (!StructTy_class_art__ReferenceTable) {
StructTy_class_art__ReferenceTable = StructType::create(mod->getContext(), "class.art::ReferenceTable");
}
std::vector<Type*>StructTy_class_art__ReferenceTable_fields;
StructTy_class_art__ReferenceTable_fields.push_back(StructTy_class_std____1__basic_string);
StructType *StructTy_class_std____1__vector_31 = mod->getTypeByName("class.std::__1::vector.31");
if (!StructTy_class_std____1__vector_31) {
StructTy_class_std____1__vector_31 = StructType::create(mod->getContext(), "class.std::__1::vector.31");
}
std::vector<Type*>StructTy_class_std____1__vector_31_fields;
StructType *StructTy_class_std____1____vector_base_32 = mod->getTypeByName("class.std::__1::__vector_base.32");
if (!StructTy_class_std____1____vector_base_32) {
StructTy_class_std____1____vector_base_32 = StructType::create(mod->getContext(), "class.std::__1::__vector_base.32");
}
std::vector<Type*>StructTy_class_std____1____vector_base_32_fields;
StructTy_class_std____1____vector_base_32_fields.push_back(PointerTy_568);
StructTy_class_std____1____vector_base_32_fields.push_back(PointerTy_568);
StructType *StructTy_class_std____1____compressed_pair_33 = mod->getTypeByName("class.std::__1::__compressed_pair.33");
if (!StructTy_class_std____1____compressed_pair_33) {
StructTy_class_std____1____compressed_pair_33 = StructType::create(mod->getContext(), "class.std::__1::__compressed_pair.33");
}
std::vector<Type*>StructTy_class_std____1____compressed_pair_33_fields;
StructType *StructTy_struct_std____1____compressed_pair_elem_34 = mod->getTypeByName("struct.std::__1::__compressed_pair_elem.34");
if (!StructTy_struct_std____1____compressed_pair_elem_34) {
StructTy_struct_std____1____compressed_pair_elem_34 = StructType::create(mod->getContext(), "struct.std::__1::__compressed_pair_elem.34");
}
std::vector<Type*>StructTy_struct_std____1____compressed_pair_elem_34_fields;
StructTy_struct_std____1____compressed_pair_elem_34_fields.push_back(PointerTy_568);
if (StructTy_struct_std____1____compressed_pair_elem_34->isOpaque()) {
StructTy_struct_std____1____compressed_pair_elem_34->setBody(StructTy_struct_std____1____compressed_pair_elem_34_fields, /*isPacked=*/false);
}

StructTy_class_std____1____compressed_pair_33_fields.push_back(StructTy_struct_std____1____compressed_pair_elem_34);
if (StructTy_class_std____1____compressed_pair_33->isOpaque()) {
StructTy_class_std____1____compressed_pair_33->setBody(StructTy_class_std____1____compressed_pair_33_fields, /*isPacked=*/false);
}

StructTy_class_std____1____vector_base_32_fields.push_back(StructTy_class_std____1____compressed_pair_33);
if (StructTy_class_std____1____vector_base_32->isOpaque()) {
StructTy_class_std____1____vector_base_32->setBody(StructTy_class_std____1____vector_base_32_fields, /*isPacked=*/false);
}

StructTy_class_std____1__vector_31_fields.push_back(StructTy_class_std____1____vector_base_32);
if (StructTy_class_std____1__vector_31->isOpaque()) {
StructTy_class_std____1__vector_31->setBody(StructTy_class_std____1__vector_31_fields, /*isPacked=*/false);
}

StructTy_class_art__ReferenceTable_fields.push_back(StructTy_class_std____1__vector_31);
StructTy_class_art__ReferenceTable_fields.push_back(IntegerType::get(mod->getContext(), 64));
if (StructTy_class_art__ReferenceTable->isOpaque()) {
StructTy_class_art__ReferenceTable->setBody(StructTy_class_art__ReferenceTable_fields, /*isPacked=*/false);
}

StructTy_class_art__JNIEnvExt_fields.push_back(StructTy_class_art__ReferenceTable);
StructTy_class_art__JNIEnvExt_fields.push_back(PointerTy_45);
StructType *StructTy_class_std____1__vector_38 = mod->getTypeByName("class.std::__1::vector.38");
if (!StructTy_class_std____1__vector_38) {
StructTy_class_std____1__vector_38 = StructType::create(mod->getContext(), "class.std::__1::vector.38");
}
std::vector<Type*>StructTy_class_std____1__vector_38_fields;
StructType *StructTy_class_std____1____vector_base_39 = mod->getTypeByName("class.std::__1::__vector_base.39");
if (!StructTy_class_std____1____vector_base_39) {
StructTy_class_std____1____vector_base_39 = StructType::create(mod->getContext(), "class.std::__1::__vector_base.39");
}
std::vector<Type*>StructTy_class_std____1____vector_base_39_fields;
StructType *StructTy_struct_std____1__pair_40 = mod->getTypeByName("struct.std::__1::pair.40");
if (!StructTy_struct_std____1__pair_40) {
StructTy_struct_std____1__pair_40 = StructType::create(mod->getContext(), "struct.std::__1::pair.40");
}
std::vector<Type*>StructTy_struct_std____1__pair_40_fields;
if (StructTy_struct_std____1__pair_40->isOpaque()) {
StructTy_struct_std____1__pair_40->setBody(StructTy_struct_std____1__pair_40_fields, /*isPacked=*/false);
}

PointerType* PointerTy_607 = PointerType::get(StructTy_struct_std____1__pair_40, 0);

StructTy_class_std____1____vector_base_39_fields.push_back(PointerTy_607);
StructTy_class_std____1____vector_base_39_fields.push_back(PointerTy_607);
StructType *StructTy_class_std____1____compressed_pair_41 = mod->getTypeByName("class.std::__1::__compressed_pair.41");
if (!StructTy_class_std____1____compressed_pair_41) {
StructTy_class_std____1____compressed_pair_41 = StructType::create(mod->getContext(), "class.std::__1::__compressed_pair.41");
}
std::vector<Type*>StructTy_class_std____1____compressed_pair_41_fields;
StructType *StructTy_struct_std____1____compressed_pair_elem_42 = mod->getTypeByName("struct.std::__1::__compressed_pair_elem.42");
if (!StructTy_struct_std____1____compressed_pair_elem_42) {
StructTy_struct_std____1____compressed_pair_elem_42 = StructType::create(mod->getContext(), "struct.std::__1::__compressed_pair_elem.42");
}
std::vector<Type*>StructTy_struct_std____1____compressed_pair_elem_42_fields;
StructTy_struct_std____1____compressed_pair_elem_42_fields.push_back(PointerTy_607);
if (StructTy_struct_std____1____compressed_pair_elem_42->isOpaque()) {
StructTy_struct_std____1____compressed_pair_elem_42->setBody(StructTy_struct_std____1____compressed_pair_elem_42_fields, /*isPacked=*/false);
}

StructTy_class_std____1____compressed_pair_41_fields.push_back(StructTy_struct_std____1____compressed_pair_elem_42);
if (StructTy_class_std____1____compressed_pair_41->isOpaque()) {
StructTy_class_std____1____compressed_pair_41->setBody(StructTy_class_std____1____compressed_pair_41_fields, /*isPacked=*/false);
}

StructTy_class_std____1____vector_base_39_fields.push_back(StructTy_class_std____1____compressed_pair_41);
if (StructTy_class_std____1____vector_base_39->isOpaque()) {
StructTy_class_std____1____vector_base_39->setBody(StructTy_class_std____1____vector_base_39_fields, /*isPacked=*/false);
}

StructTy_class_std____1__vector_38_fields.push_back(StructTy_class_std____1____vector_base_39);
if (StructTy_class_std____1__vector_38->isOpaque()) {
StructTy_class_std____1__vector_38->setBody(StructTy_class_std____1__vector_38_fields, /*isPacked=*/false);
}

StructTy_class_art__JNIEnvExt_fields.push_back(StructTy_class_std____1__vector_38);
StructTy_class_art__JNIEnvExt_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructTy_class_art__JNIEnvExt_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_class_art__JNIEnvExt_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_class_art__JNIEnvExt_fields.push_back(IntegerType::get(mod->getContext(), 8));
ArrayType* ArrayTy_608 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 2);

StructTy_class_art__JNIEnvExt_fields.push_back(ArrayTy_608);
if (StructTy_class_art__JNIEnvExt->isOpaque()) {
StructTy_class_art__JNIEnvExt->setBody(StructTy_class_art__JNIEnvExt_fields, /*isPacked=*/true);
}


FuncTy_43_args.push_back(PointerTy_44);
FuncTy_43_args.push_back(PointerTy_5);
FunctionType* FuncTy_43 = FunctionType::get(
 /*Result=*/PointerTy_42,
 /*Params=*/FuncTy_43_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_609_args;
FuncTy_609_args.push_back(PointerTy_44);
FuncTy_609_args.push_back(PointerTy_42);
FunctionType* FuncTy_609 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_609_args,
 /*isVarArg=*/false);

std::vector<Type*>FuncTy_610_args;
FuncTy_610_args.push_back(PointerTy_44);
FunctionType* FuncTy_610 = FunctionType::get(
 /*Result=*/PointerTy_432,
 /*Params=*/FuncTy_610_args,
 /*isVarArg=*/false);

PointerType* PointerTy_611 = PointerType::get(PointerTy_44, 0);

PointerType* PointerTy_612 = PointerType::get(PointerTy_432, 0);

PointerType* PointerTy_613 = PointerType::get(PointerTy_31, 0);

std::vector<Type*>FuncTy_615_args;
FuncTy_615_args.push_back(PointerTy_26);
FuncTy_615_args.push_back(PointerTy_15);
FunctionType* FuncTy_615 = FunctionType::get(
 /*Result=*/Type::getVoidTy(mod->getContext()),
 /*Params=*/FuncTy_615_args,
 /*isVarArg=*/false);

PointerType* PointerTy_614 = PointerType::get(FuncTy_615, 0);

std::vector<Type*>FuncTy_617_args;
FuncTy_617_args.push_back(PointerTy_15);
FunctionType* FuncTy_617 = FunctionType::get(
 /*Result=*/IntegerType::get(mod->getContext(), 32),
 /*Params=*/FuncTy_617_args,
 /*isVarArg=*/false);

PointerType* PointerTy_616 = PointerType::get(FuncTy_617, 0);


// Function Declarations

Function* func__ZN3art6JValueC2Ev = mod->getFunction("_ZN3art6JValueC2Ev");
if (!func__ZN3art6JValueC2Ev) {
func__ZN3art6JValueC2Ev = Function::Create(
 /*Type=*/FuncTy_0,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValueC2Ev", mod); 
func__ZN3art6JValueC2Ev->setCallingConv(CallingConv::C);
func__ZN3art6JValueC2Ev->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValueC2Ev_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValueC2Ev_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValueC2Ev->setAttributes(func__ZN3art6JValueC2Ev_PAL);

Function* func__ZNK3art6JValue4GetBEv = mod->getFunction("_ZNK3art6JValue4GetBEv");
if (!func__ZNK3art6JValue4GetBEv) {
func__ZNK3art6JValue4GetBEv = Function::Create(
 /*Type=*/FuncTy_4,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6JValue4GetBEv", mod); 
func__ZNK3art6JValue4GetBEv->setCallingConv(CallingConv::C);
func__ZNK3art6JValue4GetBEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6JValue4GetBEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6JValue4GetBEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6JValue4GetBEv->setAttributes(func__ZNK3art6JValue4GetBEv_PAL);

Function* func__ZNK3art6JValue4GetCEv = mod->getFunction("_ZNK3art6JValue4GetCEv");
if (!func__ZNK3art6JValue4GetCEv) {
func__ZNK3art6JValue4GetCEv = Function::Create(
 /*Type=*/FuncTy_6,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6JValue4GetCEv", mod); 
func__ZNK3art6JValue4GetCEv->setCallingConv(CallingConv::C);
func__ZNK3art6JValue4GetCEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6JValue4GetCEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6JValue4GetCEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6JValue4GetCEv->setAttributes(func__ZNK3art6JValue4GetCEv_PAL);

Function* func__ZNK3art6JValue4GetDEv = mod->getFunction("_ZNK3art6JValue4GetDEv");
if (!func__ZNK3art6JValue4GetDEv) {
func__ZNK3art6JValue4GetDEv = Function::Create(
 /*Type=*/FuncTy_8,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6JValue4GetDEv", mod); 
func__ZNK3art6JValue4GetDEv->setCallingConv(CallingConv::C);
func__ZNK3art6JValue4GetDEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6JValue4GetDEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6JValue4GetDEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6JValue4GetDEv->setAttributes(func__ZNK3art6JValue4GetDEv_PAL);

Function* func__ZNK3art6JValue4GetFEv = mod->getFunction("_ZNK3art6JValue4GetFEv");
if (!func__ZNK3art6JValue4GetFEv) {
func__ZNK3art6JValue4GetFEv = Function::Create(
 /*Type=*/FuncTy_10,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6JValue4GetFEv", mod); 
func__ZNK3art6JValue4GetFEv->setCallingConv(CallingConv::C);
func__ZNK3art6JValue4GetFEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6JValue4GetFEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6JValue4GetFEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6JValue4GetFEv->setAttributes(func__ZNK3art6JValue4GetFEv_PAL);

Function* func__ZNK3art6JValue4GetIEv = mod->getFunction("_ZNK3art6JValue4GetIEv");
if (!func__ZNK3art6JValue4GetIEv) {
func__ZNK3art6JValue4GetIEv = Function::Create(
 /*Type=*/FuncTy_12,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6JValue4GetIEv", mod); 
func__ZNK3art6JValue4GetIEv->setCallingConv(CallingConv::C);
func__ZNK3art6JValue4GetIEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6JValue4GetIEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6JValue4GetIEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6JValue4GetIEv->setAttributes(func__ZNK3art6JValue4GetIEv_PAL);

Function* func__ZNK3art6JValue4GetJEv = mod->getFunction("_ZNK3art6JValue4GetJEv");
if (!func__ZNK3art6JValue4GetJEv) {
func__ZNK3art6JValue4GetJEv = Function::Create(
 /*Type=*/FuncTy_14,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6JValue4GetJEv", mod); 
func__ZNK3art6JValue4GetJEv->setCallingConv(CallingConv::C);
func__ZNK3art6JValue4GetJEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6JValue4GetJEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6JValue4GetJEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6JValue4GetJEv->setAttributes(func__ZNK3art6JValue4GetJEv_PAL);

Function* func__ZNK3art6JValue4GetLEv = mod->getFunction("_ZNK3art6JValue4GetLEv");
if (!func__ZNK3art6JValue4GetLEv) {
func__ZNK3art6JValue4GetLEv = Function::Create(
 /*Type=*/FuncTy_16,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6JValue4GetLEv", mod); 
func__ZNK3art6JValue4GetLEv->setCallingConv(CallingConv::C);
func__ZNK3art6JValue4GetLEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6JValue4GetLEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6JValue4GetLEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6JValue4GetLEv->setAttributes(func__ZNK3art6JValue4GetLEv_PAL);

Function* func__ZNK3art6JValue4GetSEv = mod->getFunction("_ZNK3art6JValue4GetSEv");
if (!func__ZNK3art6JValue4GetSEv) {
func__ZNK3art6JValue4GetSEv = Function::Create(
 /*Type=*/FuncTy_6,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6JValue4GetSEv", mod); 
func__ZNK3art6JValue4GetSEv->setCallingConv(CallingConv::C);
func__ZNK3art6JValue4GetSEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6JValue4GetSEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6JValue4GetSEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6JValue4GetSEv->setAttributes(func__ZNK3art6JValue4GetSEv_PAL);

Function* func__ZNK3art6JValue4GetZEv = mod->getFunction("_ZNK3art6JValue4GetZEv");
if (!func__ZNK3art6JValue4GetZEv) {
func__ZNK3art6JValue4GetZEv = Function::Create(
 /*Type=*/FuncTy_4,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6JValue4GetZEv", mod); 
func__ZNK3art6JValue4GetZEv->setCallingConv(CallingConv::C);
func__ZNK3art6JValue4GetZEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6JValue4GetZEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6JValue4GetZEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6JValue4GetZEv->setAttributes(func__ZNK3art6JValue4GetZEv_PAL);

Function* func__ZN3art6JValue9GetGCRootEv = mod->getFunction("_ZN3art6JValue9GetGCRootEv");
if (!func__ZN3art6JValue9GetGCRootEv) {
func__ZN3art6JValue9GetGCRootEv = Function::Create(
 /*Type=*/FuncTy_18,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValue9GetGCRootEv", mod); 
func__ZN3art6JValue9GetGCRootEv->setCallingConv(CallingConv::C);
func__ZN3art6JValue9GetGCRootEv->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValue9GetGCRootEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValue9GetGCRootEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValue9GetGCRootEv->setAttributes(func__ZN3art6JValue9GetGCRootEv_PAL);

Function* func__ZN3art6JValue4SetBEa = mod->getFunction("_ZN3art6JValue4SetBEa");
if (!func__ZN3art6JValue4SetBEa) {
func__ZN3art6JValue4SetBEa = Function::Create(
 /*Type=*/FuncTy_19,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValue4SetBEa", mod); 
func__ZN3art6JValue4SetBEa->setCallingConv(CallingConv::C);
func__ZN3art6JValue4SetBEa->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValue4SetBEa_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValue4SetBEa_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValue4SetBEa->setAttributes(func__ZN3art6JValue4SetBEa_PAL);

Function* func__ZN3art6JValue4SetCEt = mod->getFunction("_ZN3art6JValue4SetCEt");
if (!func__ZN3art6JValue4SetCEt) {
func__ZN3art6JValue4SetCEt = Function::Create(
 /*Type=*/FuncTy_20,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValue4SetCEt", mod); 
func__ZN3art6JValue4SetCEt->setCallingConv(CallingConv::C);
func__ZN3art6JValue4SetCEt->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValue4SetCEt_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValue4SetCEt_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValue4SetCEt->setAttributes(func__ZN3art6JValue4SetCEt_PAL);

Function* func__ZN3art6JValue4SetDEd = mod->getFunction("_ZN3art6JValue4SetDEd");
if (!func__ZN3art6JValue4SetDEd) {
func__ZN3art6JValue4SetDEd = Function::Create(
 /*Type=*/FuncTy_21,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValue4SetDEd", mod); 
func__ZN3art6JValue4SetDEd->setCallingConv(CallingConv::C);
func__ZN3art6JValue4SetDEd->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValue4SetDEd_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValue4SetDEd_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValue4SetDEd->setAttributes(func__ZN3art6JValue4SetDEd_PAL);

Function* func__ZN3art6JValue4SetFEf = mod->getFunction("_ZN3art6JValue4SetFEf");
if (!func__ZN3art6JValue4SetFEf) {
func__ZN3art6JValue4SetFEf = Function::Create(
 /*Type=*/FuncTy_22,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValue4SetFEf", mod); 
func__ZN3art6JValue4SetFEf->setCallingConv(CallingConv::C);
func__ZN3art6JValue4SetFEf->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValue4SetFEf_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValue4SetFEf_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValue4SetFEf->setAttributes(func__ZN3art6JValue4SetFEf_PAL);

Function* func__ZN3art6JValue4SetIEi = mod->getFunction("_ZN3art6JValue4SetIEi");
if (!func__ZN3art6JValue4SetIEi) {
func__ZN3art6JValue4SetIEi = Function::Create(
 /*Type=*/FuncTy_23,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValue4SetIEi", mod); 
func__ZN3art6JValue4SetIEi->setCallingConv(CallingConv::C);
func__ZN3art6JValue4SetIEi->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValue4SetIEi_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValue4SetIEi_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValue4SetIEi->setAttributes(func__ZN3art6JValue4SetIEi_PAL);

Function* func__ZN3art6JValue4SetJEl = mod->getFunction("_ZN3art6JValue4SetJEl");
if (!func__ZN3art6JValue4SetJEl) {
func__ZN3art6JValue4SetJEl = Function::Create(
 /*Type=*/FuncTy_24,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValue4SetJEl", mod); 
func__ZN3art6JValue4SetJEl->setCallingConv(CallingConv::C);
func__ZN3art6JValue4SetJEl->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValue4SetJEl_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValue4SetJEl_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValue4SetJEl->setAttributes(func__ZN3art6JValue4SetJEl_PAL);

Function* func__ZN3art6JValue4SetSEs = mod->getFunction("_ZN3art6JValue4SetSEs");
if (!func__ZN3art6JValue4SetSEs) {
func__ZN3art6JValue4SetSEs = Function::Create(
 /*Type=*/FuncTy_20,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValue4SetSEs", mod); 
func__ZN3art6JValue4SetSEs->setCallingConv(CallingConv::C);
func__ZN3art6JValue4SetSEs->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValue4SetSEs_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValue4SetSEs_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValue4SetSEs->setAttributes(func__ZN3art6JValue4SetSEs_PAL);

Function* func__ZN3art6JValue4SetZEh = mod->getFunction("_ZN3art6JValue4SetZEh");
if (!func__ZN3art6JValue4SetZEh) {
func__ZN3art6JValue4SetZEh = Function::Create(
 /*Type=*/FuncTy_19,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6JValue4SetZEh", mod); 
func__ZN3art6JValue4SetZEh->setCallingConv(CallingConv::C);
func__ZN3art6JValue4SetZEh->setAlignment(Align(2));
}
AttributeList func__ZN3art6JValue4SetZEh_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6JValue4SetZEh_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6JValue4SetZEh->setAttributes(func__ZN3art6JValue4SetZEh_PAL);

Function* func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv = mod->getFunction("_ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv");
if (!func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv) {
func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv = Function::Create(
 /*Type=*/FuncTy_25,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv", mod); 
func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv->setCallingConv(CallingConv::C);
func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv->setAttributes(func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv_PAL);

Function* func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_ = mod->getFunction("_ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_");
if (!func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_) {
func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_ = Function::Create(
 /*Type=*/FuncTy_30,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_", mod); 
func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_->setCallingConv(CallingConv::C);
func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_->setAlignment(Align(2));
}
AttributeList func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_->setAttributes(func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2__PAL);

Function* func__ZN3art4LLVM14ArrayPutObjectEPviS1_ = mod->getFunction("_ZN3art4LLVM14ArrayPutObjectEPviS1_");
if (!func__ZN3art4LLVM14ArrayPutObjectEPviS1_) {
func__ZN3art4LLVM14ArrayPutObjectEPviS1_ = Function::Create(
 /*Type=*/FuncTy_34,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM14ArrayPutObjectEPviS1_", mod); // (external, no body)
func__ZN3art4LLVM14ArrayPutObjectEPviS1_->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM14ArrayPutObjectEPviS1__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM14ArrayPutObjectEPviS1__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM14ArrayPutObjectEPviS1_->setAttributes(func__ZN3art4LLVM14ArrayPutObjectEPviS1__PAL);

Function* func__ZN3art4LLVM13ResolveStringEPvj = mod->getFunction("_ZN3art4LLVM13ResolveStringEPvj");
if (!func__ZN3art4LLVM13ResolveStringEPvj) {
func__ZN3art4LLVM13ResolveStringEPvj = Function::Create(
 /*Type=*/FuncTy_35,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM13ResolveStringEPvj", mod); // (external, no body)
func__ZN3art4LLVM13ResolveStringEPvj->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM13ResolveStringEPvj_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM13ResolveStringEPvj_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM13ResolveStringEPvj->setAttributes(func__ZN3art4LLVM13ResolveStringEPvj_PAL);

Function* func__ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz = mod->getFunction("_ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz");
if (!func__ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz) {
func__ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz = Function::Create(
 /*Type=*/FuncTy_36,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz", mod); // (external, no body)
func__ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz->setAttributes(func__ZN3art4LLVM16InvokeMethodSLOWEPvS1_PNS_6JValueEz_PAL);

Function* func__ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz = mod->getFunction("_ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz");
if (!func__ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz) {
func__ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz = Function::Create(
 /*Type=*/FuncTy_36,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz", mod); // (external, no body)
func__ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz->setAttributes(func__ZN3art4LLVM11DebugInvokeEPvS1_PNS_6JValueEz_PAL);

Function* func__ZN3art4LLVM20DebugInvokeJniMethodEPvS1_ = mod->getFunction("_ZN3art4LLVM20DebugInvokeJniMethodEPvS1_");
if (!func__ZN3art4LLVM20DebugInvokeJniMethodEPvS1_) {
func__ZN3art4LLVM20DebugInvokeJniMethodEPvS1_ = Function::Create(
 /*Type=*/FuncTy_37,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM20DebugInvokeJniMethodEPvS1_", mod); // (external, no body)
func__ZN3art4LLVM20DebugInvokeJniMethodEPvS1_->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM20DebugInvokeJniMethodEPvS1__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM20DebugInvokeJniMethodEPvS1__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM20DebugInvokeJniMethodEPvS1_->setAttributes(func__ZN3art4LLVM20DebugInvokeJniMethodEPvS1__PAL);

Function* func__ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz = mod->getFunction("_ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz");
if (!func__ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz) {
func__ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz = Function::Create(
 /*Type=*/FuncTy_36,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz", mod); // (external, no body)
func__ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz->setAttributes(func__ZN3art4LLVM15InvokeJniMethodEPvS1_PNS_6JValueEz_PAL);

Function* func__ZN3art4LLVM10AndroidLogEiPKcz = mod->getFunction("_ZN3art4LLVM10AndroidLogEiPKcz");
if (!func__ZN3art4LLVM10AndroidLogEiPKcz) {
func__ZN3art4LLVM10AndroidLogEiPKcz = Function::Create(
 /*Type=*/FuncTy_38,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM10AndroidLogEiPKcz", mod); // (external, no body)
func__ZN3art4LLVM10AndroidLogEiPKcz->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM10AndroidLogEiPKcz_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM10AndroidLogEiPKcz_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM10AndroidLogEiPKcz->setAttributes(func__ZN3art4LLVM10AndroidLogEiPKcz_PAL);

Function* func__ZN3art4LLVM11AllocObjectEPvj = mod->getFunction("_ZN3art4LLVM11AllocObjectEPvj");
if (!func__ZN3art4LLVM11AllocObjectEPvj) {
func__ZN3art4LLVM11AllocObjectEPvj = Function::Create(
 /*Type=*/FuncTy_35,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM11AllocObjectEPvj", mod); // (external, no body)
func__ZN3art4LLVM11AllocObjectEPvj->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM11AllocObjectEPvj_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM11AllocObjectEPvj_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM11AllocObjectEPvj->setAttributes(func__ZN3art4LLVM11AllocObjectEPvj_PAL);

Function* func__ZN3art4LLVM27AllocObjectWithAccessChecksEPvj = mod->getFunction("_ZN3art4LLVM27AllocObjectWithAccessChecksEPvj");
if (!func__ZN3art4LLVM27AllocObjectWithAccessChecksEPvj) {
func__ZN3art4LLVM27AllocObjectWithAccessChecksEPvj = Function::Create(
 /*Type=*/FuncTy_35,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM27AllocObjectWithAccessChecksEPvj", mod); // (external, no body)
func__ZN3art4LLVM27AllocObjectWithAccessChecksEPvj->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM27AllocObjectWithAccessChecksEPvj_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM27AllocObjectWithAccessChecksEPvj_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM27AllocObjectWithAccessChecksEPvj->setAttributes(func__ZN3art4LLVM27AllocObjectWithAccessChecksEPvj_PAL);

Function* func__ZN3art4LLVM10AllocArrayEPvjj = mod->getFunction("_ZN3art4LLVM10AllocArrayEPvjj");
if (!func__ZN3art4LLVM10AllocArrayEPvjj) {
func__ZN3art4LLVM10AllocArrayEPvjj = Function::Create(
 /*Type=*/FuncTy_39,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM10AllocArrayEPvjj", mod); // (external, no body)
func__ZN3art4LLVM10AllocArrayEPvjj->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM10AllocArrayEPvjj_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM10AllocArrayEPvjj_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM10AllocArrayEPvjj->setAttributes(func__ZN3art4LLVM10AllocArrayEPvjj_PAL);

Function* func__ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj = mod->getFunction("_ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj");
if (!func__ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj) {
func__ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj = Function::Create(
 /*Type=*/FuncTy_39,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj", mod); // (external, no body)
func__ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj->setAttributes(func__ZN3art4LLVM26AllocArrayWithAccessChecksEPvjj_PAL);

Function* func__ZN3art4LLVM9CheckCastEPvS1_ = mod->getFunction("_ZN3art4LLVM9CheckCastEPvS1_");
if (!func__ZN3art4LLVM9CheckCastEPvS1_) {
func__ZN3art4LLVM9CheckCastEPvS1_ = Function::Create(
 /*Type=*/FuncTy_37,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM9CheckCastEPvS1_", mod); // (external, no body)
func__ZN3art4LLVM9CheckCastEPvS1_->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM9CheckCastEPvS1__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM9CheckCastEPvS1__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM9CheckCastEPvS1_->setAttributes(func__ZN3art4LLVM9CheckCastEPvS1__PAL);

Function* func__ZN3art4LLVM10InstanceOfEPvS1_ = mod->getFunction("_ZN3art4LLVM10InstanceOfEPvS1_");
if (!func__ZN3art4LLVM10InstanceOfEPvS1_) {
func__ZN3art4LLVM10InstanceOfEPvS1_ = Function::Create(
 /*Type=*/FuncTy_40,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM10InstanceOfEPvS1_", mod); // (external, no body)
func__ZN3art4LLVM10InstanceOfEPvS1_->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM10InstanceOfEPvS1__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM10InstanceOfEPvS1__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM10InstanceOfEPvS1_->setAttributes(func__ZN3art4LLVM10InstanceOfEPvS1__PAL);

Function* func__ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1_ = mod->getFunction("_ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1_");
if (!func__ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1_) {
func__ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1_ = Function::Create(
 /*Type=*/FuncTy_41,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1_", mod); // (external, no body)
func__ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1_->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1_->setAttributes(func__ZN3art4LLVM29AddToInvokeHistogram_fromLLVMEPvS1_jS1__PAL);

Function* func__ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv = mod->getFunction("_ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv");
if (!func__ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv) {
func__ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv = Function::Create(
 /*Type=*/FuncTy_43,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv", mod); // (external, no body)
func__ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv->setAttributes(func__ZN3art4LLVM15AddJniReferenceEPNS_9JNIEnvExtEPv_PAL);

Function* func__ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject = mod->getFunction("_ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject");
if (!func__ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject) {
func__ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject = Function::Create(
 /*Type=*/FuncTy_609,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject", mod); // (external, no body)
func__ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject->setAttributes(func__ZN3art4LLVM18RemoveJniReferenceEPNS_9JNIEnvExtEP8_jobject_PAL);

Function* func__ZN3art4LLVM25VerifyCurrentThreadMethodEv = mod->getFunction("_ZN3art4LLVM25VerifyCurrentThreadMethodEv");
if (!func__ZN3art4LLVM25VerifyCurrentThreadMethodEv) {
func__ZN3art4LLVM25VerifyCurrentThreadMethodEv = Function::Create(
 /*Type=*/FuncTy_549,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM25VerifyCurrentThreadMethodEv", mod); // (external, no body)
func__ZN3art4LLVM25VerifyCurrentThreadMethodEv->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM25VerifyCurrentThreadMethodEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM25VerifyCurrentThreadMethodEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM25VerifyCurrentThreadMethodEv->setAttributes(func__ZN3art4LLVM25VerifyCurrentThreadMethodEv_PAL);

Function* func__ZN3art4LLVM12VerifyThreadEPv = mod->getFunction("_ZN3art4LLVM12VerifyThreadEPv");
if (!func__ZN3art4LLVM12VerifyThreadEPv) {
func__ZN3art4LLVM12VerifyThreadEPv = Function::Create(
 /*Type=*/FuncTy_553,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM12VerifyThreadEPv", mod); // (external, no body)
func__ZN3art4LLVM12VerifyThreadEPv->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM12VerifyThreadEPv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM12VerifyThreadEPv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM12VerifyThreadEPv->setAttributes(func__ZN3art4LLVM12VerifyThreadEPv_PAL);

Function* func__ZN3art4LLVM12VerifyStringEPv = mod->getFunction("_ZN3art4LLVM12VerifyStringEPv");
if (!func__ZN3art4LLVM12VerifyStringEPv) {
func__ZN3art4LLVM12VerifyStringEPv = Function::Create(
 /*Type=*/FuncTy_553,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM12VerifyStringEPv", mod); // (external, no body)
func__ZN3art4LLVM12VerifyStringEPv->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM12VerifyStringEPv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM12VerifyStringEPv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM12VerifyStringEPv->setAttributes(func__ZN3art4LLVM12VerifyStringEPv_PAL);

Function* func__ZN3art4LLVM15VerifyBssObjectEPv = mod->getFunction("_ZN3art4LLVM15VerifyBssObjectEPv");
if (!func__ZN3art4LLVM15VerifyBssObjectEPv) {
func__ZN3art4LLVM15VerifyBssObjectEPv = Function::Create(
 /*Type=*/FuncTy_553,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM15VerifyBssObjectEPv", mod); // (external, no body)
func__ZN3art4LLVM15VerifyBssObjectEPv->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM15VerifyBssObjectEPv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM15VerifyBssObjectEPv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM15VerifyBssObjectEPv->setAttributes(func__ZN3art4LLVM15VerifyBssObjectEPv_PAL);

Function* func__ZNK3art9JNIEnvExt7GetSelfEv = mod->getFunction("_ZNK3art9JNIEnvExt7GetSelfEv");
if (!func__ZNK3art9JNIEnvExt7GetSelfEv) {
func__ZNK3art9JNIEnvExt7GetSelfEv = Function::Create(
 /*Type=*/FuncTy_610,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK3art9JNIEnvExt7GetSelfEv", mod); 
func__ZNK3art9JNIEnvExt7GetSelfEv->setCallingConv(CallingConv::C);
func__ZNK3art9JNIEnvExt7GetSelfEv->setAlignment(Align(2));
}
AttributeList func__ZNK3art9JNIEnvExt7GetSelfEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK3art9JNIEnvExt7GetSelfEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZNK3art9JNIEnvExt7GetSelfEv->setAttributes(func__ZNK3art9JNIEnvExt7GetSelfEv_PAL);

Function* func__ZN3art4LLVM15StringCompareToEPvS1_ = mod->getFunction("_ZN3art4LLVM15StringCompareToEPvS1_");
if (!func__ZN3art4LLVM15StringCompareToEPvS1_) {
func__ZN3art4LLVM15StringCompareToEPvS1_ = Function::Create(
 /*Type=*/FuncTy_543,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM15StringCompareToEPvS1_", mod); // (external, no body)
func__ZN3art4LLVM15StringCompareToEPvS1_->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM15StringCompareToEPvS1__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM15StringCompareToEPvS1__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM15StringCompareToEPvS1_->setAttributes(func__ZN3art4LLVM15StringCompareToEPvS1__PAL);

Function* func__ZN3art4LLVM17GetDeclaringClassEPv = mod->getFunction("_ZN3art4LLVM17GetDeclaringClassEPv");
if (!func__ZN3art4LLVM17GetDeclaringClassEPv) {
func__ZN3art4LLVM17GetDeclaringClassEPv = Function::Create(
 /*Type=*/FuncTy_460,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM17GetDeclaringClassEPv", mod); // (external, no body)
func__ZN3art4LLVM17GetDeclaringClassEPv->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM17GetDeclaringClassEPv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM17GetDeclaringClassEPv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM17GetDeclaringClassEPv->setAttributes(func__ZN3art4LLVM17GetDeclaringClassEPv_PAL);

Function* func__ZN3art4LLVM10workaroundEv = mod->getFunction("_ZN3art4LLVM10workaroundEv");
if (!func__ZN3art4LLVM10workaroundEv) {
func__ZN3art4LLVM10workaroundEv = Function::Create(
 /*Type=*/FuncTy_549,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM10workaroundEv", mod); // (external, no body)
func__ZN3art4LLVM10workaroundEv->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM10workaroundEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM10workaroundEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM10workaroundEv->setAttributes(func__ZN3art4LLVM10workaroundEv_PAL);

Function* func__ZN3art4LLVM12workaroundIIEii = mod->getFunction("_ZN3art4LLVM12workaroundIIEii");
if (!func__ZN3art4LLVM12workaroundIIEii) {
func__ZN3art4LLVM12workaroundIIEii = Function::Create(
 /*Type=*/FuncTy_551,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM12workaroundIIEii", mod); // (external, no body)
func__ZN3art4LLVM12workaroundIIEii->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM12workaroundIIEii_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM12workaroundIIEii_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM12workaroundIIEii->setAttributes(func__ZN3art4LLVM12workaroundIIEii_PAL);

Function* func__ZN3art4LLVM12SetJniMethodEPv = mod->getFunction("_ZN3art4LLVM12SetJniMethodEPv");
if (!func__ZN3art4LLVM12SetJniMethodEPv) {
func__ZN3art4LLVM12SetJniMethodEPv = Function::Create(
 /*Type=*/FuncTy_553,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM12SetJniMethodEPv", mod); // (external, no body)
func__ZN3art4LLVM12SetJniMethodEPv->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM12SetJniMethodEPv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM12SetJniMethodEPv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM12SetJniMethodEPv->setAttributes(func__ZN3art4LLVM12SetJniMethodEPv_PAL);

Function* func__ZN3art4LLVM15EnableDebugLLVMEv = mod->getFunction("_ZN3art4LLVM15EnableDebugLLVMEv");
if (!func__ZN3art4LLVM15EnableDebugLLVMEv) {
func__ZN3art4LLVM15EnableDebugLLVMEv = Function::Create(
 /*Type=*/FuncTy_549,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZN3art4LLVM15EnableDebugLLVMEv", mod); // (external, no body)
func__ZN3art4LLVM15EnableDebugLLVMEv->setCallingConv(CallingConv::C);
}
AttributeList func__ZN3art4LLVM15EnableDebugLLVMEv_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art4LLVM15EnableDebugLLVMEv_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art4LLVM15EnableDebugLLVMEv->setAttributes(func__ZN3art4LLVM15EnableDebugLLVMEv_PAL);

Function* func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj = mod->getFunction("_ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj");
if (!func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj) {
func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj = Function::Create(
 /*Type=*/FuncTy_29,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj", mod); 
func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj->setCallingConv(CallingConv::C);
func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj->setAlignment(Align(2));
}
AttributeList func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj_PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj_PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj->setAttributes(func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj_PAL);

Function* func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_ = mod->getFunction("_ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_");
if (!func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_) {
func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_ = Function::Create(
 /*Type=*/FuncTy_33,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_", mod); 
func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_->setCallingConv(CallingConv::C);
func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_->setAlignment(Align(2));
}
AttributeList func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_->setAttributes(func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2__PAL);

Function* func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_ = mod->getFunction("_ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_");
if (!func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_) {
func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_ = Function::Create(
 /*Type=*/FuncTy_615,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_", mod); 
func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_->setCallingConv(CallingConv::C);
func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_->setAlignment(Align(2));
}
AttributeList func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_->setAttributes(func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2__PAL);

Function* func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_ = mod->getFunction("_ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_");
if (!func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_) {
func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_ = Function::Create(
 /*Type=*/FuncTy_617,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_", mod); 
func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_->setCallingConv(CallingConv::C);
func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_->setAlignment(Align(2));
}
AttributeList func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2__PAL;
{
 SmallVector<AttributeList, 4> Attrs;
 AttributeList PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeList::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2__PAL = AttributeList::get(mod->getContext(), Attrs);
 
}
func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_->setAttributes(func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2__PAL);

// Global Variable Declarations


// Constant Definitions
ConstantInt* const_int32_618 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1"), 10));
ConstantInt* const_int64_619 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("0"), 10));
ConstantInt* const_int64_620 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("56"), 10));
ConstantInt* const_int64_621 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("32"), 10));
ConstantInt* const_int64_622 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("48"), 10));
ConstantInt* const_int32_623 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("0"), 10));

// Global Variable Definitions

// Function Definitions

// Function: _ZN3art6JValueC2Ev (func__ZN3art6JValueC2Ev)
{
 Function::arg_iterator args = func__ZN3art6JValueC2Ev->arg_begin();
 Argument* ptr_arg = &*args++;
 ptr_arg->setName("arg");
 
 BasicBlock* label_bb = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValueC2Ev,0);
 
 // Block bb (label_bb)
 AllocaInst* ptr_tmp = new AllocaInst(PointerTy_1, 0, "tmp", label_bb);
 ptr_tmp->setAlignment(Align(8));
 StoreInst* void_624 = new StoreInst(ptr_arg, ptr_tmp, false, label_bb);
 void_624->setAlignment(Align(8));
 LoadInst* ptr_tmp1 = new LoadInst(ptr_tmp, "tmp1", false, label_bb);
 ptr_tmp1->setAlignment(Align(8));
 CastInst* ptr_tmp2 = new BitCastInst(ptr_tmp1, PointerTy_3, "tmp2", label_bb);
 StoreInst* void_625 = new StoreInst(const_int64_619, ptr_tmp2, false, label_bb);
 void_625->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), label_bb);
 
}

// Function: _ZNK3art6JValue4GetBEv (func__ZNK3art6JValue4GetBEv)
{
 Function::arg_iterator args = func__ZNK3art6JValue4GetBEv->arg_begin();
 Argument* ptr_arg_627 = &*args++;
 ptr_arg_627->setName("arg");
 
 BasicBlock* label_bb_628 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6JValue4GetBEv,0);
 
 // Block bb (label_bb_628)
 AllocaInst* ptr_tmp_629 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_628);
 ptr_tmp_629->setAlignment(Align(8));
 StoreInst* void_630 = new StoreInst(ptr_arg_627, ptr_tmp_629, false, label_bb_628);
 void_630->setAlignment(Align(8));
 LoadInst* ptr_tmp1_631 = new LoadInst(ptr_tmp_629, "tmp1", false, label_bb_628);
 ptr_tmp1_631->setAlignment(Align(8));
 CastInst* ptr_tmp2_632 = new BitCastInst(ptr_tmp1_631, PointerTy_5, "tmp2", label_bb_628);
 LoadInst* int8_tmp3 = new LoadInst(ptr_tmp2_632, "tmp3", false, label_bb_628);
 int8_tmp3->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), int8_tmp3, label_bb_628);
 
}

// Function: _ZNK3art6JValue4GetCEv (func__ZNK3art6JValue4GetCEv)
{
 Function::arg_iterator args = func__ZNK3art6JValue4GetCEv->arg_begin();
 Argument* ptr_arg_634 = &*args++;
 ptr_arg_634->setName("arg");
 
 BasicBlock* label_bb_635 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6JValue4GetCEv,0);
 
 // Block bb (label_bb_635)
 AllocaInst* ptr_tmp_636 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_635);
 ptr_tmp_636->setAlignment(Align(8));
 StoreInst* void_637 = new StoreInst(ptr_arg_634, ptr_tmp_636, false, label_bb_635);
 void_637->setAlignment(Align(8));
 LoadInst* ptr_tmp1_638 = new LoadInst(ptr_tmp_636, "tmp1", false, label_bb_635);
 ptr_tmp1_638->setAlignment(Align(8));
 CastInst* ptr_tmp2_639 = new BitCastInst(ptr_tmp1_638, PointerTy_7, "tmp2", label_bb_635);
 LoadInst* int16_tmp3 = new LoadInst(ptr_tmp2_639, "tmp3", false, label_bb_635);
 int16_tmp3->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), int16_tmp3, label_bb_635);
 
}

// Function: _ZNK3art6JValue4GetDEv (func__ZNK3art6JValue4GetDEv)
{
 Function::arg_iterator args = func__ZNK3art6JValue4GetDEv->arg_begin();
 Argument* ptr_arg_641 = &*args++;
 ptr_arg_641->setName("arg");
 
 BasicBlock* label_bb_642 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6JValue4GetDEv,0);
 
 // Block bb (label_bb_642)
 AllocaInst* ptr_tmp_643 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_642);
 ptr_tmp_643->setAlignment(Align(8));
 StoreInst* void_644 = new StoreInst(ptr_arg_641, ptr_tmp_643, false, label_bb_642);
 void_644->setAlignment(Align(8));
 LoadInst* ptr_tmp1_645 = new LoadInst(ptr_tmp_643, "tmp1", false, label_bb_642);
 ptr_tmp1_645->setAlignment(Align(8));
 CastInst* ptr_tmp2_646 = new BitCastInst(ptr_tmp1_645, PointerTy_9, "tmp2", label_bb_642);
 LoadInst* double_tmp3 = new LoadInst(ptr_tmp2_646, "tmp3", false, label_bb_642);
 double_tmp3->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), double_tmp3, label_bb_642);
 
}

// Function: _ZNK3art6JValue4GetFEv (func__ZNK3art6JValue4GetFEv)
{
 Function::arg_iterator args = func__ZNK3art6JValue4GetFEv->arg_begin();
 Argument* ptr_arg_648 = &*args++;
 ptr_arg_648->setName("arg");
 
 BasicBlock* label_bb_649 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6JValue4GetFEv,0);
 
 // Block bb (label_bb_649)
 AllocaInst* ptr_tmp_650 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_649);
 ptr_tmp_650->setAlignment(Align(8));
 StoreInst* void_651 = new StoreInst(ptr_arg_648, ptr_tmp_650, false, label_bb_649);
 void_651->setAlignment(Align(8));
 LoadInst* ptr_tmp1_652 = new LoadInst(ptr_tmp_650, "tmp1", false, label_bb_649);
 ptr_tmp1_652->setAlignment(Align(8));
 CastInst* ptr_tmp2_653 = new BitCastInst(ptr_tmp1_652, PointerTy_11, "tmp2", label_bb_649);
 LoadInst* float_tmp3 = new LoadInst(ptr_tmp2_653, "tmp3", false, label_bb_649);
 float_tmp3->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), float_tmp3, label_bb_649);
 
}

// Function: _ZNK3art6JValue4GetIEv (func__ZNK3art6JValue4GetIEv)
{
 Function::arg_iterator args = func__ZNK3art6JValue4GetIEv->arg_begin();
 Argument* ptr_arg_655 = &*args++;
 ptr_arg_655->setName("arg");
 
 BasicBlock* label_bb_656 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6JValue4GetIEv,0);
 
 // Block bb (label_bb_656)
 AllocaInst* ptr_tmp_657 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_656);
 ptr_tmp_657->setAlignment(Align(8));
 StoreInst* void_658 = new StoreInst(ptr_arg_655, ptr_tmp_657, false, label_bb_656);
 void_658->setAlignment(Align(8));
 LoadInst* ptr_tmp1_659 = new LoadInst(ptr_tmp_657, "tmp1", false, label_bb_656);
 ptr_tmp1_659->setAlignment(Align(8));
 CastInst* ptr_tmp2_660 = new BitCastInst(ptr_tmp1_659, PointerTy_13, "tmp2", label_bb_656);
 LoadInst* int32_tmp3 = new LoadInst(ptr_tmp2_660, "tmp3", false, label_bb_656);
 int32_tmp3->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), int32_tmp3, label_bb_656);
 
}

// Function: _ZNK3art6JValue4GetJEv (func__ZNK3art6JValue4GetJEv)
{
 Function::arg_iterator args = func__ZNK3art6JValue4GetJEv->arg_begin();
 Argument* ptr_arg_662 = &*args++;
 ptr_arg_662->setName("arg");
 
 BasicBlock* label_bb_663 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6JValue4GetJEv,0);
 
 // Block bb (label_bb_663)
 AllocaInst* ptr_tmp_664 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_663);
 ptr_tmp_664->setAlignment(Align(8));
 StoreInst* void_665 = new StoreInst(ptr_arg_662, ptr_tmp_664, false, label_bb_663);
 void_665->setAlignment(Align(8));
 LoadInst* ptr_tmp1_666 = new LoadInst(ptr_tmp_664, "tmp1", false, label_bb_663);
 ptr_tmp1_666->setAlignment(Align(8));
 CastInst* ptr_tmp2_667 = new BitCastInst(ptr_tmp1_666, PointerTy_3, "tmp2", label_bb_663);
 LoadInst* int64_tmp3 = new LoadInst(ptr_tmp2_667, "tmp3", false, label_bb_663);
 int64_tmp3->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), int64_tmp3, label_bb_663);
 
}

// Function: _ZNK3art6JValue4GetLEv (func__ZNK3art6JValue4GetLEv)
{
 Function::arg_iterator args = func__ZNK3art6JValue4GetLEv->arg_begin();
 Argument* ptr_arg_669 = &*args++;
 ptr_arg_669->setName("arg");
 
 BasicBlock* label_bb_670 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6JValue4GetLEv,0);
 
 // Block bb (label_bb_670)
 AllocaInst* ptr_tmp_671 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_670);
 ptr_tmp_671->setAlignment(Align(8));
 StoreInst* void_672 = new StoreInst(ptr_arg_669, ptr_tmp_671, false, label_bb_670);
 void_672->setAlignment(Align(8));
 LoadInst* ptr_tmp1_673 = new LoadInst(ptr_tmp_671, "tmp1", false, label_bb_670);
 ptr_tmp1_673->setAlignment(Align(8));
 CastInst* ptr_tmp2_674 = new BitCastInst(ptr_tmp1_673, PointerTy_17, "tmp2", label_bb_670);
 LoadInst* ptr_tmp3 = new LoadInst(ptr_tmp2_674, "tmp3", false, label_bb_670);
 ptr_tmp3->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), ptr_tmp3, label_bb_670);
 
}

// Function: _ZNK3art6JValue4GetSEv (func__ZNK3art6JValue4GetSEv)
{
 Function::arg_iterator args = func__ZNK3art6JValue4GetSEv->arg_begin();
 Argument* ptr_arg_676 = &*args++;
 ptr_arg_676->setName("arg");
 
 BasicBlock* label_bb_677 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6JValue4GetSEv,0);
 
 // Block bb (label_bb_677)
 AllocaInst* ptr_tmp_678 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_677);
 ptr_tmp_678->setAlignment(Align(8));
 StoreInst* void_679 = new StoreInst(ptr_arg_676, ptr_tmp_678, false, label_bb_677);
 void_679->setAlignment(Align(8));
 LoadInst* ptr_tmp1_680 = new LoadInst(ptr_tmp_678, "tmp1", false, label_bb_677);
 ptr_tmp1_680->setAlignment(Align(8));
 CastInst* ptr_tmp2_681 = new BitCastInst(ptr_tmp1_680, PointerTy_7, "tmp2", label_bb_677);
 LoadInst* int16_tmp3_682 = new LoadInst(ptr_tmp2_681, "tmp3", false, label_bb_677);
 int16_tmp3_682->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), int16_tmp3_682, label_bb_677);
 
}

// Function: _ZNK3art6JValue4GetZEv (func__ZNK3art6JValue4GetZEv)
{
 Function::arg_iterator args = func__ZNK3art6JValue4GetZEv->arg_begin();
 Argument* ptr_arg_684 = &*args++;
 ptr_arg_684->setName("arg");
 
 BasicBlock* label_bb_685 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6JValue4GetZEv,0);
 
 // Block bb (label_bb_685)
 AllocaInst* ptr_tmp_686 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_685);
 ptr_tmp_686->setAlignment(Align(8));
 StoreInst* void_687 = new StoreInst(ptr_arg_684, ptr_tmp_686, false, label_bb_685);
 void_687->setAlignment(Align(8));
 LoadInst* ptr_tmp1_688 = new LoadInst(ptr_tmp_686, "tmp1", false, label_bb_685);
 ptr_tmp1_688->setAlignment(Align(8));
 CastInst* ptr_tmp2_689 = new BitCastInst(ptr_tmp1_688, PointerTy_5, "tmp2", label_bb_685);
 LoadInst* int8_tmp3_690 = new LoadInst(ptr_tmp2_689, "tmp3", false, label_bb_685);
 int8_tmp3_690->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), int8_tmp3_690, label_bb_685);
 
}

// Function: _ZN3art6JValue9GetGCRootEv (func__ZN3art6JValue9GetGCRootEv)
{
 Function::arg_iterator args = func__ZN3art6JValue9GetGCRootEv->arg_begin();
 Argument* ptr_arg_692 = &*args++;
 ptr_arg_692->setName("arg");
 
 BasicBlock* label_bb_693 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValue9GetGCRootEv,0);
 
 // Block bb (label_bb_693)
 AllocaInst* ptr_tmp_694 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_693);
 ptr_tmp_694->setAlignment(Align(8));
 StoreInst* void_695 = new StoreInst(ptr_arg_692, ptr_tmp_694, false, label_bb_693);
 void_695->setAlignment(Align(8));
 LoadInst* ptr_tmp1_696 = new LoadInst(ptr_tmp_694, "tmp1", false, label_bb_693);
 ptr_tmp1_696->setAlignment(Align(8));
 CastInst* ptr_tmp2_697 = new BitCastInst(ptr_tmp1_696, PointerTy_17, "tmp2", label_bb_693);
 ReturnInst::Create(mod->getContext(), ptr_tmp2_697, label_bb_693);
 
}

// Function: _ZN3art6JValue4SetBEa (func__ZN3art6JValue4SetBEa)
{
 Function::arg_iterator args = func__ZN3art6JValue4SetBEa->arg_begin();
 Argument* ptr_arg_699 = &*args++;
 ptr_arg_699->setName("arg");
 Argument* int8_arg1 = &*args++;
 int8_arg1->setName("arg1");
 
 BasicBlock* label_bb_700 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValue4SetBEa,0);
 
 // Block bb (label_bb_700)
 AllocaInst* ptr_tmp_701 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_700);
 ptr_tmp_701->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_702 = new AllocaInst(IntegerType::get(mod->getContext(), 8), 0, "tmp2", label_bb_700);
 ptr_tmp2_702->setAlignment(Align(1));
 StoreInst* void_703 = new StoreInst(ptr_arg_699, ptr_tmp_701, false, label_bb_700);
 void_703->setAlignment(Align(8));
 StoreInst* void_704 = new StoreInst(int8_arg1, ptr_tmp2_702, false, label_bb_700);
 void_704->setAlignment(Align(1));
 LoadInst* ptr_tmp3_705 = new LoadInst(ptr_tmp_701, "tmp3", false, label_bb_700);
 ptr_tmp3_705->setAlignment(Align(8));
 LoadInst* int8_tmp4 = new LoadInst(ptr_tmp2_702, "tmp4", false, label_bb_700);
 int8_tmp4->setAlignment(Align(1));
 CastInst* int64_tmp5 = new SExtInst(int8_tmp4, IntegerType::get(mod->getContext(), 64), "tmp5", label_bb_700);
 BinaryOperator* int64_tmp6 = BinaryOperator::Create(Instruction::Shl, int64_tmp5, const_int64_620, "tmp6", label_bb_700);
 BinaryOperator* int64_tmp7 = BinaryOperator::Create(Instruction::AShr, int64_tmp6, const_int64_620, "tmp7", label_bb_700);
 CastInst* ptr_tmp8 = new BitCastInst(ptr_tmp3_705, PointerTy_3, "tmp8", label_bb_700);
 StoreInst* void_706 = new StoreInst(int64_tmp7, ptr_tmp8, false, label_bb_700);
 void_706->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), label_bb_700);
 
}

// Function: _ZN3art6JValue4SetCEt (func__ZN3art6JValue4SetCEt)
{
 Function::arg_iterator args = func__ZN3art6JValue4SetCEt->arg_begin();
 Argument* ptr_arg_708 = &*args++;
 ptr_arg_708->setName("arg");
 Argument* int16_arg1 = &*args++;
 int16_arg1->setName("arg1");
 
 BasicBlock* label_bb_709 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValue4SetCEt,0);
 
 // Block bb (label_bb_709)
 AllocaInst* ptr_tmp_710 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_709);
 ptr_tmp_710->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_711 = new AllocaInst(IntegerType::get(mod->getContext(), 16), 0, "tmp2", label_bb_709);
 ptr_tmp2_711->setAlignment(Align(2));
 StoreInst* void_712 = new StoreInst(ptr_arg_708, ptr_tmp_710, false, label_bb_709);
 void_712->setAlignment(Align(8));
 StoreInst* void_713 = new StoreInst(int16_arg1, ptr_tmp2_711, false, label_bb_709);
 void_713->setAlignment(Align(2));
 LoadInst* ptr_tmp3_714 = new LoadInst(ptr_tmp_710, "tmp3", false, label_bb_709);
 ptr_tmp3_714->setAlignment(Align(8));
 LoadInst* int16_tmp4 = new LoadInst(ptr_tmp2_711, "tmp4", false, label_bb_709);
 int16_tmp4->setAlignment(Align(2));
 CastInst* int64_tmp5_715 = new ZExtInst(int16_tmp4, IntegerType::get(mod->getContext(), 64), "tmp5", label_bb_709);
 CastInst* ptr_tmp6 = new BitCastInst(ptr_tmp3_714, PointerTy_3, "tmp6", label_bb_709);
 StoreInst* void_716 = new StoreInst(int64_tmp5_715, ptr_tmp6, false, label_bb_709);
 void_716->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), label_bb_709);
 
}

// Function: _ZN3art6JValue4SetDEd (func__ZN3art6JValue4SetDEd)
{
 Function::arg_iterator args = func__ZN3art6JValue4SetDEd->arg_begin();
 Argument* ptr_arg_718 = &*args++;
 ptr_arg_718->setName("arg");
 Argument* double_arg1 = &*args++;
 double_arg1->setName("arg1");
 
 BasicBlock* label_bb_719 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValue4SetDEd,0);
 
 // Block bb (label_bb_719)
 AllocaInst* ptr_tmp_720 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_719);
 ptr_tmp_720->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_721 = new AllocaInst(Type::getDoubleTy(mod->getContext()), 0, "tmp2", label_bb_719);
 ptr_tmp2_721->setAlignment(Align(8));
 StoreInst* void_722 = new StoreInst(ptr_arg_718, ptr_tmp_720, false, label_bb_719);
 void_722->setAlignment(Align(8));
 StoreInst* void_723 = new StoreInst(double_arg1, ptr_tmp2_721, false, label_bb_719);
 void_723->setAlignment(Align(8));
 LoadInst* ptr_tmp3_724 = new LoadInst(ptr_tmp_720, "tmp3", false, label_bb_719);
 ptr_tmp3_724->setAlignment(Align(8));
 LoadInst* double_tmp4 = new LoadInst(ptr_tmp2_721, "tmp4", false, label_bb_719);
 double_tmp4->setAlignment(Align(8));
 CastInst* ptr_tmp5 = new BitCastInst(ptr_tmp3_724, PointerTy_9, "tmp5", label_bb_719);
 StoreInst* void_725 = new StoreInst(double_tmp4, ptr_tmp5, false, label_bb_719);
 void_725->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), label_bb_719);
 
}

// Function: _ZN3art6JValue4SetFEf (func__ZN3art6JValue4SetFEf)
{
 Function::arg_iterator args = func__ZN3art6JValue4SetFEf->arg_begin();
 Argument* ptr_arg_727 = &*args++;
 ptr_arg_727->setName("arg");
 Argument* float_arg1 = &*args++;
 float_arg1->setName("arg1");
 
 BasicBlock* label_bb_728 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValue4SetFEf,0);
 
 // Block bb (label_bb_728)
 AllocaInst* ptr_tmp_729 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_728);
 ptr_tmp_729->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_730 = new AllocaInst(Type::getFloatTy(mod->getContext()), 0, "tmp2", label_bb_728);
 ptr_tmp2_730->setAlignment(Align(4));
 StoreInst* void_731 = new StoreInst(ptr_arg_727, ptr_tmp_729, false, label_bb_728);
 void_731->setAlignment(Align(8));
 StoreInst* void_732 = new StoreInst(float_arg1, ptr_tmp2_730, false, label_bb_728);
 void_732->setAlignment(Align(4));
 LoadInst* ptr_tmp3_733 = new LoadInst(ptr_tmp_729, "tmp3", false, label_bb_728);
 ptr_tmp3_733->setAlignment(Align(8));
 LoadInst* float_tmp4 = new LoadInst(ptr_tmp2_730, "tmp4", false, label_bb_728);
 float_tmp4->setAlignment(Align(4));
 CastInst* ptr_tmp5_734 = new BitCastInst(ptr_tmp3_733, PointerTy_11, "tmp5", label_bb_728);
 StoreInst* void_735 = new StoreInst(float_tmp4, ptr_tmp5_734, false, label_bb_728);
 void_735->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), label_bb_728);
 
}

// Function: _ZN3art6JValue4SetIEi (func__ZN3art6JValue4SetIEi)
{
 Function::arg_iterator args = func__ZN3art6JValue4SetIEi->arg_begin();
 Argument* ptr_arg_737 = &*args++;
 ptr_arg_737->setName("arg");
 Argument* int32_arg1 = &*args++;
 int32_arg1->setName("arg1");
 
 BasicBlock* label_bb_738 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValue4SetIEi,0);
 
 // Block bb (label_bb_738)
 AllocaInst* ptr_tmp_739 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_738);
 ptr_tmp_739->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_740 = new AllocaInst(IntegerType::get(mod->getContext(), 32), 0, "tmp2", label_bb_738);
 ptr_tmp2_740->setAlignment(Align(4));
 StoreInst* void_741 = new StoreInst(ptr_arg_737, ptr_tmp_739, false, label_bb_738);
 void_741->setAlignment(Align(8));
 StoreInst* void_742 = new StoreInst(int32_arg1, ptr_tmp2_740, false, label_bb_738);
 void_742->setAlignment(Align(4));
 LoadInst* ptr_tmp3_743 = new LoadInst(ptr_tmp_739, "tmp3", false, label_bb_738);
 ptr_tmp3_743->setAlignment(Align(8));
 LoadInst* int32_tmp4 = new LoadInst(ptr_tmp2_740, "tmp4", false, label_bb_738);
 int32_tmp4->setAlignment(Align(4));
 CastInst* int64_tmp5_744 = new SExtInst(int32_tmp4, IntegerType::get(mod->getContext(), 64), "tmp5", label_bb_738);
 BinaryOperator* int64_tmp6_745 = BinaryOperator::Create(Instruction::Shl, int64_tmp5_744, const_int64_621, "tmp6", label_bb_738);
 BinaryOperator* int64_tmp7_746 = BinaryOperator::Create(Instruction::AShr, int64_tmp6_745, const_int64_621, "tmp7", label_bb_738);
 CastInst* ptr_tmp8_747 = new BitCastInst(ptr_tmp3_743, PointerTy_3, "tmp8", label_bb_738);
 StoreInst* void_748 = new StoreInst(int64_tmp7_746, ptr_tmp8_747, false, label_bb_738);
 void_748->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), label_bb_738);
 
}

// Function: _ZN3art6JValue4SetJEl (func__ZN3art6JValue4SetJEl)
{
 Function::arg_iterator args = func__ZN3art6JValue4SetJEl->arg_begin();
 Argument* ptr_arg_750 = &*args++;
 ptr_arg_750->setName("arg");
 Argument* int64_arg1 = &*args++;
 int64_arg1->setName("arg1");
 
 BasicBlock* label_bb_751 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValue4SetJEl,0);
 
 // Block bb (label_bb_751)
 AllocaInst* ptr_tmp_752 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_751);
 ptr_tmp_752->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_753 = new AllocaInst(IntegerType::get(mod->getContext(), 64), 0, "tmp2", label_bb_751);
 ptr_tmp2_753->setAlignment(Align(8));
 StoreInst* void_754 = new StoreInst(ptr_arg_750, ptr_tmp_752, false, label_bb_751);
 void_754->setAlignment(Align(8));
 StoreInst* void_755 = new StoreInst(int64_arg1, ptr_tmp2_753, false, label_bb_751);
 void_755->setAlignment(Align(8));
 LoadInst* ptr_tmp3_756 = new LoadInst(ptr_tmp_752, "tmp3", false, label_bb_751);
 ptr_tmp3_756->setAlignment(Align(8));
 LoadInst* int64_tmp4 = new LoadInst(ptr_tmp2_753, "tmp4", false, label_bb_751);
 int64_tmp4->setAlignment(Align(8));
 CastInst* ptr_tmp5_757 = new BitCastInst(ptr_tmp3_756, PointerTy_3, "tmp5", label_bb_751);
 StoreInst* void_758 = new StoreInst(int64_tmp4, ptr_tmp5_757, false, label_bb_751);
 void_758->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), label_bb_751);
 
}

// Function: _ZN3art6JValue4SetSEs (func__ZN3art6JValue4SetSEs)
{
 Function::arg_iterator args = func__ZN3art6JValue4SetSEs->arg_begin();
 Argument* ptr_arg_760 = &*args++;
 ptr_arg_760->setName("arg");
 Argument* int16_arg1_761 = &*args++;
 int16_arg1_761->setName("arg1");
 
 BasicBlock* label_bb_762 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValue4SetSEs,0);
 
 // Block bb (label_bb_762)
 AllocaInst* ptr_tmp_763 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_762);
 ptr_tmp_763->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_764 = new AllocaInst(IntegerType::get(mod->getContext(), 16), 0, "tmp2", label_bb_762);
 ptr_tmp2_764->setAlignment(Align(2));
 StoreInst* void_765 = new StoreInst(ptr_arg_760, ptr_tmp_763, false, label_bb_762);
 void_765->setAlignment(Align(8));
 StoreInst* void_766 = new StoreInst(int16_arg1_761, ptr_tmp2_764, false, label_bb_762);
 void_766->setAlignment(Align(2));
 LoadInst* ptr_tmp3_767 = new LoadInst(ptr_tmp_763, "tmp3", false, label_bb_762);
 ptr_tmp3_767->setAlignment(Align(8));
 LoadInst* int16_tmp4_768 = new LoadInst(ptr_tmp2_764, "tmp4", false, label_bb_762);
 int16_tmp4_768->setAlignment(Align(2));
 CastInst* int64_tmp5_769 = new SExtInst(int16_tmp4_768, IntegerType::get(mod->getContext(), 64), "tmp5", label_bb_762);
 BinaryOperator* int64_tmp6_770 = BinaryOperator::Create(Instruction::Shl, int64_tmp5_769, const_int64_622, "tmp6", label_bb_762);
 BinaryOperator* int64_tmp7_771 = BinaryOperator::Create(Instruction::AShr, int64_tmp6_770, const_int64_622, "tmp7", label_bb_762);
 CastInst* ptr_tmp8_772 = new BitCastInst(ptr_tmp3_767, PointerTy_3, "tmp8", label_bb_762);
 StoreInst* void_773 = new StoreInst(int64_tmp7_771, ptr_tmp8_772, false, label_bb_762);
 void_773->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), label_bb_762);
 
}

// Function: _ZN3art6JValue4SetZEh (func__ZN3art6JValue4SetZEh)
{
 Function::arg_iterator args = func__ZN3art6JValue4SetZEh->arg_begin();
 Argument* ptr_arg_775 = &*args++;
 ptr_arg_775->setName("arg");
 Argument* int8_arg1_776 = &*args++;
 int8_arg1_776->setName("arg1");
 
 BasicBlock* label_bb_777 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6JValue4SetZEh,0);
 
 // Block bb (label_bb_777)
 AllocaInst* ptr_tmp_778 = new AllocaInst(PointerTy_1, 0, "tmp", label_bb_777);
 ptr_tmp_778->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_779 = new AllocaInst(IntegerType::get(mod->getContext(), 8), 0, "tmp2", label_bb_777);
 ptr_tmp2_779->setAlignment(Align(1));
 StoreInst* void_780 = new StoreInst(ptr_arg_775, ptr_tmp_778, false, label_bb_777);
 void_780->setAlignment(Align(8));
 StoreInst* void_781 = new StoreInst(int8_arg1_776, ptr_tmp2_779, false, label_bb_777);
 void_781->setAlignment(Align(1));
 LoadInst* ptr_tmp3_782 = new LoadInst(ptr_tmp_778, "tmp3", false, label_bb_777);
 ptr_tmp3_782->setAlignment(Align(8));
 LoadInst* int8_tmp4_783 = new LoadInst(ptr_tmp2_779, "tmp4", false, label_bb_777);
 int8_tmp4_783->setAlignment(Align(1));
 CastInst* int64_tmp5_784 = new ZExtInst(int8_tmp4_783, IntegerType::get(mod->getContext(), 64), "tmp5", label_bb_777);
 CastInst* ptr_tmp6_785 = new BitCastInst(ptr_tmp3_782, PointerTy_3, "tmp6", label_bb_777);
 StoreInst* void_786 = new StoreInst(int64_tmp5_784, ptr_tmp6_785, false, label_bb_777);
 void_786->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), label_bb_777);
 
}

// Function: _ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv (func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv)
{
 Function::arg_iterator args = func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv->arg_begin();
 Argument* ptr_arg_788 = &*args++;
 ptr_arg_788->setName("arg");
 
 BasicBlock* label_bb_789 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art6mirror15ObjectReferenceILb0ENS0_6ObjectEE11AsMirrorPtrEv,0);
 
 // Block bb (label_bb_789)
 AllocaInst* ptr_tmp_790 = new AllocaInst(PointerTy_26, 0, "tmp", label_bb_789);
 ptr_tmp_790->setAlignment(Align(8));
 StoreInst* void_791 = new StoreInst(ptr_arg_788, ptr_tmp_790, false, label_bb_789);
 void_791->setAlignment(Align(8));
 LoadInst* ptr_tmp1_792 = new LoadInst(ptr_tmp_790, "tmp1", false, label_bb_789);
 ptr_tmp1_792->setAlignment(Align(8));
 GetElementPtrInst* ptr_tmp2_793 = GetElementPtrInst::Create(StructTy_class_art__mirror__ObjectReference, ptr_tmp1_792, {
  const_int32_623, 
  const_int32_623
 }, "tmp2", label_bb_789);
 LoadInst* int32_tmp3_794 = new LoadInst(ptr_tmp2_793, "tmp3", false, label_bb_789);
 int32_tmp3_794->setAlignment(Align(4));
 CallInst* ptr_tmp4 = CallInst::Create(func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj, int32_tmp3_794, "tmp4", label_bb_789);
 ptr_tmp4->setCallingConv(CallingConv::C);
 ptr_tmp4->setTailCall(false);
 AttributeList ptr_tmp4_PAL;
 ptr_tmp4->setAttributes(ptr_tmp4_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_tmp4, label_bb_789);
 
}

// Function: _ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_ (func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_)
{
 Function::arg_iterator args = func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_->arg_begin();
 Argument* ptr_arg_796 = &*args++;
 ptr_arg_796->setName("arg");
 
 BasicBlock* label_bb_797 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEE13FromMirrorPtrEPS2_,0);
 
 // Block bb (label_bb_797)
 AllocaInst* ptr_tmp_798 = new AllocaInst(StructTy_class_art__mirror__CompressedReference, 0, "tmp", label_bb_797);
 ptr_tmp_798->setAlignment(Align(4));
 AllocaInst* ptr_tmp1_799 = new AllocaInst(PointerTy_15, 0, "tmp1", label_bb_797);
 ptr_tmp1_799->setAlignment(Align(8));
 StoreInst* void_800 = new StoreInst(ptr_arg_796, ptr_tmp1_799, false, label_bb_797);
 void_800->setAlignment(Align(8));
 LoadInst* ptr_tmp2_801 = new LoadInst(ptr_tmp1_799, "tmp2", false, label_bb_797);
 ptr_tmp2_801->setAlignment(Align(8));
 std::vector<Value*> void_802_params;
 void_802_params.push_back(ptr_tmp_798);
 void_802_params.push_back(ptr_tmp2_801);
 CallInst* void_802 = CallInst::Create(func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_, void_802_params, "", label_bb_797);
 void_802->setCallingConv(CallingConv::C);
 void_802->setTailCall(false);
 AttributeList void_802_PAL;
 void_802->setAttributes(void_802_PAL);
 
 GetElementPtrInst* ptr_tmp3_803 = GetElementPtrInst::Create(StructTy_class_art__mirror__CompressedReference, ptr_tmp_798, {
  const_int32_623, 
  const_int32_623
 }, "tmp3", label_bb_797);
 GetElementPtrInst* ptr_tmp4_804 = GetElementPtrInst::Create(StructTy_class_art__mirror__ObjectReference, ptr_tmp3_803, {
  const_int32_623, 
  const_int32_623
 }, "tmp4", label_bb_797);
 LoadInst* int32_tmp5 = new LoadInst(ptr_tmp4_804, "tmp5", false, label_bb_797);
 int32_tmp5->setAlignment(Align(4));
 CastInst* int64_tmp6_805 = new ZExtInst(int32_tmp5, IntegerType::get(mod->getContext(), 64), "tmp6", label_bb_797);
 ReturnInst::Create(mod->getContext(), int64_tmp6_805, label_bb_797);
 
}

// Function: _ZNK3art9JNIEnvExt7GetSelfEv (func__ZNK3art9JNIEnvExt7GetSelfEv)
{
 Function::arg_iterator args = func__ZNK3art9JNIEnvExt7GetSelfEv->arg_begin();
 Argument* ptr_arg_807 = &*args++;
 ptr_arg_807->setName("arg");
 
 BasicBlock* label_bb_808 = BasicBlock::Create(mod->getContext(), "bb",func__ZNK3art9JNIEnvExt7GetSelfEv,0);
 
 // Block bb (label_bb_808)
 AllocaInst* ptr_tmp_809 = new AllocaInst(PointerTy_44, 0, "tmp", label_bb_808);
 ptr_tmp_809->setAlignment(Align(8));
 StoreInst* void_810 = new StoreInst(ptr_arg_807, ptr_tmp_809, false, label_bb_808);
 void_810->setAlignment(Align(8));
 LoadInst* ptr_tmp1_811 = new LoadInst(ptr_tmp_809, "tmp1", false, label_bb_808);
 ptr_tmp1_811->setAlignment(Align(8));
 GetElementPtrInst* ptr_tmp2_812 = GetElementPtrInst::Create(StructTy_class_art__JNIEnvExt, ptr_tmp1_811, {
  const_int32_623, 
  const_int32_618
 }, "tmp2", label_bb_808);
 LoadInst* ptr_tmp3_813 = new LoadInst(ptr_tmp2_812, "tmp3", false, label_bb_808);
 ptr_tmp3_813->setAlignment(Align(8));
 ReturnInst::Create(mod->getContext(), ptr_tmp3_813, label_bb_808);
 
}

// Function: _ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj (func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj)
{
 Function::arg_iterator args = func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj->arg_begin();
 Argument* int32_arg = &*args++;
 int32_arg->setName("arg");
 
 BasicBlock* label_bb_815 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE10DecompressEj,0);
 
 // Block bb (label_bb_815)
 AllocaInst* ptr_tmp_816 = new AllocaInst(IntegerType::get(mod->getContext(), 32), 0, "tmp", label_bb_815);
 ptr_tmp_816->setAlignment(Align(4));
 AllocaInst* ptr_tmp1_817 = new AllocaInst(IntegerType::get(mod->getContext(), 64), 0, "tmp1", label_bb_815);
 ptr_tmp1_817->setAlignment(Align(8));
 StoreInst* void_818 = new StoreInst(int32_arg, ptr_tmp_816, false, label_bb_815);
 void_818->setAlignment(Align(4));
 LoadInst* int32_tmp2 = new LoadInst(ptr_tmp_816, "tmp2", false, label_bb_815);
 int32_tmp2->setAlignment(Align(4));
 CastInst* int64_tmp3_819 = new ZExtInst(int32_tmp2, IntegerType::get(mod->getContext(), 64), "tmp3", label_bb_815);
 StoreInst* void_820 = new StoreInst(int64_tmp3_819, ptr_tmp1_817, false, label_bb_815);
 void_820->setAlignment(Align(8));
 LoadInst* int64_tmp4_821 = new LoadInst(ptr_tmp1_817, "tmp4", false, label_bb_815);
 int64_tmp4_821->setAlignment(Align(8));
 CastInst* ptr_tmp5_822 = new IntToPtrInst(int64_tmp4_821, PointerTy_15, "tmp5", label_bb_815);
 ReturnInst::Create(mod->getContext(), ptr_tmp5_822, label_bb_815);
 
}

// Function: _ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_ (func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_)
{
 Function::arg_iterator args = func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_->arg_begin();
 Argument* ptr_arg_824 = &*args++;
 ptr_arg_824->setName("arg");
 Argument* ptr_arg1 = &*args++;
 ptr_arg1->setName("arg1");
 
 BasicBlock* label_bb_825 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6mirror19CompressedReferenceINS0_6ObjectEEC2EPS2_,0);
 
 // Block bb (label_bb_825)
 AllocaInst* ptr_tmp_826 = new AllocaInst(PointerTy_31, 0, "tmp", label_bb_825);
 ptr_tmp_826->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_827 = new AllocaInst(PointerTy_15, 0, "tmp2", label_bb_825);
 ptr_tmp2_827->setAlignment(Align(8));
 StoreInst* void_828 = new StoreInst(ptr_arg_824, ptr_tmp_826, false, label_bb_825);
 void_828->setAlignment(Align(8));
 StoreInst* void_829 = new StoreInst(ptr_arg1, ptr_tmp2_827, false, label_bb_825);
 void_829->setAlignment(Align(8));
 LoadInst* ptr_tmp3_830 = new LoadInst(ptr_tmp_826, "tmp3", false, label_bb_825);
 ptr_tmp3_830->setAlignment(Align(8));
 CastInst* ptr_tmp4_831 = new BitCastInst(ptr_tmp3_830, PointerTy_26, "tmp4", label_bb_825);
 LoadInst* ptr_tmp5_832 = new LoadInst(ptr_tmp2_827, "tmp5", false, label_bb_825);
 ptr_tmp5_832->setAlignment(Align(8));
 std::vector<Value*> void_833_params;
 void_833_params.push_back(ptr_tmp4_831);
 void_833_params.push_back(ptr_tmp5_832);
 CallInst* void_833 = CallInst::Create(func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_, void_833_params, "", label_bb_825);
 void_833->setCallingConv(CallingConv::C);
 void_833->setTailCall(false);
 AttributeList void_833_PAL;
 void_833->setAttributes(void_833_PAL);
 
 ReturnInst::Create(mod->getContext(), label_bb_825);
 
}

// Function: _ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_ (func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_)
{
 Function::arg_iterator args = func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_->arg_begin();
 Argument* ptr_arg_835 = &*args++;
 ptr_arg_835->setName("arg");
 Argument* ptr_arg1_836 = &*args++;
 ptr_arg1_836->setName("arg1");
 
 BasicBlock* label_bb_837 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6mirror15ObjectReferenceILb0ENS0_6ObjectEEC2EPS2_,0);
 
 // Block bb (label_bb_837)
 AllocaInst* ptr_tmp_838 = new AllocaInst(PointerTy_26, 0, "tmp", label_bb_837);
 ptr_tmp_838->setAlignment(Align(8));
 AllocaInst* ptr_tmp2_839 = new AllocaInst(PointerTy_15, 0, "tmp2", label_bb_837);
 ptr_tmp2_839->setAlignment(Align(8));
 StoreInst* void_840 = new StoreInst(ptr_arg_835, ptr_tmp_838, false, label_bb_837);
 void_840->setAlignment(Align(8));
 StoreInst* void_841 = new StoreInst(ptr_arg1_836, ptr_tmp2_839, false, label_bb_837);
 void_841->setAlignment(Align(8));
 LoadInst* ptr_tmp3_842 = new LoadInst(ptr_tmp_838, "tmp3", false, label_bb_837);
 ptr_tmp3_842->setAlignment(Align(8));
 GetElementPtrInst* ptr_tmp4_843 = GetElementPtrInst::Create(StructTy_class_art__mirror__ObjectReference, ptr_tmp3_842, {
  const_int32_623, 
  const_int32_623
 }, "tmp4", label_bb_837);
 LoadInst* ptr_tmp5_844 = new LoadInst(ptr_tmp2_839, "tmp5", false, label_bb_837);
 ptr_tmp5_844->setAlignment(Align(8));
 CallInst* int32_tmp6 = CallInst::Create(func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_, ptr_tmp5_844, "tmp6", label_bb_837);
 int32_tmp6->setCallingConv(CallingConv::C);
 int32_tmp6->setTailCall(false);
 AttributeList int32_tmp6_PAL;
 int32_tmp6->setAttributes(int32_tmp6_PAL);
 
 StoreInst* void_845 = new StoreInst(int32_tmp6, ptr_tmp4_843, false, label_bb_837);
 void_845->setAlignment(Align(4));
 ReturnInst::Create(mod->getContext(), label_bb_837);
 
}

// Function: _ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_ (func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_)
{
 Function::arg_iterator args = func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_->arg_begin();
 Argument* ptr_arg_847 = &*args++;
 ptr_arg_847->setName("arg");
 
 BasicBlock* label_bb_848 = BasicBlock::Create(mod->getContext(), "bb",func__ZN3art6mirror14PtrCompressionILb0ENS0_6ObjectEE8CompressEPS2_,0);
 
 // Block bb (label_bb_848)
 AllocaInst* ptr_tmp_849 = new AllocaInst(PointerTy_15, 0, "tmp", label_bb_848);
 ptr_tmp_849->setAlignment(Align(8));
 AllocaInst* ptr_tmp1_850 = new AllocaInst(IntegerType::get(mod->getContext(), 64), 0, "tmp1", label_bb_848);
 ptr_tmp1_850->setAlignment(Align(8));
 StoreInst* void_851 = new StoreInst(ptr_arg_847, ptr_tmp_849, false, label_bb_848);
 void_851->setAlignment(Align(8));
 LoadInst* ptr_tmp2_852 = new LoadInst(ptr_tmp_849, "tmp2", false, label_bb_848);
 ptr_tmp2_852->setAlignment(Align(8));
 CastInst* int64_tmp3_853 = new PtrToIntInst(ptr_tmp2_852, IntegerType::get(mod->getContext(), 64), "tmp3", label_bb_848);
 StoreInst* void_854 = new StoreInst(int64_tmp3_853, ptr_tmp1_850, false, label_bb_848);
 void_854->setAlignment(Align(8));
 LoadInst* int64_tmp4_855 = new LoadInst(ptr_tmp1_850, "tmp4", false, label_bb_848);
 int64_tmp4_855->setAlignment(Align(8));
 CastInst* int32_tmp5_856 = new TruncInst(int64_tmp4_855, IntegerType::get(mod->getContext(), 32), "tmp5", label_bb_848);
 ReturnInst::Create(mod->getContext(), int32_tmp5_856, label_bb_848);
 
}

return mod;

}

} // namespace LLVM
} // namespace art
